// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace schmidtw.Vra
{
    /// <summary>
    /// Creates a VMware vRealize Automation GCP cloud account resource.
    /// 
    /// ## Example Usage
    /// ### S
    /// 
    /// The following example shows how to create a GCP cloud account resource.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Vra = schmidtw.Vra;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Vra.CloudAccountGcp("this", new()
    ///     {
    ///         ClientEmail = "client_email",
    ///         Description = "terraform test cloud account gcp",
    ///         PrivateKey = "private_key",
    ///         PrivateKeyId = "private_key_id",
    ///         ProjectId = "project_id",
    ///         Regions = new[]
    ///         {
    ///             "us-west1",
    ///             "us-west2",
    ///         },
    ///         Tags = new[]
    ///         {
    ///             new Vra.Inputs.CloudAccountGcpTagArgs
    ///             {
    ///                 Key = "foo",
    ///                 Value = "bar",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// To import the GCP cloud account, use the ID as in the following example
    /// 
    /// ```sh
    ///  $ pulumi import vra:index/cloudAccountGcp:CloudAccountGcp new_gcp 05956583-6488-4e7d-84c9-92a7b7219a15`
    /// ```
    /// </summary>
    [VraResourceType("vra:index/cloudAccountGcp:CloudAccountGcp")]
    public partial class CloudAccountGcp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// GCP Client email.
        /// </summary>
        [Output("clientEmail")]
        public Output<string> ClientEmail { get; private set; } = null!;

        /// <summary>
        /// Date when entity was created. Date and time format is ISO 8601 and UTC.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Human-friendly description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// HATEOAS of entity.
        /// </summary>
        [Output("links")]
        public Output<ImmutableArray<Outputs.CloudAccountGcpLink>> Links { get; private set; } = null!;

        /// <summary>
        /// Name of GCP cloud account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ID of organization that entity belongs to.
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// Email of entity owner.
        /// </summary>
        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        /// <summary>
        /// GCP Private key.
        /// </summary>
        [Output("privateKey")]
        public Output<string> PrivateKey { get; private set; } = null!;

        /// <summary>
        /// GCP Private key ID.
        /// </summary>
        [Output("privateKeyId")]
        public Output<string> PrivateKeyId { get; private set; } = null!;

        /// <summary>
        /// GCP Project ID.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Set of region names enabled for the cloud account.
        /// </summary>
        [Output("regions")]
        public Output<ImmutableArray<string>> Regions { get; private set; } = null!;

        /// <summary>
        /// Set of tag keys and values to apply to the cloud account.  
        /// Example:[ { "key" : "vmware", "value": "provider" } ]
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.CloudAccountGcpTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a CloudAccountGcp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudAccountGcp(string name, CloudAccountGcpArgs args, CustomResourceOptions? options = null)
            : base("vra:index/cloudAccountGcp:CloudAccountGcp", name, args ?? new CloudAccountGcpArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudAccountGcp(string name, Input<string> id, CloudAccountGcpState? state = null, CustomResourceOptions? options = null)
            : base("vra:index/cloudAccountGcp:CloudAccountGcp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/schmidtw/pulumi-vra/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudAccountGcp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudAccountGcp Get(string name, Input<string> id, CloudAccountGcpState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudAccountGcp(name, id, state, options);
        }
    }

    public sealed class CloudAccountGcpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// GCP Client email.
        /// </summary>
        [Input("clientEmail", required: true)]
        public Input<string> ClientEmail { get; set; } = null!;

        /// <summary>
        /// Human-friendly description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of GCP cloud account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// GCP Private key.
        /// </summary>
        [Input("privateKey", required: true)]
        public Input<string> PrivateKey { get; set; } = null!;

        /// <summary>
        /// GCP Private key ID.
        /// </summary>
        [Input("privateKeyId", required: true)]
        public Input<string> PrivateKeyId { get; set; } = null!;

        /// <summary>
        /// GCP Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("regions", required: true)]
        private InputList<string>? _regions;

        /// <summary>
        /// Set of region names enabled for the cloud account.
        /// </summary>
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        [Input("tags")]
        private InputList<Inputs.CloudAccountGcpTagArgs>? _tags;

        /// <summary>
        /// Set of tag keys and values to apply to the cloud account.  
        /// Example:[ { "key" : "vmware", "value": "provider" } ]
        /// </summary>
        public InputList<Inputs.CloudAccountGcpTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.CloudAccountGcpTagArgs>());
            set => _tags = value;
        }

        public CloudAccountGcpArgs()
        {
        }
        public static new CloudAccountGcpArgs Empty => new CloudAccountGcpArgs();
    }

    public sealed class CloudAccountGcpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// GCP Client email.
        /// </summary>
        [Input("clientEmail")]
        public Input<string>? ClientEmail { get; set; }

        /// <summary>
        /// Date when entity was created. Date and time format is ISO 8601 and UTC.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Human-friendly description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("links")]
        private InputList<Inputs.CloudAccountGcpLinkGetArgs>? _links;

        /// <summary>
        /// HATEOAS of entity.
        /// </summary>
        public InputList<Inputs.CloudAccountGcpLinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.CloudAccountGcpLinkGetArgs>());
            set => _links = value;
        }

        /// <summary>
        /// Name of GCP cloud account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of organization that entity belongs to.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Email of entity owner.
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// GCP Private key.
        /// </summary>
        [Input("privateKey")]
        public Input<string>? PrivateKey { get; set; }

        /// <summary>
        /// GCP Private key ID.
        /// </summary>
        [Input("privateKeyId")]
        public Input<string>? PrivateKeyId { get; set; }

        /// <summary>
        /// GCP Project ID.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("regions")]
        private InputList<string>? _regions;

        /// <summary>
        /// Set of region names enabled for the cloud account.
        /// </summary>
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        [Input("tags")]
        private InputList<Inputs.CloudAccountGcpTagGetArgs>? _tags;

        /// <summary>
        /// Set of tag keys and values to apply to the cloud account.  
        /// Example:[ { "key" : "vmware", "value": "provider" } ]
        /// </summary>
        public InputList<Inputs.CloudAccountGcpTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.CloudAccountGcpTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public CloudAccountGcpState()
        {
        }
        public static new CloudAccountGcpState Empty => new CloudAccountGcpState();
    }
}
