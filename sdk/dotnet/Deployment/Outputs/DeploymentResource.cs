// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vra.Deployment.Outputs
{

    [OutputType]
    public sealed class DeploymentResource
    {
        /// <summary>
        /// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// A list of other resources this resource depends on.
        /// </summary>
        public readonly ImmutableArray<string> DependsOns;
        /// <summary>
        /// A human-friendly description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Expense incurred for the deployment.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeploymentResourceExpense> Expenses;
        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A human-friendly name used as an identifier in APIs that support this option.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of properties in the encoded JSON string format.
        /// </summary>
        public readonly string? PropertiesJson;
        /// <summary>
        /// The current state of the resource. Supported values are `PARTIAL`, `TAINTED`, `OK.`
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The current sync status. Supported values are `SUCCESS`, `MISSING`, `STALE`.
        /// </summary>
        public readonly string? SyncStatus;
        /// <summary>
        /// Type of the resource.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private DeploymentResource(
            string? createdAt,

            ImmutableArray<string> dependsOns,

            string? description,

            ImmutableArray<Outputs.DeploymentResourceExpense> expenses,

            string id,

            string name,

            string? propertiesJson,

            string? state,

            string? syncStatus,

            string? type)
        {
            CreatedAt = createdAt;
            DependsOns = dependsOns;
            Description = description;
            Expenses = expenses;
            Id = id;
            Name = name;
            PropertiesJson = propertiesJson;
            State = state;
            SyncStatus = syncStatus;
            Type = type;
        }
    }
}
