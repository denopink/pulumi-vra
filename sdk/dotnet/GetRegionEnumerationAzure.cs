// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace schmidtw.Vra
{
    public static class GetRegionEnumerationAzure
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### S
        /// 
        /// This is an example of how to lookup a region enumeration data source for Azure cloud account.
        /// 
        /// **Region enumeration data source for Azure**
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.GetRegionEnumerationAzure.Invoke(new()
        ///     {
        ///         ApplicationId = @var.Application_id,
        ///         ApplicationKey = @var.Application_key,
        ///         SubscriptionId = @var.Subscription_id,
        ///         TenantId = @var.Tenant_id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// The region enumeration data source for Azure cloud account supports the following arguments:
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRegionEnumerationAzureResult> InvokeAsync(GetRegionEnumerationAzureArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegionEnumerationAzureResult>("vra:index/getRegionEnumerationAzure:getRegionEnumerationAzure", args ?? new GetRegionEnumerationAzureArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### S
        /// 
        /// This is an example of how to lookup a region enumeration data source for Azure cloud account.
        /// 
        /// **Region enumeration data source for Azure**
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.GetRegionEnumerationAzure.Invoke(new()
        ///     {
        ///         ApplicationId = @var.Application_id,
        ///         ApplicationKey = @var.Application_key,
        ///         SubscriptionId = @var.Subscription_id,
        ///         TenantId = @var.Tenant_id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// The region enumeration data source for Azure cloud account supports the following arguments:
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRegionEnumerationAzureResult> Invoke(GetRegionEnumerationAzureInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRegionEnumerationAzureResult>("vra:index/getRegionEnumerationAzure:getRegionEnumerationAzure", args ?? new GetRegionEnumerationAzureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionEnumerationAzureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Azure Client Application ID
        /// </summary>
        [Input("applicationId", required: true)]
        public string ApplicationId { get; set; } = null!;

        /// <summary>
        /// Azure Client Application Secret Key
        /// </summary>
        [Input("applicationKey", required: true)]
        public string ApplicationKey { get; set; } = null!;

        /// <summary>
        /// Azure Subscription ID
        /// </summary>
        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        /// <summary>
        /// Azure Tenant ID
        /// </summary>
        [Input("tenantId", required: true)]
        public string TenantId { get; set; } = null!;

        public GetRegionEnumerationAzureArgs()
        {
        }
        public static new GetRegionEnumerationAzureArgs Empty => new GetRegionEnumerationAzureArgs();
    }

    public sealed class GetRegionEnumerationAzureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Azure Client Application ID
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// Azure Client Application Secret Key
        /// </summary>
        [Input("applicationKey", required: true)]
        public Input<string> ApplicationKey { get; set; } = null!;

        /// <summary>
        /// Azure Subscription ID
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// Azure Tenant ID
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public GetRegionEnumerationAzureInvokeArgs()
        {
        }
        public static new GetRegionEnumerationAzureInvokeArgs Empty => new GetRegionEnumerationAzureInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegionEnumerationAzureResult
    {
        public readonly string ApplicationId;
        public readonly string ApplicationKey;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A set of Region names to enable provisioning on. Example: northamerica-northeast1
        /// </summary>
        public readonly ImmutableArray<string> Regions;
        public readonly string SubscriptionId;
        public readonly string TenantId;

        [OutputConstructor]
        private GetRegionEnumerationAzureResult(
            string applicationId,

            string applicationKey,

            string id,

            ImmutableArray<string> regions,

            string subscriptionId,

            string tenantId)
        {
            ApplicationId = applicationId;
            ApplicationKey = applicationKey;
            Id = id;
            Regions = regions;
            SubscriptionId = subscriptionId;
            TenantId = tenantId;
        }
    }
}
