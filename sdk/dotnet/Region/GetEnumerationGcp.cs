// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vra.Region
{
    public static class GetEnumerationGcp
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### S
        /// 
        /// This is an example of how to lookup a region enumeration data source for GCP cloud account.
        /// 
        /// **Region enumeration data source for GCP**
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.Region.GetEnumerationGcp.Invoke(new()
        ///     {
        ///         ClientEmail = @var.Client_email,
        ///         PrivateKeyId = @var.Private_key_id,
        ///         PrivateKey = @var.Private_key,
        ///         ProjectId = @var.Project_id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// The region enumeration data source for GCP cloud account supports the following arguments:
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetEnumerationGcpResult> InvokeAsync(GetEnumerationGcpArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEnumerationGcpResult>("vra:region/getEnumerationGcp:getEnumerationGcp", args ?? new GetEnumerationGcpArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### S
        /// 
        /// This is an example of how to lookup a region enumeration data source for GCP cloud account.
        /// 
        /// **Region enumeration data source for GCP**
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.Region.GetEnumerationGcp.Invoke(new()
        ///     {
        ///         ClientEmail = @var.Client_email,
        ///         PrivateKeyId = @var.Private_key_id,
        ///         PrivateKey = @var.Private_key,
        ///         ProjectId = @var.Project_id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// The region enumeration data source for GCP cloud account supports the following arguments:
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetEnumerationGcpResult> Invoke(GetEnumerationGcpInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEnumerationGcpResult>("vra:region/getEnumerationGcp:getEnumerationGcp", args ?? new GetEnumerationGcpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnumerationGcpArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Client E-mail ID.
        /// </summary>
        [Input("clientEmail", required: true)]
        public string ClientEmail { get; set; } = null!;

        /// <summary>
        /// GCP Private key.
        /// </summary>
        [Input("privateKey", required: true)]
        public string PrivateKey { get; set; } = null!;

        /// <summary>
        /// GCP Private key ID.
        /// </summary>
        [Input("privateKeyId", required: true)]
        public string PrivateKeyId { get; set; } = null!;

        /// <summary>
        /// GCP Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetEnumerationGcpArgs()
        {
        }
        public static new GetEnumerationGcpArgs Empty => new GetEnumerationGcpArgs();
    }

    public sealed class GetEnumerationGcpInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Client E-mail ID.
        /// </summary>
        [Input("clientEmail", required: true)]
        public Input<string> ClientEmail { get; set; } = null!;

        /// <summary>
        /// GCP Private key.
        /// </summary>
        [Input("privateKey", required: true)]
        public Input<string> PrivateKey { get; set; } = null!;

        /// <summary>
        /// GCP Private key ID.
        /// </summary>
        [Input("privateKeyId", required: true)]
        public Input<string> PrivateKeyId { get; set; } = null!;

        /// <summary>
        /// GCP Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetEnumerationGcpInvokeArgs()
        {
        }
        public static new GetEnumerationGcpInvokeArgs Empty => new GetEnumerationGcpInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnumerationGcpResult
    {
        public readonly string ClientEmail;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string PrivateKey;
        public readonly string PrivateKeyId;
        public readonly string ProjectId;
        /// <summary>
        /// A set of Region names to enable provisioning on. Example: northamerica-northeast1
        /// </summary>
        public readonly ImmutableArray<string> Regions;

        [OutputConstructor]
        private GetEnumerationGcpResult(
            string clientEmail,

            string id,

            string privateKey,

            string privateKeyId,

            string projectId,

            ImmutableArray<string> regions)
        {
            ClientEmail = clientEmail;
            Id = id;
            PrivateKey = privateKey;
            PrivateKeyId = privateKeyId;
            ProjectId = projectId;
            Regions = regions;
        }
    }
}
