// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vra.Network
{
    /// <summary>
    /// Creates a VMware vRealize Automation network_ip_range resource.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// To import the vRA Network IP range, use the ID as in the following example
    /// 
    /// ```sh
    ///  $ pulumi import vra:network/ipRange:IpRange new_ip_range 05956583-6488-4e7d-84c9-92a7b7219a15`
    /// ```
    /// </summary>
    [VraResourceType("vra:network/ipRange:IpRange")]
    public partial class IpRange : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Date when the entity was created. The date is in ISO 6801 and UTC.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// State object representing a network on a external cloud provider.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// End IP address of the range.
        /// </summary>
        [Output("endIpAddress")]
        public Output<string> EndIpAddress { get; private set; } = null!;

        /// <summary>
        /// External entity Id on the provider side.
        /// </summary>
        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        /// <summary>
        /// Fabric network Id.
        /// </summary>
        [Output("fabricNetworkId")]
        public Output<string?> FabricNetworkId { get; private set; } = null!;

        /// <summary>
        /// IP address version: IPv4 or IPv6. Default: IPv4.
        /// </summary>
        [Output("ipVersion")]
        public Output<string> IpVersion { get; private set; } = null!;

        /// <summary>
        /// HATEOAS of the entity
        /// </summary>
        [Output("links")]
        public Output<ImmutableArray<Outputs.IpRangeLink>> Links { get; private set; } = null!;

        /// <summary>
        /// A human-friendly name used as an identifier in APIs that support this option.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ID of organization that entity belongs to.
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// Start IP address of the range.
        /// </summary>
        [Output("startIpAddress")]
        public Output<string> StartIpAddress { get; private set; } = null!;

        /// <summary>
        /// Set of tag keys and values to apply to the resource.
        /// Example:[ { "key" : "vmware", "value": "provider" } ]
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.IpRangeTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Date when the entity was last updated. The date is ISO 8601 and UTC.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a IpRange resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IpRange(string name, IpRangeArgs args, CustomResourceOptions? options = null)
            : base("vra:network/ipRange:IpRange", name, args ?? new IpRangeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IpRange(string name, Input<string> id, IpRangeState? state = null, CustomResourceOptions? options = null)
            : base("vra:network/ipRange:IpRange", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IpRange resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IpRange Get(string name, Input<string> id, IpRangeState? state = null, CustomResourceOptions? options = null)
        {
            return new IpRange(name, id, state, options);
        }
    }

    public sealed class IpRangeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// State object representing a network on a external cloud provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// End IP address of the range.
        /// </summary>
        [Input("endIpAddress", required: true)]
        public Input<string> EndIpAddress { get; set; } = null!;

        /// <summary>
        /// Fabric network Id.
        /// </summary>
        [Input("fabricNetworkId")]
        public Input<string>? FabricNetworkId { get; set; }

        /// <summary>
        /// IP address version: IPv4 or IPv6. Default: IPv4.
        /// </summary>
        [Input("ipVersion", required: true)]
        public Input<string> IpVersion { get; set; } = null!;

        /// <summary>
        /// A human-friendly name used as an identifier in APIs that support this option.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Start IP address of the range.
        /// </summary>
        [Input("startIpAddress", required: true)]
        public Input<string> StartIpAddress { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.IpRangeTagArgs>? _tags;

        /// <summary>
        /// Set of tag keys and values to apply to the resource.
        /// Example:[ { "key" : "vmware", "value": "provider" } ]
        /// </summary>
        public InputList<Inputs.IpRangeTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.IpRangeTagArgs>());
            set => _tags = value;
        }

        public IpRangeArgs()
        {
        }
        public static new IpRangeArgs Empty => new IpRangeArgs();
    }

    public sealed class IpRangeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Date when the entity was created. The date is in ISO 6801 and UTC.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// State object representing a network on a external cloud provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// End IP address of the range.
        /// </summary>
        [Input("endIpAddress")]
        public Input<string>? EndIpAddress { get; set; }

        /// <summary>
        /// External entity Id on the provider side.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// Fabric network Id.
        /// </summary>
        [Input("fabricNetworkId")]
        public Input<string>? FabricNetworkId { get; set; }

        /// <summary>
        /// IP address version: IPv4 or IPv6. Default: IPv4.
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        [Input("links")]
        private InputList<Inputs.IpRangeLinkGetArgs>? _links;

        /// <summary>
        /// HATEOAS of the entity
        /// </summary>
        public InputList<Inputs.IpRangeLinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.IpRangeLinkGetArgs>());
            set => _links = value;
        }

        /// <summary>
        /// A human-friendly name used as an identifier in APIs that support this option.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of organization that entity belongs to.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Start IP address of the range.
        /// </summary>
        [Input("startIpAddress")]
        public Input<string>? StartIpAddress { get; set; }

        [Input("tags")]
        private InputList<Inputs.IpRangeTagGetArgs>? _tags;

        /// <summary>
        /// Set of tag keys and values to apply to the resource.
        /// Example:[ { "key" : "vmware", "value": "provider" } ]
        /// </summary>
        public InputList<Inputs.IpRangeTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.IpRangeTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Date when the entity was last updated. The date is ISO 8601 and UTC.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public IpRangeState()
        {
        }
        public static new IpRangeState Empty => new IpRangeState();
    }
}
