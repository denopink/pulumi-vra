// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace schmidtw.Vra
{
    /// <summary>
    /// This resource provides a way to create a catalog item entitlement in VMware vRealize Automation.
    /// 
    /// ## Example Usage
    /// ### S
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Vra = schmidtw.Vra;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Vra.CatalogItemEntitlement("this", new()
    ///     {
    ///         CatalogItemId = @var.Catalog_item_id,
    ///         ProjectId = @var.Project_id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Catalog item entitlement can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import vra:index/catalogItemEntitlement:CatalogItemEntitlement this 05956583-6488-4e7d-84c9-92a7b7219a15`
    /// ```
    /// </summary>
    [VraResourceType("vra:index/catalogItemEntitlement:CatalogItemEntitlement")]
    public partial class CatalogItemEntitlement : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The id of the catalog item to create the entitlement.
        /// </summary>
        [Output("catalogItemId")]
        public Output<string> CatalogItemId { get; private set; } = null!;

        /// <summary>
        /// Represents a catalog item that is linked to a project via an entitlement.
        /// </summary>
        [Output("definitions")]
        public Output<ImmutableArray<Outputs.CatalogItemEntitlementDefinition>> Definitions { get; private set; } = null!;

        /// <summary>
        /// The id of the project this entity belongs to.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;


        /// <summary>
        /// Create a CatalogItemEntitlement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CatalogItemEntitlement(string name, CatalogItemEntitlementArgs args, CustomResourceOptions? options = null)
            : base("vra:index/catalogItemEntitlement:CatalogItemEntitlement", name, args ?? new CatalogItemEntitlementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CatalogItemEntitlement(string name, Input<string> id, CatalogItemEntitlementState? state = null, CustomResourceOptions? options = null)
            : base("vra:index/catalogItemEntitlement:CatalogItemEntitlement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/schmidtw/pulumi-vra/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CatalogItemEntitlement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CatalogItemEntitlement Get(string name, Input<string> id, CatalogItemEntitlementState? state = null, CustomResourceOptions? options = null)
        {
            return new CatalogItemEntitlement(name, id, state, options);
        }
    }

    public sealed class CatalogItemEntitlementArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the catalog item to create the entitlement.
        /// </summary>
        [Input("catalogItemId", required: true)]
        public Input<string> CatalogItemId { get; set; } = null!;

        /// <summary>
        /// The id of the project this entity belongs to.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public CatalogItemEntitlementArgs()
        {
        }
        public static new CatalogItemEntitlementArgs Empty => new CatalogItemEntitlementArgs();
    }

    public sealed class CatalogItemEntitlementState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the catalog item to create the entitlement.
        /// </summary>
        [Input("catalogItemId")]
        public Input<string>? CatalogItemId { get; set; }

        [Input("definitions")]
        private InputList<Inputs.CatalogItemEntitlementDefinitionGetArgs>? _definitions;

        /// <summary>
        /// Represents a catalog item that is linked to a project via an entitlement.
        /// </summary>
        public InputList<Inputs.CatalogItemEntitlementDefinitionGetArgs> Definitions
        {
            get => _definitions ?? (_definitions = new InputList<Inputs.CatalogItemEntitlementDefinitionGetArgs>());
            set => _definitions = value;
        }

        /// <summary>
        /// The id of the project this entity belongs to.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        public CatalogItemEntitlementState()
        {
        }
        public static new CatalogItemEntitlementState Empty => new CatalogItemEntitlementState();
    }
}
