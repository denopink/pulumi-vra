// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace pulumiverse.Vra
{
    public static class GetFabricDatastoreVsphere
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### S
        /// This is an example of how to lookup vSphere fabric datastores.
        /// 
        /// **vSphere fabric datastore data source by Id:**
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.GetFabricDatastoreVsphere.Invoke(new()
        ///     {
        ///         Id = @var.Fabric_datastore_vsphere_id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// **vSphere fabric datastore data source by filter query:**
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.GetFabricDatastoreVsphere.Invoke(new()
        ///     {
        ///         Filter = $"name eq '{@var.Datastore_name}'",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// A vSphere fabric datastore data source supports the following arguments:
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetFabricDatastoreVsphereResult> InvokeAsync(GetFabricDatastoreVsphereArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFabricDatastoreVsphereResult>("vra:index/getFabricDatastoreVsphere:getFabricDatastoreVsphere", args ?? new GetFabricDatastoreVsphereArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### S
        /// This is an example of how to lookup vSphere fabric datastores.
        /// 
        /// **vSphere fabric datastore data source by Id:**
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.GetFabricDatastoreVsphere.Invoke(new()
        ///     {
        ///         Id = @var.Fabric_datastore_vsphere_id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// **vSphere fabric datastore data source by filter query:**
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.GetFabricDatastoreVsphere.Invoke(new()
        ///     {
        ///         Filter = $"name eq '{@var.Datastore_name}'",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// A vSphere fabric datastore data source supports the following arguments:
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetFabricDatastoreVsphereResult> Invoke(GetFabricDatastoreVsphereInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFabricDatastoreVsphereResult>("vra:index/getFabricDatastoreVsphere:getFabricDatastoreVsphere", args ?? new GetFabricDatastoreVsphereInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFabricDatastoreVsphereArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Search criteria to narrow down the vSphere fabric datastore resource instance. Only one of 'id' or 'filter' must be specified.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// The id of the vSphere fabric datastore resource instance. Only one of 'id' or 'filter' must be specified.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        [Input("tags")]
        private List<Inputs.GetFabricDatastoreVsphereTagArgs>? _tags;

        /// <summary>
        /// A set of tag keys and optional values that were set on this resource:
        /// </summary>
        public List<Inputs.GetFabricDatastoreVsphereTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetFabricDatastoreVsphereTagArgs>());
            set => _tags = value;
        }

        public GetFabricDatastoreVsphereArgs()
        {
        }
        public static new GetFabricDatastoreVsphereArgs Empty => new GetFabricDatastoreVsphereArgs();
    }

    public sealed class GetFabricDatastoreVsphereInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Search criteria to narrow down the vSphere fabric datastore resource instance. Only one of 'id' or 'filter' must be specified.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// The id of the vSphere fabric datastore resource instance. Only one of 'id' or 'filter' must be specified.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("tags")]
        private InputList<Inputs.GetFabricDatastoreVsphereTagInputArgs>? _tags;

        /// <summary>
        /// A set of tag keys and optional values that were set on this resource:
        /// </summary>
        public InputList<Inputs.GetFabricDatastoreVsphereTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetFabricDatastoreVsphereTagInputArgs>());
            set => _tags = value;
        }

        public GetFabricDatastoreVsphereInvokeArgs()
        {
        }
        public static new GetFabricDatastoreVsphereInvokeArgs Empty => new GetFabricDatastoreVsphereInvokeArgs();
    }


    [OutputType]
    public sealed class GetFabricDatastoreVsphereResult
    {
        /// <summary>
        /// Set of ids of the cloud accounts this entity belongs to.
        /// </summary>
        public readonly ImmutableArray<string> CloudAccountIds;
        /// <summary>
        /// Date when the entity was created. The date is in ISO 8601 and UTC.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// A human-friendly description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// External entity Id on the provider side.
        /// </summary>
        public readonly string ExternalId;
        /// <summary>
        /// Id of datacenter in which the datastore is present.
        /// </summary>
        public readonly string ExternalRegionId;
        public readonly string? Filter;
        /// <summary>
        /// Indicates free size available in datastore.
        /// </summary>
        public readonly string FreeSizeGb;
        public readonly string Id;
        /// <summary>
        /// HATEOAS of the entity
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFabricDatastoreVsphereLinkResult> Links;
        /// <summary>
        /// A human-friendly name used as an identifier for the vSphere fabric datastore resource instance.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The id of the organization this entity belongs to.
        /// </summary>
        public readonly string OrgId;
        /// <summary>
        /// Email of the user that owns the entity.
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// A set of tag keys and optional values that were set on this resource:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFabricDatastoreVsphereTagResult> Tags;
        /// <summary>
        /// Type of datastore.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Date when the entity was last updated. The date is ISO 8601 and UTC.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetFabricDatastoreVsphereResult(
            ImmutableArray<string> cloudAccountIds,

            string createdAt,

            string description,

            string externalId,

            string externalRegionId,

            string? filter,

            string freeSizeGb,

            string id,

            ImmutableArray<Outputs.GetFabricDatastoreVsphereLinkResult> links,

            string name,

            string orgId,

            string owner,

            ImmutableArray<Outputs.GetFabricDatastoreVsphereTagResult> tags,

            string type,

            string updatedAt)
        {
            CloudAccountIds = cloudAccountIds;
            CreatedAt = createdAt;
            Description = description;
            ExternalId = externalId;
            ExternalRegionId = externalRegionId;
            Filter = filter;
            FreeSizeGb = freeSizeGb;
            Id = id;
            Links = links;
            Name = name;
            OrgId = orgId;
            Owner = owner;
            Tags = tags;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
