// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vra.Storageprofile
{
    public static class GetAzure
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### S
        /// This is an example of how to create a storage profile azure resource.
        /// 
        /// **Storage profile azure data source by its id:**
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.Storageprofile.GetAzure.Invoke(new()
        ///     {
        ///         Id = vra_storage_profile_azure.This.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// **Vra storage profile data source filter by external region id:**
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.Storageprofile.GetAzure.Invoke(new()
        ///     {
        ///         Filter = "externalRegionId eq 'foobar'",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// A storage profile azure data source supports the following arguments:
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAzureResult> InvokeAsync(GetAzureArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAzureResult>("vra:storageprofile/getAzure:getAzure", args ?? new GetAzureArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### S
        /// This is an example of how to create a storage profile azure resource.
        /// 
        /// **Storage profile azure data source by its id:**
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.Storageprofile.GetAzure.Invoke(new()
        ///     {
        ///         Id = vra_storage_profile_azure.This.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// **Vra storage profile data source filter by external region id:**
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vra = Pulumi.Vra;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Vra.Storageprofile.GetAzure.Invoke(new()
        ///     {
        ///         Filter = "externalRegionId eq 'foobar'",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// A storage profile azure data source supports the following arguments:
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAzureResult> Invoke(GetAzureInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAzureResult>("vra:storageprofile/getAzure:getAzure", args ?? new GetAzureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter query string that is supported by vRA multi-cloud IaaS API. Example: regionId eq '&lt;regionId&gt;' and cloudAccountId eq '&lt;cloudAccountId&gt;'.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// The id of the image profile instance.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        [Input("tags")]
        private List<Inputs.GetAzureTagArgs>? _tags;

        /// <summary>
        /// A set of tag keys and optional values that were set on this Network Profile.
        /// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
        /// </summary>
        public List<Inputs.GetAzureTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetAzureTagArgs>());
            set => _tags = value;
        }

        public GetAzureArgs()
        {
        }
        public static new GetAzureArgs Empty => new GetAzureArgs();
    }

    public sealed class GetAzureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter query string that is supported by vRA multi-cloud IaaS API. Example: regionId eq '&lt;regionId&gt;' and cloudAccountId eq '&lt;cloudAccountId&gt;'.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// The id of the image profile instance.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("tags")]
        private InputList<Inputs.GetAzureTagInputArgs>? _tags;

        /// <summary>
        /// A set of tag keys and optional values that were set on this Network Profile.
        /// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
        /// </summary>
        public InputList<Inputs.GetAzureTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetAzureTagInputArgs>());
            set => _tags = value;
        }

        public GetAzureInvokeArgs()
        {
        }
        public static new GetAzureInvokeArgs Empty => new GetAzureInvokeArgs();
    }


    [OutputType]
    public sealed class GetAzureResult
    {
        public readonly string CloudAccountId;
        /// <summary>
        /// Date when the entity was created. The date is in ISO 6801 and UTC.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Indicates the caching mechanism for additional disk.
        /// </summary>
        public readonly string DataDiskCaching;
        /// <summary>
        /// Indicates if this storage profile is a default profile.
        /// </summary>
        public readonly bool DefaultItem;
        /// <summary>
        /// A human-friendly description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed.
        /// </summary>
        public readonly string DiskType;
        /// <summary>
        /// The id of the region as seen in the cloud provider for which this profile is defined.
        /// </summary>
        public readonly string ExternalRegionId;
        public readonly string? Filter;
        public readonly string Id;
        /// <summary>
        /// HATEOAS of the entity
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAzureLinkResult> Links;
        /// <summary>
        /// A human-friendly name used as an identifier in APIs that support this option.
        /// </summary>
        public readonly string Name;
        public readonly string OrgId;
        /// <summary>
        /// Indicates the caching mechanism for OS disk. Default policy for OS disks is Read/Write.
        /// </summary>
        public readonly string OsDiskCaching;
        /// <summary>
        /// Email of the user that owns the entity.
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// Indicates whether this storage policy should support encryption or not.
        /// </summary>
        public readonly bool SupportsEncryption;
        /// <summary>
        /// A set of tag keys and optional values that were set on this Network Profile.
        /// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAzureTagResult> Tags;
        /// <summary>
        /// Date when the entity was last updated. The date is ISO 8601 and UTC.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetAzureResult(
            string cloudAccountId,

            string createdAt,

            string dataDiskCaching,

            bool defaultItem,

            string description,

            string diskType,

            string externalRegionId,

            string? filter,

            string id,

            ImmutableArray<Outputs.GetAzureLinkResult> links,

            string name,

            string orgId,

            string osDiskCaching,

            string owner,

            bool supportsEncryption,

            ImmutableArray<Outputs.GetAzureTagResult> tags,

            string updatedAt)
        {
            CloudAccountId = cloudAccountId;
            CreatedAt = createdAt;
            DataDiskCaching = dataDiskCaching;
            DefaultItem = defaultItem;
            Description = description;
            DiskType = diskType;
            ExternalRegionId = externalRegionId;
            Filter = filter;
            Id = id;
            Links = links;
            Name = name;
            OrgId = orgId;
            OsDiskCaching = osDiskCaching;
            Owner = owner;
            SupportsEncryption = supportsEncryption;
            Tags = tags;
            UpdatedAt = updatedAt;
        }
    }
}
