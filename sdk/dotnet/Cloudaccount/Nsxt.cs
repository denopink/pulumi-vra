// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vra.Cloudaccount
{
    /// <summary>
    /// Creates a VMware vRealize Automation NSX-T cloud account resource.
    /// 
    /// ## Example Usage
    /// ### S
    /// 
    /// The following example shows how to create an NSX-T cloud account resource.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Vra = Pulumiverse.Vra;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Vra.Cloudaccount.Nsxt("this", new()
    ///     {
    ///         Description = "foobar",
    ///         Username = @var.Username,
    ///         Password = @var.Password,
    ///         Hostname = @var.Hostname,
    ///         DcId = @var.Vra_data_collector_id,
    ///         AcceptSelfSignedCert = true,
    ///         Tags = new[]
    ///         {
    ///             new Vra.Cloudaccount.Inputs.NsxtTagArgs
    ///             {
    ///                 Key = "foo",
    ///                 Value = "bar",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// To import the NSX-T cloud account, use the ID as in the following example
    /// 
    /// ```sh
    ///  $ pulumi import vra:cloudaccount/nsxt:Nsxt new_gcp 05956583-6488-4e7d-84c9-92a7b7219a15`
    /// ```
    /// </summary>
    [VraResourceType("vra:cloudaccount/nsxt:Nsxt")]
    public partial class Nsxt : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Accept self-signed certificate when connecting to the cloud account.
        /// </summary>
        [Output("acceptSelfSignedCert")]
        public Output<bool?> AcceptSelfSignedCert { get; private set; } = null!;

        /// <summary>
        /// Cloud accounts associated with the cloud account.
        /// </summary>
        [Output("associatedCloudAccountIds")]
        public Output<ImmutableArray<string>> AssociatedCloudAccountIds { get; private set; } = null!;

        /// <summary>
        /// Date when entity was created. Date and time format is ISO 8601 and UTC.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Identifier of a data collector VM deployed in the on premise infrastructure.
        /// </summary>
        [Output("dcId")]
        public Output<string?> DcId { get; private set; } = null!;

        /// <summary>
        /// Human-friendly description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Host name for NSX-T cloud account.
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// HATEOAS of entity.
        /// </summary>
        [Output("links")]
        public Output<ImmutableArray<Outputs.NsxtLink>> Links { get; private set; } = null!;

        /// <summary>
        /// Create NSX-T cloud account in Manager (legacy) mode. When set to true, NSX-T cloud account is created in Manager mode.
        /// Mode cannot be changed after cloud account is created. Default value is false.
        /// </summary>
        [Output("managerMode")]
        public Output<bool?> ManagerMode { get; private set; } = null!;

        /// <summary>
        /// Name of NSX-T cloud account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ID of organization that entity belongs to.
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// Email of entity owner.
        /// </summary>
        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        /// <summary>
        /// Password used to authenticate to the cloud Account.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// Set of tag keys and values to apply to the cloud account.  
        /// Example:[ { "key" : "vmware", "value": "provider" } ]
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.NsxtTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// Username used to authenticate to the cloud account.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a Nsxt resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Nsxt(string name, NsxtArgs args, CustomResourceOptions? options = null)
            : base("vra:cloudaccount/nsxt:Nsxt", name, args ?? new NsxtArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Nsxt(string name, Input<string> id, NsxtState? state = null, CustomResourceOptions? options = null)
            : base("vra:cloudaccount/nsxt:Nsxt", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Nsxt resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Nsxt Get(string name, Input<string> id, NsxtState? state = null, CustomResourceOptions? options = null)
        {
            return new Nsxt(name, id, state, options);
        }
    }

    public sealed class NsxtArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Accept self-signed certificate when connecting to the cloud account.
        /// </summary>
        [Input("acceptSelfSignedCert")]
        public Input<bool>? AcceptSelfSignedCert { get; set; }

        /// <summary>
        /// Identifier of a data collector VM deployed in the on premise infrastructure.
        /// </summary>
        [Input("dcId")]
        public Input<string>? DcId { get; set; }

        /// <summary>
        /// Human-friendly description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Host name for NSX-T cloud account.
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// Create NSX-T cloud account in Manager (legacy) mode. When set to true, NSX-T cloud account is created in Manager mode.
        /// Mode cannot be changed after cloud account is created. Default value is false.
        /// </summary>
        [Input("managerMode")]
        public Input<bool>? ManagerMode { get; set; }

        /// <summary>
        /// Name of NSX-T cloud account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Password used to authenticate to the cloud Account.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.NsxtTagArgs>? _tags;

        /// <summary>
        /// Set of tag keys and values to apply to the cloud account.  
        /// Example:[ { "key" : "vmware", "value": "provider" } ]
        /// </summary>
        public InputList<Inputs.NsxtTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.NsxtTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Username used to authenticate to the cloud account.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public NsxtArgs()
        {
        }
        public static new NsxtArgs Empty => new NsxtArgs();
    }

    public sealed class NsxtState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Accept self-signed certificate when connecting to the cloud account.
        /// </summary>
        [Input("acceptSelfSignedCert")]
        public Input<bool>? AcceptSelfSignedCert { get; set; }

        [Input("associatedCloudAccountIds")]
        private InputList<string>? _associatedCloudAccountIds;

        /// <summary>
        /// Cloud accounts associated with the cloud account.
        /// </summary>
        public InputList<string> AssociatedCloudAccountIds
        {
            get => _associatedCloudAccountIds ?? (_associatedCloudAccountIds = new InputList<string>());
            set => _associatedCloudAccountIds = value;
        }

        /// <summary>
        /// Date when entity was created. Date and time format is ISO 8601 and UTC.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Identifier of a data collector VM deployed in the on premise infrastructure.
        /// </summary>
        [Input("dcId")]
        public Input<string>? DcId { get; set; }

        /// <summary>
        /// Human-friendly description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Host name for NSX-T cloud account.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        [Input("links")]
        private InputList<Inputs.NsxtLinkGetArgs>? _links;

        /// <summary>
        /// HATEOAS of entity.
        /// </summary>
        public InputList<Inputs.NsxtLinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.NsxtLinkGetArgs>());
            set => _links = value;
        }

        /// <summary>
        /// Create NSX-T cloud account in Manager (legacy) mode. When set to true, NSX-T cloud account is created in Manager mode.
        /// Mode cannot be changed after cloud account is created. Default value is false.
        /// </summary>
        [Input("managerMode")]
        public Input<bool>? ManagerMode { get; set; }

        /// <summary>
        /// Name of NSX-T cloud account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of organization that entity belongs to.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Email of entity owner.
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// Password used to authenticate to the cloud Account.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("tags")]
        private InputList<Inputs.NsxtTagGetArgs>? _tags;

        /// <summary>
        /// Set of tag keys and values to apply to the cloud account.  
        /// Example:[ { "key" : "vmware", "value": "provider" } ]
        /// </summary>
        public InputList<Inputs.NsxtTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.NsxtTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// Username used to authenticate to the cloud account.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public NsxtState()
        {
        }
        public static new NsxtState Empty => new NsxtState();
    }
}
