// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides information about a catalog item in vRA.
//
// ## Example Usage
// ### S
//
// This is an example of how to get a vRA catalog item by its name.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.GetCatalogItem(ctx, &GetCatalogItemArgs{
//				Name:           pulumi.StringRef(_var.Catalog_item_name),
//				ExpandVersions: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// This is an example of how to get a vRA catalog item by its id.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.GetCatalogItem(ctx, &GetCatalogItemArgs{
//				Id:             pulumi.StringRef(_var.Catalog_item_id),
//				ExpandVersions: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCatalogItem(ctx *pulumi.Context, args *GetCatalogItemArgs, opts ...pulumi.InvokeOption) (*GetCatalogItemResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetCatalogItemResult
	err := ctx.Invoke("vra:index/getCatalogItem:getCatalogItem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalogItem.
type GetCatalogItemArgs struct {
	// Flag to indicate whether to expand detailed project data for the catalog item.
	ExpandProjects *bool `pulumi:"expandProjects"`
	// Flag to indicate whether to expand detailed versions of the catalog item.
	ExpandVersions *bool `pulumi:"expandVersions"`
	// The id of catalog item. One of `id`, or `name` must be provided.
	Id *string `pulumi:"id"`
	// Name of the catalog item. One of `id`, or `name` must be provided.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCatalogItem.
type GetCatalogItemResult struct {
	// Date-time when catalog item version was created at.
	CreatedAt string `pulumi:"createdAt"`
	// The user the entity was created by.
	CreatedBy string `pulumi:"createdBy"`
	// A human-friendly description.
	Description    string `pulumi:"description"`
	ExpandProjects *bool  `pulumi:"expandProjects"`
	ExpandVersions *bool  `pulumi:"expandVersions"`
	// Id of the catalog item version.
	Id string `pulumi:"id"`
	// Date-time when the entity was last updated.
	LastUpdatedAt string `pulumi:"lastUpdatedAt"`
	// The user the entity was last updated by.
	LastUpdatedBy string `pulumi:"lastUpdatedBy"`
	// Name of the entity.
	Name string `pulumi:"name"`
	// List of associated project IDs that can be used for requesting this catalog item.
	ProjectIds []string `pulumi:"projectIds"`
	// List of associated projects that can be used for requesting this catalog item.
	Projects []GetCatalogItemProject `pulumi:"projects"`
	// Json schema describing request parameters, a simplified version of http://json-schema.org/latest/json-schema-validation.html#rfc.section.5
	Schema string `pulumi:"schema"`
	// LibraryItem source ID.
	SourceId string `pulumi:"sourceId"`
	// LibraryItem source name.
	SourceName string               `pulumi:"sourceName"`
	Types      []GetCatalogItemType `pulumi:"types"`
	// Catalog item versions.
	Versions []GetCatalogItemVersion `pulumi:"versions"`
}

func GetCatalogItemOutput(ctx *pulumi.Context, args GetCatalogItemOutputArgs, opts ...pulumi.InvokeOption) GetCatalogItemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCatalogItemResult, error) {
			args := v.(GetCatalogItemArgs)
			r, err := GetCatalogItem(ctx, &args, opts...)
			var s GetCatalogItemResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCatalogItemResultOutput)
}

// A collection of arguments for invoking getCatalogItem.
type GetCatalogItemOutputArgs struct {
	// Flag to indicate whether to expand detailed project data for the catalog item.
	ExpandProjects pulumi.BoolPtrInput `pulumi:"expandProjects"`
	// Flag to indicate whether to expand detailed versions of the catalog item.
	ExpandVersions pulumi.BoolPtrInput `pulumi:"expandVersions"`
	// The id of catalog item. One of `id`, or `name` must be provided.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the catalog item. One of `id`, or `name` must be provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetCatalogItemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogItemArgs)(nil)).Elem()
}

// A collection of values returned by getCatalogItem.
type GetCatalogItemResultOutput struct{ *pulumi.OutputState }

func (GetCatalogItemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogItemResult)(nil)).Elem()
}

func (o GetCatalogItemResultOutput) ToGetCatalogItemResultOutput() GetCatalogItemResultOutput {
	return o
}

func (o GetCatalogItemResultOutput) ToGetCatalogItemResultOutputWithContext(ctx context.Context) GetCatalogItemResultOutput {
	return o
}

// Date-time when catalog item version was created at.
func (o GetCatalogItemResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The user the entity was created by.
func (o GetCatalogItemResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// A human-friendly description.
func (o GetCatalogItemResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetCatalogItemResultOutput) ExpandProjects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogItemResult) *bool { return v.ExpandProjects }).(pulumi.BoolPtrOutput)
}

func (o GetCatalogItemResultOutput) ExpandVersions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogItemResult) *bool { return v.ExpandVersions }).(pulumi.BoolPtrOutput)
}

// Id of the catalog item version.
func (o GetCatalogItemResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemResult) string { return v.Id }).(pulumi.StringOutput)
}

// Date-time when the entity was last updated.
func (o GetCatalogItemResultOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemResult) string { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

// The user the entity was last updated by.
func (o GetCatalogItemResultOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemResult) string { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// Name of the entity.
func (o GetCatalogItemResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of associated project IDs that can be used for requesting this catalog item.
func (o GetCatalogItemResultOutput) ProjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCatalogItemResult) []string { return v.ProjectIds }).(pulumi.StringArrayOutput)
}

// List of associated projects that can be used for requesting this catalog item.
func (o GetCatalogItemResultOutput) Projects() GetCatalogItemProjectArrayOutput {
	return o.ApplyT(func(v GetCatalogItemResult) []GetCatalogItemProject { return v.Projects }).(GetCatalogItemProjectArrayOutput)
}

// Json schema describing request parameters, a simplified version of http://json-schema.org/latest/json-schema-validation.html#rfc.section.5
func (o GetCatalogItemResultOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemResult) string { return v.Schema }).(pulumi.StringOutput)
}

// LibraryItem source ID.
func (o GetCatalogItemResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemResult) string { return v.SourceId }).(pulumi.StringOutput)
}

// LibraryItem source name.
func (o GetCatalogItemResultOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemResult) string { return v.SourceName }).(pulumi.StringOutput)
}

func (o GetCatalogItemResultOutput) Types() GetCatalogItemTypeArrayOutput {
	return o.ApplyT(func(v GetCatalogItemResult) []GetCatalogItemType { return v.Types }).(GetCatalogItemTypeArrayOutput)
}

// Catalog item versions.
func (o GetCatalogItemResultOutput) Versions() GetCatalogItemVersionArrayOutput {
	return o.ApplyT(func(v GetCatalogItemResult) []GetCatalogItemVersion { return v.Versions }).(GetCatalogItemVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCatalogItemResultOutput{})
}
