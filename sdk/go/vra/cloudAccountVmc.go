// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a VMware vRealize Automation VMC cloud account resource.
//
// ## Example Usage
// ### S
//
// **Create VMC cloud account:**
//
// The following example shows how to create a VMC cloud account resource.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/schmidtw/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.NewCloudAccountVmc(ctx, "this", &vra.CloudAccountVmcArgs{
//				Description:          pulumi.String("tf test vmc cloud account"),
//				ApiToken:             pulumi.Any(_var.Api_token),
//				SddcName:             pulumi.Any(_var.Sddc_name),
//				VcenterHostname:      pulumi.Any(_var.Vcenter_hostname),
//				VcenterPassword:      pulumi.Any(_var.Vcenter_password),
//				VcenterUsername:      pulumi.Any(_var.Vcenter_username),
//				NsxHostname:          pulumi.Any(_var.Nsx_hostname),
//				DcId:                 pulumi.Any(_var.Data_collector_id),
//				Regions:              pulumi.Any(_var.Regions),
//				AcceptSelfSignedCert: pulumi.Bool(true),
//				Tags: CloudAccountVmcTagArray{
//					&CloudAccountVmcTagArgs{
//						Key:   pulumi.String("foo"),
//						Value: pulumi.String("bar"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # To import the VMC cloud account, use the ID as in the following example
//
// ```sh
//
//	$ pulumi import vra:index/cloudAccountVmc:CloudAccountVmc new_vmc 05956583-6488-4e7d-84c9-92a7b7219a15`
//
// ```
type CloudAccountVmc struct {
	pulumi.CustomResourceState

	// Accept self-signed certificate when connecting to the cloud account.
	AcceptSelfSignedCert pulumi.BoolPtrOutput `pulumi:"acceptSelfSignedCert"`
	// VMC API access key.
	ApiToken pulumi.StringOutput `pulumi:"apiToken"`
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Identifier of a data collector VM deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collector.
	DcId pulumi.StringPtrOutput `pulumi:"dcId"`
	// Human-friendly description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// HATEOAS of entity.
	Links CloudAccountVmcLinkArrayOutput `pulumi:"links"`
	// Human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringOutput `pulumi:"name"`
	// IP address of the NSX Manager server in the specified SDDC / FQDN.
	NsxHostname pulumi.StringOutput `pulumi:"nsxHostname"`
	// ID of organization that entity belongs to.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// Email of entity owner.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayOutput `pulumi:"regions"`
	// Identifier of the on-premise SDDC to be used by the cloud account. Note that NSX-V SDDCs are not supported.
	SddcName pulumi.StringOutput `pulumi:"sddcName"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags CloudAccountVmcTagArrayOutput `pulumi:"tags"`
	// Date when the entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.
	VcenterHostname pulumi.StringOutput `pulumi:"vcenterHostname"`
	// Password used to authenticate to the cloud Account.
	VcenterPassword pulumi.StringOutput `pulumi:"vcenterPassword"`
	// vCenter user name for the specified SDDC. The user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.
	VcenterUsername pulumi.StringOutput `pulumi:"vcenterUsername"`
}

// NewCloudAccountVmc registers a new resource with the given unique name, arguments, and options.
func NewCloudAccountVmc(ctx *pulumi.Context,
	name string, args *CloudAccountVmcArgs, opts ...pulumi.ResourceOption) (*CloudAccountVmc, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiToken == nil {
		return nil, errors.New("invalid value for required argument 'ApiToken'")
	}
	if args.NsxHostname == nil {
		return nil, errors.New("invalid value for required argument 'NsxHostname'")
	}
	if args.Regions == nil {
		return nil, errors.New("invalid value for required argument 'Regions'")
	}
	if args.SddcName == nil {
		return nil, errors.New("invalid value for required argument 'SddcName'")
	}
	if args.VcenterHostname == nil {
		return nil, errors.New("invalid value for required argument 'VcenterHostname'")
	}
	if args.VcenterPassword == nil {
		return nil, errors.New("invalid value for required argument 'VcenterPassword'")
	}
	if args.VcenterUsername == nil {
		return nil, errors.New("invalid value for required argument 'VcenterUsername'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CloudAccountVmc
	err := ctx.RegisterResource("vra:index/cloudAccountVmc:CloudAccountVmc", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudAccountVmc gets an existing CloudAccountVmc resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudAccountVmc(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudAccountVmcState, opts ...pulumi.ResourceOption) (*CloudAccountVmc, error) {
	var resource CloudAccountVmc
	err := ctx.ReadResource("vra:index/cloudAccountVmc:CloudAccountVmc", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudAccountVmc resources.
type cloudAccountVmcState struct {
	// Accept self-signed certificate when connecting to the cloud account.
	AcceptSelfSignedCert *bool `pulumi:"acceptSelfSignedCert"`
	// VMC API access key.
	ApiToken *string `pulumi:"apiToken"`
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// Identifier of a data collector VM deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collector.
	DcId *string `pulumi:"dcId"`
	// Human-friendly description.
	Description *string `pulumi:"description"`
	// HATEOAS of entity.
	Links []CloudAccountVmcLink `pulumi:"links"`
	// Human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// IP address of the NSX Manager server in the specified SDDC / FQDN.
	NsxHostname *string `pulumi:"nsxHostname"`
	// ID of organization that entity belongs to.
	OrgId *string `pulumi:"orgId"`
	// Email of entity owner.
	Owner *string `pulumi:"owner"`
	// Set of region names enabled for the cloud account.
	Regions []string `pulumi:"regions"`
	// Identifier of the on-premise SDDC to be used by the cloud account. Note that NSX-V SDDCs are not supported.
	SddcName *string `pulumi:"sddcName"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []CloudAccountVmcTag `pulumi:"tags"`
	// Date when the entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
	// IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.
	VcenterHostname *string `pulumi:"vcenterHostname"`
	// Password used to authenticate to the cloud Account.
	VcenterPassword *string `pulumi:"vcenterPassword"`
	// vCenter user name for the specified SDDC. The user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.
	VcenterUsername *string `pulumi:"vcenterUsername"`
}

type CloudAccountVmcState struct {
	// Accept self-signed certificate when connecting to the cloud account.
	AcceptSelfSignedCert pulumi.BoolPtrInput
	// VMC API access key.
	ApiToken pulumi.StringPtrInput
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringPtrInput
	// Identifier of a data collector VM deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collector.
	DcId pulumi.StringPtrInput
	// Human-friendly description.
	Description pulumi.StringPtrInput
	// HATEOAS of entity.
	Links CloudAccountVmcLinkArrayInput
	// Human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// IP address of the NSX Manager server in the specified SDDC / FQDN.
	NsxHostname pulumi.StringPtrInput
	// ID of organization that entity belongs to.
	OrgId pulumi.StringPtrInput
	// Email of entity owner.
	Owner pulumi.StringPtrInput
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayInput
	// Identifier of the on-premise SDDC to be used by the cloud account. Note that NSX-V SDDCs are not supported.
	SddcName pulumi.StringPtrInput
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags CloudAccountVmcTagArrayInput
	// Date when the entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
	// IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.
	VcenterHostname pulumi.StringPtrInput
	// Password used to authenticate to the cloud Account.
	VcenterPassword pulumi.StringPtrInput
	// vCenter user name for the specified SDDC. The user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.
	VcenterUsername pulumi.StringPtrInput
}

func (CloudAccountVmcState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccountVmcState)(nil)).Elem()
}

type cloudAccountVmcArgs struct {
	// Accept self-signed certificate when connecting to the cloud account.
	AcceptSelfSignedCert *bool `pulumi:"acceptSelfSignedCert"`
	// VMC API access key.
	ApiToken string `pulumi:"apiToken"`
	// Identifier of a data collector VM deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collector.
	DcId *string `pulumi:"dcId"`
	// Human-friendly description.
	Description *string `pulumi:"description"`
	// Human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// IP address of the NSX Manager server in the specified SDDC / FQDN.
	NsxHostname string `pulumi:"nsxHostname"`
	// Set of region names enabled for the cloud account.
	Regions []string `pulumi:"regions"`
	// Identifier of the on-premise SDDC to be used by the cloud account. Note that NSX-V SDDCs are not supported.
	SddcName string `pulumi:"sddcName"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []CloudAccountVmcTag `pulumi:"tags"`
	// IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.
	VcenterHostname string `pulumi:"vcenterHostname"`
	// Password used to authenticate to the cloud Account.
	VcenterPassword string `pulumi:"vcenterPassword"`
	// vCenter user name for the specified SDDC. The user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.
	VcenterUsername string `pulumi:"vcenterUsername"`
}

// The set of arguments for constructing a CloudAccountVmc resource.
type CloudAccountVmcArgs struct {
	// Accept self-signed certificate when connecting to the cloud account.
	AcceptSelfSignedCert pulumi.BoolPtrInput
	// VMC API access key.
	ApiToken pulumi.StringInput
	// Identifier of a data collector VM deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collector.
	DcId pulumi.StringPtrInput
	// Human-friendly description.
	Description pulumi.StringPtrInput
	// Human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// IP address of the NSX Manager server in the specified SDDC / FQDN.
	NsxHostname pulumi.StringInput
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayInput
	// Identifier of the on-premise SDDC to be used by the cloud account. Note that NSX-V SDDCs are not supported.
	SddcName pulumi.StringInput
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags CloudAccountVmcTagArrayInput
	// IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.
	VcenterHostname pulumi.StringInput
	// Password used to authenticate to the cloud Account.
	VcenterPassword pulumi.StringInput
	// vCenter user name for the specified SDDC. The user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.
	VcenterUsername pulumi.StringInput
}

func (CloudAccountVmcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccountVmcArgs)(nil)).Elem()
}

type CloudAccountVmcInput interface {
	pulumi.Input

	ToCloudAccountVmcOutput() CloudAccountVmcOutput
	ToCloudAccountVmcOutputWithContext(ctx context.Context) CloudAccountVmcOutput
}

func (*CloudAccountVmc) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountVmc)(nil)).Elem()
}

func (i *CloudAccountVmc) ToCloudAccountVmcOutput() CloudAccountVmcOutput {
	return i.ToCloudAccountVmcOutputWithContext(context.Background())
}

func (i *CloudAccountVmc) ToCloudAccountVmcOutputWithContext(ctx context.Context) CloudAccountVmcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountVmcOutput)
}

// CloudAccountVmcArrayInput is an input type that accepts CloudAccountVmcArray and CloudAccountVmcArrayOutput values.
// You can construct a concrete instance of `CloudAccountVmcArrayInput` via:
//
//	CloudAccountVmcArray{ CloudAccountVmcArgs{...} }
type CloudAccountVmcArrayInput interface {
	pulumi.Input

	ToCloudAccountVmcArrayOutput() CloudAccountVmcArrayOutput
	ToCloudAccountVmcArrayOutputWithContext(context.Context) CloudAccountVmcArrayOutput
}

type CloudAccountVmcArray []CloudAccountVmcInput

func (CloudAccountVmcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccountVmc)(nil)).Elem()
}

func (i CloudAccountVmcArray) ToCloudAccountVmcArrayOutput() CloudAccountVmcArrayOutput {
	return i.ToCloudAccountVmcArrayOutputWithContext(context.Background())
}

func (i CloudAccountVmcArray) ToCloudAccountVmcArrayOutputWithContext(ctx context.Context) CloudAccountVmcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountVmcArrayOutput)
}

// CloudAccountVmcMapInput is an input type that accepts CloudAccountVmcMap and CloudAccountVmcMapOutput values.
// You can construct a concrete instance of `CloudAccountVmcMapInput` via:
//
//	CloudAccountVmcMap{ "key": CloudAccountVmcArgs{...} }
type CloudAccountVmcMapInput interface {
	pulumi.Input

	ToCloudAccountVmcMapOutput() CloudAccountVmcMapOutput
	ToCloudAccountVmcMapOutputWithContext(context.Context) CloudAccountVmcMapOutput
}

type CloudAccountVmcMap map[string]CloudAccountVmcInput

func (CloudAccountVmcMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccountVmc)(nil)).Elem()
}

func (i CloudAccountVmcMap) ToCloudAccountVmcMapOutput() CloudAccountVmcMapOutput {
	return i.ToCloudAccountVmcMapOutputWithContext(context.Background())
}

func (i CloudAccountVmcMap) ToCloudAccountVmcMapOutputWithContext(ctx context.Context) CloudAccountVmcMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountVmcMapOutput)
}

type CloudAccountVmcOutput struct{ *pulumi.OutputState }

func (CloudAccountVmcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountVmc)(nil)).Elem()
}

func (o CloudAccountVmcOutput) ToCloudAccountVmcOutput() CloudAccountVmcOutput {
	return o
}

func (o CloudAccountVmcOutput) ToCloudAccountVmcOutputWithContext(ctx context.Context) CloudAccountVmcOutput {
	return o
}

// Accept self-signed certificate when connecting to the cloud account.
func (o CloudAccountVmcOutput) AcceptSelfSignedCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.BoolPtrOutput { return v.AcceptSelfSignedCert }).(pulumi.BoolPtrOutput)
}

// VMC API access key.
func (o CloudAccountVmcOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.ApiToken }).(pulumi.StringOutput)
}

// Date when entity was created. Date and time format is ISO 8601 and UTC.
func (o CloudAccountVmcOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Identifier of a data collector VM deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collector.
func (o CloudAccountVmcOutput) DcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringPtrOutput { return v.DcId }).(pulumi.StringPtrOutput)
}

// Human-friendly description.
func (o CloudAccountVmcOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// HATEOAS of entity.
func (o CloudAccountVmcOutput) Links() CloudAccountVmcLinkArrayOutput {
	return o.ApplyT(func(v *CloudAccountVmc) CloudAccountVmcLinkArrayOutput { return v.Links }).(CloudAccountVmcLinkArrayOutput)
}

// Human-friendly name used as an identifier in APIs that support this option.
func (o CloudAccountVmcOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// IP address of the NSX Manager server in the specified SDDC / FQDN.
func (o CloudAccountVmcOutput) NsxHostname() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.NsxHostname }).(pulumi.StringOutput)
}

// ID of organization that entity belongs to.
func (o CloudAccountVmcOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// Email of entity owner.
func (o CloudAccountVmcOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// Set of region names enabled for the cloud account.
func (o CloudAccountVmcOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringArrayOutput { return v.Regions }).(pulumi.StringArrayOutput)
}

// Identifier of the on-premise SDDC to be used by the cloud account. Note that NSX-V SDDCs are not supported.
func (o CloudAccountVmcOutput) SddcName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.SddcName }).(pulumi.StringOutput)
}

// Set of tag keys and values to apply to the cloud account.\
// Example:[ { "key" : "vmware", "value": "provider" } ]
func (o CloudAccountVmcOutput) Tags() CloudAccountVmcTagArrayOutput {
	return o.ApplyT(func(v *CloudAccountVmc) CloudAccountVmcTagArrayOutput { return v.Tags }).(CloudAccountVmcTagArrayOutput)
}

// Date when the entity was last updated. Date and time format is ISO 8601 and UTC.
func (o CloudAccountVmcOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.
func (o CloudAccountVmcOutput) VcenterHostname() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.VcenterHostname }).(pulumi.StringOutput)
}

// Password used to authenticate to the cloud Account.
func (o CloudAccountVmcOutput) VcenterPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.VcenterPassword }).(pulumi.StringOutput)
}

// vCenter user name for the specified SDDC. The user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.
func (o CloudAccountVmcOutput) VcenterUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountVmc) pulumi.StringOutput { return v.VcenterUsername }).(pulumi.StringOutput)
}

type CloudAccountVmcArrayOutput struct{ *pulumi.OutputState }

func (CloudAccountVmcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccountVmc)(nil)).Elem()
}

func (o CloudAccountVmcArrayOutput) ToCloudAccountVmcArrayOutput() CloudAccountVmcArrayOutput {
	return o
}

func (o CloudAccountVmcArrayOutput) ToCloudAccountVmcArrayOutputWithContext(ctx context.Context) CloudAccountVmcArrayOutput {
	return o
}

func (o CloudAccountVmcArrayOutput) Index(i pulumi.IntInput) CloudAccountVmcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudAccountVmc {
		return vs[0].([]*CloudAccountVmc)[vs[1].(int)]
	}).(CloudAccountVmcOutput)
}

type CloudAccountVmcMapOutput struct{ *pulumi.OutputState }

func (CloudAccountVmcMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccountVmc)(nil)).Elem()
}

func (o CloudAccountVmcMapOutput) ToCloudAccountVmcMapOutput() CloudAccountVmcMapOutput {
	return o
}

func (o CloudAccountVmcMapOutput) ToCloudAccountVmcMapOutputWithContext(ctx context.Context) CloudAccountVmcMapOutput {
	return o
}

func (o CloudAccountVmcMapOutput) MapIndex(k pulumi.StringInput) CloudAccountVmcOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudAccountVmc {
		return vs[0].(map[string]*CloudAccountVmc)[vs[1].(string)]
	}).(CloudAccountVmcOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountVmcInput)(nil)).Elem(), &CloudAccountVmc{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountVmcArrayInput)(nil)).Elem(), CloudAccountVmcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountVmcMapInput)(nil)).Elem(), CloudAccountVmcMap{})
	pulumi.RegisterOutputType(CloudAccountVmcOutput{})
	pulumi.RegisterOutputType(CloudAccountVmcArrayOutput{})
	pulumi.RegisterOutputType(CloudAccountVmcMapOutput{})
}
