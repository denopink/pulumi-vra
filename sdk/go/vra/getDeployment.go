// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides information about a deployment in vRA.
//
// ## Example Usage
// ### S
//
// This is an example of how to get a vRA deployment by its name.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/schmidtw/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.LookupDeployment(ctx, &GetDeploymentArgs{
//				Name: pulumi.StringRef(_var.Deployment_name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// This is an example of how to get a vRA cloud template by its id.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/schmidtw/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.LookupDeployment(ctx, &GetDeploymentArgs{
//				Id: pulumi.StringRef(_var.Deployment_id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDeployment(ctx *pulumi.Context, args *LookupDeploymentArgs, opts ...pulumi.InvokeOption) (*LookupDeploymentResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupDeploymentResult
	err := ctx.Invoke("vra:index/getDeployment:getDeployment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeployment.
type LookupDeploymentArgs struct {
	// vRA Cloud template content. Conflicts with `blueprintId` and `catalogItemId`.
	BlueprintContent *string `pulumi:"blueprintContent"`
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId *string `pulumi:"blueprintId"`
	// The version of the vRA cloud template to request the deployment. Used only when `blueprintId` is provided.
	BlueprintVersion *string `pulumi:"blueprintVersion"`
	// Identifier of the requested catalog item in the form ‘UUID:version’.
	CatalogItemId *string `pulumi:"catalogItemId"`
	// The version of the vRA catalog item to request the deployment. Used only when `catalogItemId` is provided.
	CatalogItemVersion *string `pulumi:"catalogItemVersion"`
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt *string `pulumi:"createdAt"`
	// The user the entity was created by.
	CreatedBy *string `pulumi:"createdBy"`
	// A description of the resource.
	Description *string `pulumi:"description"`
	// Flag to indicate whether to expand last request on the deployment.
	ExpandLastRequest *bool `pulumi:"expandLastRequest"`
	// Flag to indicate whether to expand project information.
	ExpandProject *bool `pulumi:"expandProject"`
	// Flag to indicate whether to expand resources in the deployment.
	ExpandResources *bool `pulumi:"expandResources"`
	// The id of the deployment. One of `id` or `name` must be provided.
	Id *string `pulumi:"id"`
	// List of request inputs.
	Inputs map[string]string `pulumi:"inputs"`
	// Time at which the deployment was last updated.
	LastUpdatedAt *string `pulumi:"lastUpdatedAt"`
	// The user that last updated the deployment.
	LastUpdatedBy *string `pulumi:"lastUpdatedBy"`
	// Time at which the deployment lease expires.
	LeaseExpireAt *string `pulumi:"leaseExpireAt"`
	// Name of the deployment. One of `id` or `name` must be provided.
	Name *string `pulumi:"name"`
	// The user this deployment belongs to.
	Owner *string `pulumi:"owner"`
	// The id of the project this deployment belongs to.
	ProjectId *string `pulumi:"projectId"`
	// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getDeployment.
type LookupDeploymentResult struct {
	// vRA Cloud template content. Conflicts with `blueprintId` and `catalogItemId`.
	BlueprintContent string `pulumi:"blueprintContent"`
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId string `pulumi:"blueprintId"`
	// The version of the vRA cloud template to request the deployment. Used only when `blueprintId` is provided.
	BlueprintVersion string `pulumi:"blueprintVersion"`
	// Identifier of the requested catalog item in the form ‘UUID:version’.
	CatalogItemId string `pulumi:"catalogItemId"`
	// The version of the vRA catalog item to request the deployment. Used only when `catalogItemId` is provided.
	CatalogItemVersion string `pulumi:"catalogItemVersion"`
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt string `pulumi:"createdAt"`
	// The user the entity was created by.
	CreatedBy string `pulumi:"createdBy"`
	// A description of the resource.
	Description       string `pulumi:"description"`
	ExpandLastRequest *bool  `pulumi:"expandLastRequest"`
	ExpandProject     *bool  `pulumi:"expandProject"`
	ExpandResources   *bool  `pulumi:"expandResources"`
	// Expense incurred for this resource.
	Expenses []GetDeploymentExpense `pulumi:"expenses"`
	// Unique identifier of the resource.
	Id string `pulumi:"id"`
	// List of request inputs.
	Inputs map[string]string `pulumi:"inputs"`
	// Represents deployment requests.
	LastRequests []GetDeploymentLastRequest `pulumi:"lastRequests"`
	// Time at which the deployment was last updated.
	LastUpdatedAt string `pulumi:"lastUpdatedAt"`
	// The user that last updated the deployment.
	LastUpdatedBy string `pulumi:"lastUpdatedBy"`
	// Time at which the deployment lease expires.
	LeaseExpireAt string `pulumi:"leaseExpireAt"`
	// Name of the resource.
	Name string `pulumi:"name"`
	// The ID of the organization this deployment belongs to.
	OrgId string `pulumi:"orgId"`
	// The user this deployment belongs to.
	Owner *string `pulumi:"owner"`
	// The id of the project this deployment belongs to.
	ProjectId string `pulumi:"projectId"`
	// The project this entity belongs to.
	Projects []GetDeploymentProject `pulumi:"projects"`
	// Expanded resources for the deployment. Content of this property will not be maintained backward compatible.
	Resources []GetDeploymentResource `pulumi:"resources"`
	// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
	Status string `pulumi:"status"`
}

func LookupDeploymentOutput(ctx *pulumi.Context, args LookupDeploymentOutputArgs, opts ...pulumi.InvokeOption) LookupDeploymentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeploymentResult, error) {
			args := v.(LookupDeploymentArgs)
			r, err := LookupDeployment(ctx, &args, opts...)
			var s LookupDeploymentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDeploymentResultOutput)
}

// A collection of arguments for invoking getDeployment.
type LookupDeploymentOutputArgs struct {
	// vRA Cloud template content. Conflicts with `blueprintId` and `catalogItemId`.
	BlueprintContent pulumi.StringPtrInput `pulumi:"blueprintContent"`
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId pulumi.StringPtrInput `pulumi:"blueprintId"`
	// The version of the vRA cloud template to request the deployment. Used only when `blueprintId` is provided.
	BlueprintVersion pulumi.StringPtrInput `pulumi:"blueprintVersion"`
	// Identifier of the requested catalog item in the form ‘UUID:version’.
	CatalogItemId pulumi.StringPtrInput `pulumi:"catalogItemId"`
	// The version of the vRA catalog item to request the deployment. Used only when `catalogItemId` is provided.
	CatalogItemVersion pulumi.StringPtrInput `pulumi:"catalogItemVersion"`
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The user the entity was created by.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// A description of the resource.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Flag to indicate whether to expand last request on the deployment.
	ExpandLastRequest pulumi.BoolPtrInput `pulumi:"expandLastRequest"`
	// Flag to indicate whether to expand project information.
	ExpandProject pulumi.BoolPtrInput `pulumi:"expandProject"`
	// Flag to indicate whether to expand resources in the deployment.
	ExpandResources pulumi.BoolPtrInput `pulumi:"expandResources"`
	// The id of the deployment. One of `id` or `name` must be provided.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// List of request inputs.
	Inputs pulumi.StringMapInput `pulumi:"inputs"`
	// Time at which the deployment was last updated.
	LastUpdatedAt pulumi.StringPtrInput `pulumi:"lastUpdatedAt"`
	// The user that last updated the deployment.
	LastUpdatedBy pulumi.StringPtrInput `pulumi:"lastUpdatedBy"`
	// Time at which the deployment lease expires.
	LeaseExpireAt pulumi.StringPtrInput `pulumi:"leaseExpireAt"`
	// Name of the deployment. One of `id` or `name` must be provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The user this deployment belongs to.
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// The id of the project this deployment belongs to.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LookupDeploymentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentArgs)(nil)).Elem()
}

// A collection of values returned by getDeployment.
type LookupDeploymentResultOutput struct{ *pulumi.OutputState }

func (LookupDeploymentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentResult)(nil)).Elem()
}

func (o LookupDeploymentResultOutput) ToLookupDeploymentResultOutput() LookupDeploymentResultOutput {
	return o
}

func (o LookupDeploymentResultOutput) ToLookupDeploymentResultOutputWithContext(ctx context.Context) LookupDeploymentResultOutput {
	return o
}

// vRA Cloud template content. Conflicts with `blueprintId` and `catalogItemId`.
func (o LookupDeploymentResultOutput) BlueprintContent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.BlueprintContent }).(pulumi.StringOutput)
}

// Identifier of the requested blueprint in the form ‘UUID:version’.
func (o LookupDeploymentResultOutput) BlueprintId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.BlueprintId }).(pulumi.StringOutput)
}

// The version of the vRA cloud template to request the deployment. Used only when `blueprintId` is provided.
func (o LookupDeploymentResultOutput) BlueprintVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.BlueprintVersion }).(pulumi.StringOutput)
}

// Identifier of the requested catalog item in the form ‘UUID:version’.
func (o LookupDeploymentResultOutput) CatalogItemId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.CatalogItemId }).(pulumi.StringOutput)
}

// The version of the vRA catalog item to request the deployment. Used only when `catalogItemId` is provided.
func (o LookupDeploymentResultOutput) CatalogItemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.CatalogItemVersion }).(pulumi.StringOutput)
}

// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
func (o LookupDeploymentResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The user the entity was created by.
func (o LookupDeploymentResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// A description of the resource.
func (o LookupDeploymentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupDeploymentResultOutput) ExpandLastRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDeploymentResult) *bool { return v.ExpandLastRequest }).(pulumi.BoolPtrOutput)
}

func (o LookupDeploymentResultOutput) ExpandProject() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDeploymentResult) *bool { return v.ExpandProject }).(pulumi.BoolPtrOutput)
}

func (o LookupDeploymentResultOutput) ExpandResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDeploymentResult) *bool { return v.ExpandResources }).(pulumi.BoolPtrOutput)
}

// Expense incurred for this resource.
func (o LookupDeploymentResultOutput) Expenses() GetDeploymentExpenseArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []GetDeploymentExpense { return v.Expenses }).(GetDeploymentExpenseArrayOutput)
}

// Unique identifier of the resource.
func (o LookupDeploymentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of request inputs.
func (o LookupDeploymentResultOutput) Inputs() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDeploymentResult) map[string]string { return v.Inputs }).(pulumi.StringMapOutput)
}

// Represents deployment requests.
func (o LookupDeploymentResultOutput) LastRequests() GetDeploymentLastRequestArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []GetDeploymentLastRequest { return v.LastRequests }).(GetDeploymentLastRequestArrayOutput)
}

// Time at which the deployment was last updated.
func (o LookupDeploymentResultOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

// The user that last updated the deployment.
func (o LookupDeploymentResultOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// Time at which the deployment lease expires.
func (o LookupDeploymentResultOutput) LeaseExpireAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.LeaseExpireAt }).(pulumi.StringOutput)
}

// Name of the resource.
func (o LookupDeploymentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the organization this deployment belongs to.
func (o LookupDeploymentResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// The user this deployment belongs to.
func (o LookupDeploymentResultOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeploymentResult) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// The id of the project this deployment belongs to.
func (o LookupDeploymentResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The project this entity belongs to.
func (o LookupDeploymentResultOutput) Projects() GetDeploymentProjectArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []GetDeploymentProject { return v.Projects }).(GetDeploymentProjectArrayOutput)
}

// Expanded resources for the deployment. Content of this property will not be maintained backward compatible.
func (o LookupDeploymentResultOutput) Resources() GetDeploymentResourceArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []GetDeploymentResource { return v.Resources }).(GetDeploymentResourceArrayOutput)
}

// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
func (o LookupDeploymentResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeploymentResultOutput{})
}
