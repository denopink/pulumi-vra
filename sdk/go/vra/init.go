// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "vra:index/blockDevice:BlockDevice":
		r = &BlockDevice{}
	case "vra:index/blockDeviceSnapshot:BlockDeviceSnapshot":
		r = &BlockDeviceSnapshot{}
	case "vra:index/blueprint:Blueprint":
		r = &Blueprint{}
	case "vra:index/blueprintVersion:BlueprintVersion":
		r = &BlueprintVersion{}
	case "vra:index/catalogItemEntitlement:CatalogItemEntitlement":
		r = &CatalogItemEntitlement{}
	case "vra:index/catalogSourceBlueprint:CatalogSourceBlueprint":
		r = &CatalogSourceBlueprint{}
	case "vra:index/catalogSourceEntitlement:CatalogSourceEntitlement":
		r = &CatalogSourceEntitlement{}
	case "vra:index/cloudAccountAws:CloudAccountAws":
		r = &CloudAccountAws{}
	case "vra:index/cloudAccountAzure:CloudAccountAzure":
		r = &CloudAccountAzure{}
	case "vra:index/cloudAccountGcp:CloudAccountGcp":
		r = &CloudAccountGcp{}
	case "vra:index/cloudAccountNsxt:CloudAccountNsxt":
		r = &CloudAccountNsxt{}
	case "vra:index/cloudAccountNsxv:CloudAccountNsxv":
		r = &CloudAccountNsxv{}
	case "vra:index/cloudAccountVmc:CloudAccountVmc":
		r = &CloudAccountVmc{}
	case "vra:index/cloudAccountVsphere:CloudAccountVsphere":
		r = &CloudAccountVsphere{}
	case "vra:index/contentSource:ContentSource":
		r = &ContentSource{}
	case "vra:index/deployment:Deployment":
		r = &Deployment{}
	case "vra:index/fabricCompute:FabricCompute":
		r = &FabricCompute{}
	case "vra:index/fabricDatastoreVsphere:FabricDatastoreVsphere":
		r = &FabricDatastoreVsphere{}
	case "vra:index/fabricNetworkVsphere:FabricNetworkVsphere":
		r = &FabricNetworkVsphere{}
	case "vra:index/flavorProfile:FlavorProfile":
		r = &FlavorProfile{}
	case "vra:index/imageProfile:ImageProfile":
		r = &ImageProfile{}
	case "vra:index/loadBalancer:LoadBalancer":
		r = &LoadBalancer{}
	case "vra:index/machine:Machine":
		r = &Machine{}
	case "vra:index/network:Network":
		r = &Network{}
	case "vra:index/networkIpRange:NetworkIpRange":
		r = &NetworkIpRange{}
	case "vra:index/networkProfile:NetworkProfile":
		r = &NetworkProfile{}
	case "vra:index/project:Project":
		r = &Project{}
	case "vra:index/storageProfile:StorageProfile":
		r = &StorageProfile{}
	case "vra:index/storageProfileAws:StorageProfileAws":
		r = &StorageProfileAws{}
	case "vra:index/storageProfileAzure:StorageProfileAzure":
		r = &StorageProfileAzure{}
	case "vra:index/storageProfileVsphere:StorageProfileVsphere":
		r = &StorageProfileVsphere{}
	case "vra:index/zone:Zone":
		r = &Zone{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:vra" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, _ := PkgVersion()
	pulumi.RegisterResourceModule(
		"vra",
		"index/blockDevice",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/blockDeviceSnapshot",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/blueprint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/blueprintVersion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/catalogItemEntitlement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/catalogSourceBlueprint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/catalogSourceEntitlement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/cloudAccountAws",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/cloudAccountAzure",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/cloudAccountGcp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/cloudAccountNsxt",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/cloudAccountNsxv",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/cloudAccountVmc",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/cloudAccountVsphere",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/contentSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/deployment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/fabricCompute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/fabricDatastoreVsphere",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/fabricNetworkVsphere",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/flavorProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/imageProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/loadBalancer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/machine",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/network",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/networkIpRange",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/networkProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/project",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/storageProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/storageProfileAws",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/storageProfileAzure",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/storageProfileVsphere",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vra",
		"index/zone",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"vra",
		&pkg{version},
	)
}
