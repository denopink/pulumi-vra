// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package blueprint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BlueprintValidationMessage struct {
	Message      *string           `pulumi:"message"`
	Metadata     map[string]string `pulumi:"metadata"`
	Path         *string           `pulumi:"path"`
	ResourceName *string           `pulumi:"resourceName"`
	Type         *string           `pulumi:"type"`
}

// BlueprintValidationMessageInput is an input type that accepts BlueprintValidationMessageArgs and BlueprintValidationMessageOutput values.
// You can construct a concrete instance of `BlueprintValidationMessageInput` via:
//
//	BlueprintValidationMessageArgs{...}
type BlueprintValidationMessageInput interface {
	pulumi.Input

	ToBlueprintValidationMessageOutput() BlueprintValidationMessageOutput
	ToBlueprintValidationMessageOutputWithContext(context.Context) BlueprintValidationMessageOutput
}

type BlueprintValidationMessageArgs struct {
	Message      pulumi.StringPtrInput `pulumi:"message"`
	Metadata     pulumi.StringMapInput `pulumi:"metadata"`
	Path         pulumi.StringPtrInput `pulumi:"path"`
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	Type         pulumi.StringPtrInput `pulumi:"type"`
}

func (BlueprintValidationMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintValidationMessage)(nil)).Elem()
}

func (i BlueprintValidationMessageArgs) ToBlueprintValidationMessageOutput() BlueprintValidationMessageOutput {
	return i.ToBlueprintValidationMessageOutputWithContext(context.Background())
}

func (i BlueprintValidationMessageArgs) ToBlueprintValidationMessageOutputWithContext(ctx context.Context) BlueprintValidationMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintValidationMessageOutput)
}

// BlueprintValidationMessageArrayInput is an input type that accepts BlueprintValidationMessageArray and BlueprintValidationMessageArrayOutput values.
// You can construct a concrete instance of `BlueprintValidationMessageArrayInput` via:
//
//	BlueprintValidationMessageArray{ BlueprintValidationMessageArgs{...} }
type BlueprintValidationMessageArrayInput interface {
	pulumi.Input

	ToBlueprintValidationMessageArrayOutput() BlueprintValidationMessageArrayOutput
	ToBlueprintValidationMessageArrayOutputWithContext(context.Context) BlueprintValidationMessageArrayOutput
}

type BlueprintValidationMessageArray []BlueprintValidationMessageInput

func (BlueprintValidationMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlueprintValidationMessage)(nil)).Elem()
}

func (i BlueprintValidationMessageArray) ToBlueprintValidationMessageArrayOutput() BlueprintValidationMessageArrayOutput {
	return i.ToBlueprintValidationMessageArrayOutputWithContext(context.Background())
}

func (i BlueprintValidationMessageArray) ToBlueprintValidationMessageArrayOutputWithContext(ctx context.Context) BlueprintValidationMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintValidationMessageArrayOutput)
}

type BlueprintValidationMessageOutput struct{ *pulumi.OutputState }

func (BlueprintValidationMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintValidationMessage)(nil)).Elem()
}

func (o BlueprintValidationMessageOutput) ToBlueprintValidationMessageOutput() BlueprintValidationMessageOutput {
	return o
}

func (o BlueprintValidationMessageOutput) ToBlueprintValidationMessageOutputWithContext(ctx context.Context) BlueprintValidationMessageOutput {
	return o
}

func (o BlueprintValidationMessageOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintValidationMessage) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o BlueprintValidationMessageOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v BlueprintValidationMessage) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o BlueprintValidationMessageOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintValidationMessage) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o BlueprintValidationMessageOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintValidationMessage) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

func (o BlueprintValidationMessageOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintValidationMessage) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BlueprintValidationMessageArrayOutput struct{ *pulumi.OutputState }

func (BlueprintValidationMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlueprintValidationMessage)(nil)).Elem()
}

func (o BlueprintValidationMessageArrayOutput) ToBlueprintValidationMessageArrayOutput() BlueprintValidationMessageArrayOutput {
	return o
}

func (o BlueprintValidationMessageArrayOutput) ToBlueprintValidationMessageArrayOutputWithContext(ctx context.Context) BlueprintValidationMessageArrayOutput {
	return o
}

func (o BlueprintValidationMessageArrayOutput) Index(i pulumi.IntInput) BlueprintValidationMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlueprintValidationMessage {
		return vs[0].([]BlueprintValidationMessage)[vs[1].(int)]
	}).(BlueprintValidationMessageOutput)
}

type GetBlueprintValidationMessage struct {
	Message      string            `pulumi:"message"`
	Metadata     map[string]string `pulumi:"metadata"`
	Path         string            `pulumi:"path"`
	ResourceName string            `pulumi:"resourceName"`
	Type         string            `pulumi:"type"`
}

// GetBlueprintValidationMessageInput is an input type that accepts GetBlueprintValidationMessageArgs and GetBlueprintValidationMessageOutput values.
// You can construct a concrete instance of `GetBlueprintValidationMessageInput` via:
//
//	GetBlueprintValidationMessageArgs{...}
type GetBlueprintValidationMessageInput interface {
	pulumi.Input

	ToGetBlueprintValidationMessageOutput() GetBlueprintValidationMessageOutput
	ToGetBlueprintValidationMessageOutputWithContext(context.Context) GetBlueprintValidationMessageOutput
}

type GetBlueprintValidationMessageArgs struct {
	Message      pulumi.StringInput    `pulumi:"message"`
	Metadata     pulumi.StringMapInput `pulumi:"metadata"`
	Path         pulumi.StringInput    `pulumi:"path"`
	ResourceName pulumi.StringInput    `pulumi:"resourceName"`
	Type         pulumi.StringInput    `pulumi:"type"`
}

func (GetBlueprintValidationMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlueprintValidationMessage)(nil)).Elem()
}

func (i GetBlueprintValidationMessageArgs) ToGetBlueprintValidationMessageOutput() GetBlueprintValidationMessageOutput {
	return i.ToGetBlueprintValidationMessageOutputWithContext(context.Background())
}

func (i GetBlueprintValidationMessageArgs) ToGetBlueprintValidationMessageOutputWithContext(ctx context.Context) GetBlueprintValidationMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlueprintValidationMessageOutput)
}

// GetBlueprintValidationMessageArrayInput is an input type that accepts GetBlueprintValidationMessageArray and GetBlueprintValidationMessageArrayOutput values.
// You can construct a concrete instance of `GetBlueprintValidationMessageArrayInput` via:
//
//	GetBlueprintValidationMessageArray{ GetBlueprintValidationMessageArgs{...} }
type GetBlueprintValidationMessageArrayInput interface {
	pulumi.Input

	ToGetBlueprintValidationMessageArrayOutput() GetBlueprintValidationMessageArrayOutput
	ToGetBlueprintValidationMessageArrayOutputWithContext(context.Context) GetBlueprintValidationMessageArrayOutput
}

type GetBlueprintValidationMessageArray []GetBlueprintValidationMessageInput

func (GetBlueprintValidationMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlueprintValidationMessage)(nil)).Elem()
}

func (i GetBlueprintValidationMessageArray) ToGetBlueprintValidationMessageArrayOutput() GetBlueprintValidationMessageArrayOutput {
	return i.ToGetBlueprintValidationMessageArrayOutputWithContext(context.Background())
}

func (i GetBlueprintValidationMessageArray) ToGetBlueprintValidationMessageArrayOutputWithContext(ctx context.Context) GetBlueprintValidationMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlueprintValidationMessageArrayOutput)
}

type GetBlueprintValidationMessageOutput struct{ *pulumi.OutputState }

func (GetBlueprintValidationMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlueprintValidationMessage)(nil)).Elem()
}

func (o GetBlueprintValidationMessageOutput) ToGetBlueprintValidationMessageOutput() GetBlueprintValidationMessageOutput {
	return o
}

func (o GetBlueprintValidationMessageOutput) ToGetBlueprintValidationMessageOutputWithContext(ctx context.Context) GetBlueprintValidationMessageOutput {
	return o
}

func (o GetBlueprintValidationMessageOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlueprintValidationMessage) string { return v.Message }).(pulumi.StringOutput)
}

func (o GetBlueprintValidationMessageOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetBlueprintValidationMessage) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o GetBlueprintValidationMessageOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlueprintValidationMessage) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetBlueprintValidationMessageOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlueprintValidationMessage) string { return v.ResourceName }).(pulumi.StringOutput)
}

func (o GetBlueprintValidationMessageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlueprintValidationMessage) string { return v.Type }).(pulumi.StringOutput)
}

type GetBlueprintValidationMessageArrayOutput struct{ *pulumi.OutputState }

func (GetBlueprintValidationMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlueprintValidationMessage)(nil)).Elem()
}

func (o GetBlueprintValidationMessageArrayOutput) ToGetBlueprintValidationMessageArrayOutput() GetBlueprintValidationMessageArrayOutput {
	return o
}

func (o GetBlueprintValidationMessageArrayOutput) ToGetBlueprintValidationMessageArrayOutputWithContext(ctx context.Context) GetBlueprintValidationMessageArrayOutput {
	return o
}

func (o GetBlueprintValidationMessageArrayOutput) Index(i pulumi.IntInput) GetBlueprintValidationMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlueprintValidationMessage {
		return vs[0].([]GetBlueprintValidationMessage)[vs[1].(int)]
	}).(GetBlueprintValidationMessageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintValidationMessageInput)(nil)).Elem(), BlueprintValidationMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintValidationMessageArrayInput)(nil)).Elem(), BlueprintValidationMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlueprintValidationMessageInput)(nil)).Elem(), GetBlueprintValidationMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlueprintValidationMessageArrayInput)(nil)).Elem(), GetBlueprintValidationMessageArray{})
	pulumi.RegisterOutputType(BlueprintValidationMessageOutput{})
	pulumi.RegisterOutputType(BlueprintValidationMessageArrayOutput{})
	pulumi.RegisterOutputType(GetBlueprintValidationMessageOutput{})
	pulumi.RegisterOutputType(GetBlueprintValidationMessageArrayOutput{})
}
