// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package blockdevice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BlockDeviceConstraint struct {
	Expression string `pulumi:"expression"`
	Mandatory  bool   `pulumi:"mandatory"`
}

// BlockDeviceConstraintInput is an input type that accepts BlockDeviceConstraintArgs and BlockDeviceConstraintOutput values.
// You can construct a concrete instance of `BlockDeviceConstraintInput` via:
//
//          BlockDeviceConstraintArgs{...}
type BlockDeviceConstraintInput interface {
	pulumi.Input

	ToBlockDeviceConstraintOutput() BlockDeviceConstraintOutput
	ToBlockDeviceConstraintOutputWithContext(context.Context) BlockDeviceConstraintOutput
}

type BlockDeviceConstraintArgs struct {
	Expression pulumi.StringInput `pulumi:"expression"`
	Mandatory  pulumi.BoolInput   `pulumi:"mandatory"`
}

func (BlockDeviceConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDeviceConstraint)(nil)).Elem()
}

func (i BlockDeviceConstraintArgs) ToBlockDeviceConstraintOutput() BlockDeviceConstraintOutput {
	return i.ToBlockDeviceConstraintOutputWithContext(context.Background())
}

func (i BlockDeviceConstraintArgs) ToBlockDeviceConstraintOutputWithContext(ctx context.Context) BlockDeviceConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDeviceConstraintOutput)
}

// BlockDeviceConstraintArrayInput is an input type that accepts BlockDeviceConstraintArray and BlockDeviceConstraintArrayOutput values.
// You can construct a concrete instance of `BlockDeviceConstraintArrayInput` via:
//
//          BlockDeviceConstraintArray{ BlockDeviceConstraintArgs{...} }
type BlockDeviceConstraintArrayInput interface {
	pulumi.Input

	ToBlockDeviceConstraintArrayOutput() BlockDeviceConstraintArrayOutput
	ToBlockDeviceConstraintArrayOutputWithContext(context.Context) BlockDeviceConstraintArrayOutput
}

type BlockDeviceConstraintArray []BlockDeviceConstraintInput

func (BlockDeviceConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDeviceConstraint)(nil)).Elem()
}

func (i BlockDeviceConstraintArray) ToBlockDeviceConstraintArrayOutput() BlockDeviceConstraintArrayOutput {
	return i.ToBlockDeviceConstraintArrayOutputWithContext(context.Background())
}

func (i BlockDeviceConstraintArray) ToBlockDeviceConstraintArrayOutputWithContext(ctx context.Context) BlockDeviceConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDeviceConstraintArrayOutput)
}

type BlockDeviceConstraintOutput struct{ *pulumi.OutputState }

func (BlockDeviceConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDeviceConstraint)(nil)).Elem()
}

func (o BlockDeviceConstraintOutput) ToBlockDeviceConstraintOutput() BlockDeviceConstraintOutput {
	return o
}

func (o BlockDeviceConstraintOutput) ToBlockDeviceConstraintOutputWithContext(ctx context.Context) BlockDeviceConstraintOutput {
	return o
}

func (o BlockDeviceConstraintOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BlockDeviceConstraint) string { return v.Expression }).(pulumi.StringOutput)
}

func (o BlockDeviceConstraintOutput) Mandatory() pulumi.BoolOutput {
	return o.ApplyT(func(v BlockDeviceConstraint) bool { return v.Mandatory }).(pulumi.BoolOutput)
}

type BlockDeviceConstraintArrayOutput struct{ *pulumi.OutputState }

func (BlockDeviceConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDeviceConstraint)(nil)).Elem()
}

func (o BlockDeviceConstraintArrayOutput) ToBlockDeviceConstraintArrayOutput() BlockDeviceConstraintArrayOutput {
	return o
}

func (o BlockDeviceConstraintArrayOutput) ToBlockDeviceConstraintArrayOutputWithContext(ctx context.Context) BlockDeviceConstraintArrayOutput {
	return o
}

func (o BlockDeviceConstraintArrayOutput) Index(i pulumi.IntInput) BlockDeviceConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockDeviceConstraint {
		return vs[0].([]BlockDeviceConstraint)[vs[1].(int)]
	}).(BlockDeviceConstraintOutput)
}

type BlockDeviceLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// BlockDeviceLinkInput is an input type that accepts BlockDeviceLinkArgs and BlockDeviceLinkOutput values.
// You can construct a concrete instance of `BlockDeviceLinkInput` via:
//
//          BlockDeviceLinkArgs{...}
type BlockDeviceLinkInput interface {
	pulumi.Input

	ToBlockDeviceLinkOutput() BlockDeviceLinkOutput
	ToBlockDeviceLinkOutputWithContext(context.Context) BlockDeviceLinkOutput
}

type BlockDeviceLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (BlockDeviceLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDeviceLink)(nil)).Elem()
}

func (i BlockDeviceLinkArgs) ToBlockDeviceLinkOutput() BlockDeviceLinkOutput {
	return i.ToBlockDeviceLinkOutputWithContext(context.Background())
}

func (i BlockDeviceLinkArgs) ToBlockDeviceLinkOutputWithContext(ctx context.Context) BlockDeviceLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDeviceLinkOutput)
}

// BlockDeviceLinkArrayInput is an input type that accepts BlockDeviceLinkArray and BlockDeviceLinkArrayOutput values.
// You can construct a concrete instance of `BlockDeviceLinkArrayInput` via:
//
//          BlockDeviceLinkArray{ BlockDeviceLinkArgs{...} }
type BlockDeviceLinkArrayInput interface {
	pulumi.Input

	ToBlockDeviceLinkArrayOutput() BlockDeviceLinkArrayOutput
	ToBlockDeviceLinkArrayOutputWithContext(context.Context) BlockDeviceLinkArrayOutput
}

type BlockDeviceLinkArray []BlockDeviceLinkInput

func (BlockDeviceLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDeviceLink)(nil)).Elem()
}

func (i BlockDeviceLinkArray) ToBlockDeviceLinkArrayOutput() BlockDeviceLinkArrayOutput {
	return i.ToBlockDeviceLinkArrayOutputWithContext(context.Background())
}

func (i BlockDeviceLinkArray) ToBlockDeviceLinkArrayOutputWithContext(ctx context.Context) BlockDeviceLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDeviceLinkArrayOutput)
}

type BlockDeviceLinkOutput struct{ *pulumi.OutputState }

func (BlockDeviceLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDeviceLink)(nil)).Elem()
}

func (o BlockDeviceLinkOutput) ToBlockDeviceLinkOutput() BlockDeviceLinkOutput {
	return o
}

func (o BlockDeviceLinkOutput) ToBlockDeviceLinkOutputWithContext(ctx context.Context) BlockDeviceLinkOutput {
	return o
}

func (o BlockDeviceLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDeviceLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o BlockDeviceLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlockDeviceLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o BlockDeviceLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v BlockDeviceLink) string { return v.Rel }).(pulumi.StringOutput)
}

type BlockDeviceLinkArrayOutput struct{ *pulumi.OutputState }

func (BlockDeviceLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDeviceLink)(nil)).Elem()
}

func (o BlockDeviceLinkArrayOutput) ToBlockDeviceLinkArrayOutput() BlockDeviceLinkArrayOutput {
	return o
}

func (o BlockDeviceLinkArrayOutput) ToBlockDeviceLinkArrayOutputWithContext(ctx context.Context) BlockDeviceLinkArrayOutput {
	return o
}

func (o BlockDeviceLinkArrayOutput) Index(i pulumi.IntInput) BlockDeviceLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockDeviceLink {
		return vs[0].([]BlockDeviceLink)[vs[1].(int)]
	}).(BlockDeviceLinkOutput)
}

type BlockDeviceSnapshot struct {
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description *string `pulumi:"description"`
	// ID of the block device snapshot.
	Id *string `pulumi:"id"`
	// Indicates whether snapshot on block device is current.
	IsCurrent *bool `pulumi:"isCurrent"`
	// HATEOAS of the entity
	Links []BlockDeviceSnapshotLink `pulumi:"links"`
	// Human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// ID of organization that block device snapshot belongs to.
	OrgId *string `pulumi:"orgId"`
	// Email of block device snapshot owner.
	Owner *string `pulumi:"owner"`
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// BlockDeviceSnapshotInput is an input type that accepts BlockDeviceSnapshotArgs and BlockDeviceSnapshotOutput values.
// You can construct a concrete instance of `BlockDeviceSnapshotInput` via:
//
//          BlockDeviceSnapshotArgs{...}
type BlockDeviceSnapshotInput interface {
	pulumi.Input

	ToBlockDeviceSnapshotOutput() BlockDeviceSnapshotOutput
	ToBlockDeviceSnapshotOutputWithContext(context.Context) BlockDeviceSnapshotOutput
}

type BlockDeviceSnapshotArgs struct {
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ID of the block device snapshot.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Indicates whether snapshot on block device is current.
	IsCurrent pulumi.BoolPtrInput `pulumi:"isCurrent"`
	// HATEOAS of the entity
	Links BlockDeviceSnapshotLinkArrayInput `pulumi:"links"`
	// Human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// ID of organization that block device snapshot belongs to.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Email of block device snapshot owner.
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (BlockDeviceSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDeviceSnapshot)(nil)).Elem()
}

func (i BlockDeviceSnapshotArgs) ToBlockDeviceSnapshotOutput() BlockDeviceSnapshotOutput {
	return i.ToBlockDeviceSnapshotOutputWithContext(context.Background())
}

func (i BlockDeviceSnapshotArgs) ToBlockDeviceSnapshotOutputWithContext(ctx context.Context) BlockDeviceSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDeviceSnapshotOutput)
}

// BlockDeviceSnapshotArrayInput is an input type that accepts BlockDeviceSnapshotArray and BlockDeviceSnapshotArrayOutput values.
// You can construct a concrete instance of `BlockDeviceSnapshotArrayInput` via:
//
//          BlockDeviceSnapshotArray{ BlockDeviceSnapshotArgs{...} }
type BlockDeviceSnapshotArrayInput interface {
	pulumi.Input

	ToBlockDeviceSnapshotArrayOutput() BlockDeviceSnapshotArrayOutput
	ToBlockDeviceSnapshotArrayOutputWithContext(context.Context) BlockDeviceSnapshotArrayOutput
}

type BlockDeviceSnapshotArray []BlockDeviceSnapshotInput

func (BlockDeviceSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDeviceSnapshot)(nil)).Elem()
}

func (i BlockDeviceSnapshotArray) ToBlockDeviceSnapshotArrayOutput() BlockDeviceSnapshotArrayOutput {
	return i.ToBlockDeviceSnapshotArrayOutputWithContext(context.Background())
}

func (i BlockDeviceSnapshotArray) ToBlockDeviceSnapshotArrayOutputWithContext(ctx context.Context) BlockDeviceSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDeviceSnapshotArrayOutput)
}

type BlockDeviceSnapshotOutput struct{ *pulumi.OutputState }

func (BlockDeviceSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDeviceSnapshot)(nil)).Elem()
}

func (o BlockDeviceSnapshotOutput) ToBlockDeviceSnapshotOutput() BlockDeviceSnapshotOutput {
	return o
}

func (o BlockDeviceSnapshotOutput) ToBlockDeviceSnapshotOutputWithContext(ctx context.Context) BlockDeviceSnapshotOutput {
	return o
}

// Date when entity was created. Date and time format is ISO 8601 and UTC.
func (o BlockDeviceSnapshotOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDeviceSnapshot) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Describes machine within the scope of your organization and is not propagated to the cloud.
func (o BlockDeviceSnapshotOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDeviceSnapshot) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ID of the block device snapshot.
func (o BlockDeviceSnapshotOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDeviceSnapshot) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Indicates whether snapshot on block device is current.
func (o BlockDeviceSnapshotOutput) IsCurrent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlockDeviceSnapshot) *bool { return v.IsCurrent }).(pulumi.BoolPtrOutput)
}

// HATEOAS of the entity
func (o BlockDeviceSnapshotOutput) Links() BlockDeviceSnapshotLinkArrayOutput {
	return o.ApplyT(func(v BlockDeviceSnapshot) []BlockDeviceSnapshotLink { return v.Links }).(BlockDeviceSnapshotLinkArrayOutput)
}

// Human-friendly name used as an identifier in APIs that support this option.
func (o BlockDeviceSnapshotOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDeviceSnapshot) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ID of organization that block device snapshot belongs to.
func (o BlockDeviceSnapshotOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDeviceSnapshot) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Email of block device snapshot owner.
func (o BlockDeviceSnapshotOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDeviceSnapshot) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
func (o BlockDeviceSnapshotOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDeviceSnapshot) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type BlockDeviceSnapshotArrayOutput struct{ *pulumi.OutputState }

func (BlockDeviceSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDeviceSnapshot)(nil)).Elem()
}

func (o BlockDeviceSnapshotArrayOutput) ToBlockDeviceSnapshotArrayOutput() BlockDeviceSnapshotArrayOutput {
	return o
}

func (o BlockDeviceSnapshotArrayOutput) ToBlockDeviceSnapshotArrayOutputWithContext(ctx context.Context) BlockDeviceSnapshotArrayOutput {
	return o
}

func (o BlockDeviceSnapshotArrayOutput) Index(i pulumi.IntInput) BlockDeviceSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockDeviceSnapshot {
		return vs[0].([]BlockDeviceSnapshot)[vs[1].(int)]
	}).(BlockDeviceSnapshotOutput)
}

type BlockDeviceSnapshotLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// BlockDeviceSnapshotLinkInput is an input type that accepts BlockDeviceSnapshotLinkArgs and BlockDeviceSnapshotLinkOutput values.
// You can construct a concrete instance of `BlockDeviceSnapshotLinkInput` via:
//
//          BlockDeviceSnapshotLinkArgs{...}
type BlockDeviceSnapshotLinkInput interface {
	pulumi.Input

	ToBlockDeviceSnapshotLinkOutput() BlockDeviceSnapshotLinkOutput
	ToBlockDeviceSnapshotLinkOutputWithContext(context.Context) BlockDeviceSnapshotLinkOutput
}

type BlockDeviceSnapshotLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (BlockDeviceSnapshotLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDeviceSnapshotLink)(nil)).Elem()
}

func (i BlockDeviceSnapshotLinkArgs) ToBlockDeviceSnapshotLinkOutput() BlockDeviceSnapshotLinkOutput {
	return i.ToBlockDeviceSnapshotLinkOutputWithContext(context.Background())
}

func (i BlockDeviceSnapshotLinkArgs) ToBlockDeviceSnapshotLinkOutputWithContext(ctx context.Context) BlockDeviceSnapshotLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDeviceSnapshotLinkOutput)
}

// BlockDeviceSnapshotLinkArrayInput is an input type that accepts BlockDeviceSnapshotLinkArray and BlockDeviceSnapshotLinkArrayOutput values.
// You can construct a concrete instance of `BlockDeviceSnapshotLinkArrayInput` via:
//
//          BlockDeviceSnapshotLinkArray{ BlockDeviceSnapshotLinkArgs{...} }
type BlockDeviceSnapshotLinkArrayInput interface {
	pulumi.Input

	ToBlockDeviceSnapshotLinkArrayOutput() BlockDeviceSnapshotLinkArrayOutput
	ToBlockDeviceSnapshotLinkArrayOutputWithContext(context.Context) BlockDeviceSnapshotLinkArrayOutput
}

type BlockDeviceSnapshotLinkArray []BlockDeviceSnapshotLinkInput

func (BlockDeviceSnapshotLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDeviceSnapshotLink)(nil)).Elem()
}

func (i BlockDeviceSnapshotLinkArray) ToBlockDeviceSnapshotLinkArrayOutput() BlockDeviceSnapshotLinkArrayOutput {
	return i.ToBlockDeviceSnapshotLinkArrayOutputWithContext(context.Background())
}

func (i BlockDeviceSnapshotLinkArray) ToBlockDeviceSnapshotLinkArrayOutputWithContext(ctx context.Context) BlockDeviceSnapshotLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDeviceSnapshotLinkArrayOutput)
}

type BlockDeviceSnapshotLinkOutput struct{ *pulumi.OutputState }

func (BlockDeviceSnapshotLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDeviceSnapshotLink)(nil)).Elem()
}

func (o BlockDeviceSnapshotLinkOutput) ToBlockDeviceSnapshotLinkOutput() BlockDeviceSnapshotLinkOutput {
	return o
}

func (o BlockDeviceSnapshotLinkOutput) ToBlockDeviceSnapshotLinkOutputWithContext(ctx context.Context) BlockDeviceSnapshotLinkOutput {
	return o
}

func (o BlockDeviceSnapshotLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDeviceSnapshotLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o BlockDeviceSnapshotLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlockDeviceSnapshotLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o BlockDeviceSnapshotLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v BlockDeviceSnapshotLink) string { return v.Rel }).(pulumi.StringOutput)
}

type BlockDeviceSnapshotLinkArrayOutput struct{ *pulumi.OutputState }

func (BlockDeviceSnapshotLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDeviceSnapshotLink)(nil)).Elem()
}

func (o BlockDeviceSnapshotLinkArrayOutput) ToBlockDeviceSnapshotLinkArrayOutput() BlockDeviceSnapshotLinkArrayOutput {
	return o
}

func (o BlockDeviceSnapshotLinkArrayOutput) ToBlockDeviceSnapshotLinkArrayOutputWithContext(ctx context.Context) BlockDeviceSnapshotLinkArrayOutput {
	return o
}

func (o BlockDeviceSnapshotLinkArrayOutput) Index(i pulumi.IntInput) BlockDeviceSnapshotLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockDeviceSnapshotLink {
		return vs[0].([]BlockDeviceSnapshotLink)[vs[1].(int)]
	}).(BlockDeviceSnapshotLinkOutput)
}

type BlockDeviceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// BlockDeviceTagInput is an input type that accepts BlockDeviceTagArgs and BlockDeviceTagOutput values.
// You can construct a concrete instance of `BlockDeviceTagInput` via:
//
//          BlockDeviceTagArgs{...}
type BlockDeviceTagInput interface {
	pulumi.Input

	ToBlockDeviceTagOutput() BlockDeviceTagOutput
	ToBlockDeviceTagOutputWithContext(context.Context) BlockDeviceTagOutput
}

type BlockDeviceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (BlockDeviceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDeviceTag)(nil)).Elem()
}

func (i BlockDeviceTagArgs) ToBlockDeviceTagOutput() BlockDeviceTagOutput {
	return i.ToBlockDeviceTagOutputWithContext(context.Background())
}

func (i BlockDeviceTagArgs) ToBlockDeviceTagOutputWithContext(ctx context.Context) BlockDeviceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDeviceTagOutput)
}

// BlockDeviceTagArrayInput is an input type that accepts BlockDeviceTagArray and BlockDeviceTagArrayOutput values.
// You can construct a concrete instance of `BlockDeviceTagArrayInput` via:
//
//          BlockDeviceTagArray{ BlockDeviceTagArgs{...} }
type BlockDeviceTagArrayInput interface {
	pulumi.Input

	ToBlockDeviceTagArrayOutput() BlockDeviceTagArrayOutput
	ToBlockDeviceTagArrayOutputWithContext(context.Context) BlockDeviceTagArrayOutput
}

type BlockDeviceTagArray []BlockDeviceTagInput

func (BlockDeviceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDeviceTag)(nil)).Elem()
}

func (i BlockDeviceTagArray) ToBlockDeviceTagArrayOutput() BlockDeviceTagArrayOutput {
	return i.ToBlockDeviceTagArrayOutputWithContext(context.Background())
}

func (i BlockDeviceTagArray) ToBlockDeviceTagArrayOutputWithContext(ctx context.Context) BlockDeviceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDeviceTagArrayOutput)
}

type BlockDeviceTagOutput struct{ *pulumi.OutputState }

func (BlockDeviceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDeviceTag)(nil)).Elem()
}

func (o BlockDeviceTagOutput) ToBlockDeviceTagOutput() BlockDeviceTagOutput {
	return o
}

func (o BlockDeviceTagOutput) ToBlockDeviceTagOutputWithContext(ctx context.Context) BlockDeviceTagOutput {
	return o
}

func (o BlockDeviceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BlockDeviceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o BlockDeviceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BlockDeviceTag) string { return v.Value }).(pulumi.StringOutput)
}

type BlockDeviceTagArrayOutput struct{ *pulumi.OutputState }

func (BlockDeviceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDeviceTag)(nil)).Elem()
}

func (o BlockDeviceTagArrayOutput) ToBlockDeviceTagArrayOutput() BlockDeviceTagArrayOutput {
	return o
}

func (o BlockDeviceTagArrayOutput) ToBlockDeviceTagArrayOutputWithContext(ctx context.Context) BlockDeviceTagArrayOutput {
	return o
}

func (o BlockDeviceTagArrayOutput) Index(i pulumi.IntInput) BlockDeviceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockDeviceTag {
		return vs[0].([]BlockDeviceTag)[vs[1].(int)]
	}).(BlockDeviceTagOutput)
}

type SnapshotLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// SnapshotLinkInput is an input type that accepts SnapshotLinkArgs and SnapshotLinkOutput values.
// You can construct a concrete instance of `SnapshotLinkInput` via:
//
//          SnapshotLinkArgs{...}
type SnapshotLinkInput interface {
	pulumi.Input

	ToSnapshotLinkOutput() SnapshotLinkOutput
	ToSnapshotLinkOutputWithContext(context.Context) SnapshotLinkOutput
}

type SnapshotLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (SnapshotLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotLink)(nil)).Elem()
}

func (i SnapshotLinkArgs) ToSnapshotLinkOutput() SnapshotLinkOutput {
	return i.ToSnapshotLinkOutputWithContext(context.Background())
}

func (i SnapshotLinkArgs) ToSnapshotLinkOutputWithContext(ctx context.Context) SnapshotLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotLinkOutput)
}

// SnapshotLinkArrayInput is an input type that accepts SnapshotLinkArray and SnapshotLinkArrayOutput values.
// You can construct a concrete instance of `SnapshotLinkArrayInput` via:
//
//          SnapshotLinkArray{ SnapshotLinkArgs{...} }
type SnapshotLinkArrayInput interface {
	pulumi.Input

	ToSnapshotLinkArrayOutput() SnapshotLinkArrayOutput
	ToSnapshotLinkArrayOutputWithContext(context.Context) SnapshotLinkArrayOutput
}

type SnapshotLinkArray []SnapshotLinkInput

func (SnapshotLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotLink)(nil)).Elem()
}

func (i SnapshotLinkArray) ToSnapshotLinkArrayOutput() SnapshotLinkArrayOutput {
	return i.ToSnapshotLinkArrayOutputWithContext(context.Background())
}

func (i SnapshotLinkArray) ToSnapshotLinkArrayOutputWithContext(ctx context.Context) SnapshotLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotLinkArrayOutput)
}

type SnapshotLinkOutput struct{ *pulumi.OutputState }

func (SnapshotLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotLink)(nil)).Elem()
}

func (o SnapshotLinkOutput) ToSnapshotLinkOutput() SnapshotLinkOutput {
	return o
}

func (o SnapshotLinkOutput) ToSnapshotLinkOutputWithContext(ctx context.Context) SnapshotLinkOutput {
	return o
}

func (o SnapshotLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o SnapshotLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SnapshotLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o SnapshotLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotLink) string { return v.Rel }).(pulumi.StringOutput)
}

type SnapshotLinkArrayOutput struct{ *pulumi.OutputState }

func (SnapshotLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnapshotLink)(nil)).Elem()
}

func (o SnapshotLinkArrayOutput) ToSnapshotLinkArrayOutput() SnapshotLinkArrayOutput {
	return o
}

func (o SnapshotLinkArrayOutput) ToSnapshotLinkArrayOutputWithContext(ctx context.Context) SnapshotLinkArrayOutput {
	return o
}

func (o SnapshotLinkArrayOutput) Index(i pulumi.IntInput) SnapshotLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnapshotLink {
		return vs[0].([]SnapshotLink)[vs[1].(int)]
	}).(SnapshotLinkOutput)
}

type GetBlockDeviceLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetBlockDeviceLinkInput is an input type that accepts GetBlockDeviceLinkArgs and GetBlockDeviceLinkOutput values.
// You can construct a concrete instance of `GetBlockDeviceLinkInput` via:
//
//          GetBlockDeviceLinkArgs{...}
type GetBlockDeviceLinkInput interface {
	pulumi.Input

	ToGetBlockDeviceLinkOutput() GetBlockDeviceLinkOutput
	ToGetBlockDeviceLinkOutputWithContext(context.Context) GetBlockDeviceLinkOutput
}

type GetBlockDeviceLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetBlockDeviceLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockDeviceLink)(nil)).Elem()
}

func (i GetBlockDeviceLinkArgs) ToGetBlockDeviceLinkOutput() GetBlockDeviceLinkOutput {
	return i.ToGetBlockDeviceLinkOutputWithContext(context.Background())
}

func (i GetBlockDeviceLinkArgs) ToGetBlockDeviceLinkOutputWithContext(ctx context.Context) GetBlockDeviceLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockDeviceLinkOutput)
}

// GetBlockDeviceLinkArrayInput is an input type that accepts GetBlockDeviceLinkArray and GetBlockDeviceLinkArrayOutput values.
// You can construct a concrete instance of `GetBlockDeviceLinkArrayInput` via:
//
//          GetBlockDeviceLinkArray{ GetBlockDeviceLinkArgs{...} }
type GetBlockDeviceLinkArrayInput interface {
	pulumi.Input

	ToGetBlockDeviceLinkArrayOutput() GetBlockDeviceLinkArrayOutput
	ToGetBlockDeviceLinkArrayOutputWithContext(context.Context) GetBlockDeviceLinkArrayOutput
}

type GetBlockDeviceLinkArray []GetBlockDeviceLinkInput

func (GetBlockDeviceLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockDeviceLink)(nil)).Elem()
}

func (i GetBlockDeviceLinkArray) ToGetBlockDeviceLinkArrayOutput() GetBlockDeviceLinkArrayOutput {
	return i.ToGetBlockDeviceLinkArrayOutputWithContext(context.Background())
}

func (i GetBlockDeviceLinkArray) ToGetBlockDeviceLinkArrayOutputWithContext(ctx context.Context) GetBlockDeviceLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockDeviceLinkArrayOutput)
}

type GetBlockDeviceLinkOutput struct{ *pulumi.OutputState }

func (GetBlockDeviceLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockDeviceLink)(nil)).Elem()
}

func (o GetBlockDeviceLinkOutput) ToGetBlockDeviceLinkOutput() GetBlockDeviceLinkOutput {
	return o
}

func (o GetBlockDeviceLinkOutput) ToGetBlockDeviceLinkOutputWithContext(ctx context.Context) GetBlockDeviceLinkOutput {
	return o
}

func (o GetBlockDeviceLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBlockDeviceLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetBlockDeviceLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBlockDeviceLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetBlockDeviceLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetBlockDeviceLinkArrayOutput struct{ *pulumi.OutputState }

func (GetBlockDeviceLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockDeviceLink)(nil)).Elem()
}

func (o GetBlockDeviceLinkArrayOutput) ToGetBlockDeviceLinkArrayOutput() GetBlockDeviceLinkArrayOutput {
	return o
}

func (o GetBlockDeviceLinkArrayOutput) ToGetBlockDeviceLinkArrayOutputWithContext(ctx context.Context) GetBlockDeviceLinkArrayOutput {
	return o
}

func (o GetBlockDeviceLinkArrayOutput) Index(i pulumi.IntInput) GetBlockDeviceLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockDeviceLink {
		return vs[0].([]GetBlockDeviceLink)[vs[1].(int)]
	}).(GetBlockDeviceLinkOutput)
}

type GetBlockDeviceSnapshot struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt string `pulumi:"createdAt"`
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description string `pulumi:"description"`
	// The id of the block device.
	Id        string `pulumi:"id"`
	IsCurrent bool   `pulumi:"isCurrent"`
	// HATEOAS of the entity.
	Links []GetBlockDeviceSnapshotLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name string `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrgId string `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner string `pulumi:"owner"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetBlockDeviceSnapshotInput is an input type that accepts GetBlockDeviceSnapshotArgs and GetBlockDeviceSnapshotOutput values.
// You can construct a concrete instance of `GetBlockDeviceSnapshotInput` via:
//
//          GetBlockDeviceSnapshotArgs{...}
type GetBlockDeviceSnapshotInput interface {
	pulumi.Input

	ToGetBlockDeviceSnapshotOutput() GetBlockDeviceSnapshotOutput
	ToGetBlockDeviceSnapshotOutputWithContext(context.Context) GetBlockDeviceSnapshotOutput
}

type GetBlockDeviceSnapshotArgs struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the block device.
	Id        pulumi.StringInput `pulumi:"id"`
	IsCurrent pulumi.BoolInput   `pulumi:"isCurrent"`
	// HATEOAS of the entity.
	Links GetBlockDeviceSnapshotLinkArrayInput `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringInput `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetBlockDeviceSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockDeviceSnapshot)(nil)).Elem()
}

func (i GetBlockDeviceSnapshotArgs) ToGetBlockDeviceSnapshotOutput() GetBlockDeviceSnapshotOutput {
	return i.ToGetBlockDeviceSnapshotOutputWithContext(context.Background())
}

func (i GetBlockDeviceSnapshotArgs) ToGetBlockDeviceSnapshotOutputWithContext(ctx context.Context) GetBlockDeviceSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockDeviceSnapshotOutput)
}

// GetBlockDeviceSnapshotArrayInput is an input type that accepts GetBlockDeviceSnapshotArray and GetBlockDeviceSnapshotArrayOutput values.
// You can construct a concrete instance of `GetBlockDeviceSnapshotArrayInput` via:
//
//          GetBlockDeviceSnapshotArray{ GetBlockDeviceSnapshotArgs{...} }
type GetBlockDeviceSnapshotArrayInput interface {
	pulumi.Input

	ToGetBlockDeviceSnapshotArrayOutput() GetBlockDeviceSnapshotArrayOutput
	ToGetBlockDeviceSnapshotArrayOutputWithContext(context.Context) GetBlockDeviceSnapshotArrayOutput
}

type GetBlockDeviceSnapshotArray []GetBlockDeviceSnapshotInput

func (GetBlockDeviceSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockDeviceSnapshot)(nil)).Elem()
}

func (i GetBlockDeviceSnapshotArray) ToGetBlockDeviceSnapshotArrayOutput() GetBlockDeviceSnapshotArrayOutput {
	return i.ToGetBlockDeviceSnapshotArrayOutputWithContext(context.Background())
}

func (i GetBlockDeviceSnapshotArray) ToGetBlockDeviceSnapshotArrayOutputWithContext(ctx context.Context) GetBlockDeviceSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockDeviceSnapshotArrayOutput)
}

type GetBlockDeviceSnapshotOutput struct{ *pulumi.OutputState }

func (GetBlockDeviceSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockDeviceSnapshot)(nil)).Elem()
}

func (o GetBlockDeviceSnapshotOutput) ToGetBlockDeviceSnapshotOutput() GetBlockDeviceSnapshotOutput {
	return o
}

func (o GetBlockDeviceSnapshotOutput) ToGetBlockDeviceSnapshotOutputWithContext(ctx context.Context) GetBlockDeviceSnapshotOutput {
	return o
}

// Date when the entity was created. The date is in ISO 6801 and UTC.
func (o GetBlockDeviceSnapshotOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshot) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Describes machine within the scope of your organization and is not propagated to the cloud.
func (o GetBlockDeviceSnapshotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshot) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the block device.
func (o GetBlockDeviceSnapshotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshot) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBlockDeviceSnapshotOutput) IsCurrent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshot) bool { return v.IsCurrent }).(pulumi.BoolOutput)
}

// HATEOAS of the entity.
func (o GetBlockDeviceSnapshotOutput) Links() GetBlockDeviceSnapshotLinkArrayOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshot) []GetBlockDeviceSnapshotLink { return v.Links }).(GetBlockDeviceSnapshotLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o GetBlockDeviceSnapshotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshot) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o GetBlockDeviceSnapshotOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshot) string { return v.OrgId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o GetBlockDeviceSnapshotOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshot) string { return v.Owner }).(pulumi.StringOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o GetBlockDeviceSnapshotOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshot) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetBlockDeviceSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetBlockDeviceSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockDeviceSnapshot)(nil)).Elem()
}

func (o GetBlockDeviceSnapshotArrayOutput) ToGetBlockDeviceSnapshotArrayOutput() GetBlockDeviceSnapshotArrayOutput {
	return o
}

func (o GetBlockDeviceSnapshotArrayOutput) ToGetBlockDeviceSnapshotArrayOutputWithContext(ctx context.Context) GetBlockDeviceSnapshotArrayOutput {
	return o
}

func (o GetBlockDeviceSnapshotArrayOutput) Index(i pulumi.IntInput) GetBlockDeviceSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockDeviceSnapshot {
		return vs[0].([]GetBlockDeviceSnapshot)[vs[1].(int)]
	}).(GetBlockDeviceSnapshotOutput)
}

type GetBlockDeviceSnapshotLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetBlockDeviceSnapshotLinkInput is an input type that accepts GetBlockDeviceSnapshotLinkArgs and GetBlockDeviceSnapshotLinkOutput values.
// You can construct a concrete instance of `GetBlockDeviceSnapshotLinkInput` via:
//
//          GetBlockDeviceSnapshotLinkArgs{...}
type GetBlockDeviceSnapshotLinkInput interface {
	pulumi.Input

	ToGetBlockDeviceSnapshotLinkOutput() GetBlockDeviceSnapshotLinkOutput
	ToGetBlockDeviceSnapshotLinkOutputWithContext(context.Context) GetBlockDeviceSnapshotLinkOutput
}

type GetBlockDeviceSnapshotLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetBlockDeviceSnapshotLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockDeviceSnapshotLink)(nil)).Elem()
}

func (i GetBlockDeviceSnapshotLinkArgs) ToGetBlockDeviceSnapshotLinkOutput() GetBlockDeviceSnapshotLinkOutput {
	return i.ToGetBlockDeviceSnapshotLinkOutputWithContext(context.Background())
}

func (i GetBlockDeviceSnapshotLinkArgs) ToGetBlockDeviceSnapshotLinkOutputWithContext(ctx context.Context) GetBlockDeviceSnapshotLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockDeviceSnapshotLinkOutput)
}

// GetBlockDeviceSnapshotLinkArrayInput is an input type that accepts GetBlockDeviceSnapshotLinkArray and GetBlockDeviceSnapshotLinkArrayOutput values.
// You can construct a concrete instance of `GetBlockDeviceSnapshotLinkArrayInput` via:
//
//          GetBlockDeviceSnapshotLinkArray{ GetBlockDeviceSnapshotLinkArgs{...} }
type GetBlockDeviceSnapshotLinkArrayInput interface {
	pulumi.Input

	ToGetBlockDeviceSnapshotLinkArrayOutput() GetBlockDeviceSnapshotLinkArrayOutput
	ToGetBlockDeviceSnapshotLinkArrayOutputWithContext(context.Context) GetBlockDeviceSnapshotLinkArrayOutput
}

type GetBlockDeviceSnapshotLinkArray []GetBlockDeviceSnapshotLinkInput

func (GetBlockDeviceSnapshotLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockDeviceSnapshotLink)(nil)).Elem()
}

func (i GetBlockDeviceSnapshotLinkArray) ToGetBlockDeviceSnapshotLinkArrayOutput() GetBlockDeviceSnapshotLinkArrayOutput {
	return i.ToGetBlockDeviceSnapshotLinkArrayOutputWithContext(context.Background())
}

func (i GetBlockDeviceSnapshotLinkArray) ToGetBlockDeviceSnapshotLinkArrayOutputWithContext(ctx context.Context) GetBlockDeviceSnapshotLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockDeviceSnapshotLinkArrayOutput)
}

type GetBlockDeviceSnapshotLinkOutput struct{ *pulumi.OutputState }

func (GetBlockDeviceSnapshotLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockDeviceSnapshotLink)(nil)).Elem()
}

func (o GetBlockDeviceSnapshotLinkOutput) ToGetBlockDeviceSnapshotLinkOutput() GetBlockDeviceSnapshotLinkOutput {
	return o
}

func (o GetBlockDeviceSnapshotLinkOutput) ToGetBlockDeviceSnapshotLinkOutputWithContext(ctx context.Context) GetBlockDeviceSnapshotLinkOutput {
	return o
}

func (o GetBlockDeviceSnapshotLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshotLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetBlockDeviceSnapshotLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshotLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetBlockDeviceSnapshotLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceSnapshotLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetBlockDeviceSnapshotLinkArrayOutput struct{ *pulumi.OutputState }

func (GetBlockDeviceSnapshotLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockDeviceSnapshotLink)(nil)).Elem()
}

func (o GetBlockDeviceSnapshotLinkArrayOutput) ToGetBlockDeviceSnapshotLinkArrayOutput() GetBlockDeviceSnapshotLinkArrayOutput {
	return o
}

func (o GetBlockDeviceSnapshotLinkArrayOutput) ToGetBlockDeviceSnapshotLinkArrayOutputWithContext(ctx context.Context) GetBlockDeviceSnapshotLinkArrayOutput {
	return o
}

func (o GetBlockDeviceSnapshotLinkArrayOutput) Index(i pulumi.IntInput) GetBlockDeviceSnapshotLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockDeviceSnapshotLink {
		return vs[0].([]GetBlockDeviceSnapshotLink)[vs[1].(int)]
	}).(GetBlockDeviceSnapshotLinkOutput)
}

type GetBlockDeviceTag struct {
	// Tag’s key.
	Key string `pulumi:"key"`
	// Tag’s value.
	Value string `pulumi:"value"`
}

// GetBlockDeviceTagInput is an input type that accepts GetBlockDeviceTagArgs and GetBlockDeviceTagOutput values.
// You can construct a concrete instance of `GetBlockDeviceTagInput` via:
//
//          GetBlockDeviceTagArgs{...}
type GetBlockDeviceTagInput interface {
	pulumi.Input

	ToGetBlockDeviceTagOutput() GetBlockDeviceTagOutput
	ToGetBlockDeviceTagOutputWithContext(context.Context) GetBlockDeviceTagOutput
}

type GetBlockDeviceTagArgs struct {
	// Tag’s key.
	Key pulumi.StringInput `pulumi:"key"`
	// Tag’s value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetBlockDeviceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockDeviceTag)(nil)).Elem()
}

func (i GetBlockDeviceTagArgs) ToGetBlockDeviceTagOutput() GetBlockDeviceTagOutput {
	return i.ToGetBlockDeviceTagOutputWithContext(context.Background())
}

func (i GetBlockDeviceTagArgs) ToGetBlockDeviceTagOutputWithContext(ctx context.Context) GetBlockDeviceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockDeviceTagOutput)
}

// GetBlockDeviceTagArrayInput is an input type that accepts GetBlockDeviceTagArray and GetBlockDeviceTagArrayOutput values.
// You can construct a concrete instance of `GetBlockDeviceTagArrayInput` via:
//
//          GetBlockDeviceTagArray{ GetBlockDeviceTagArgs{...} }
type GetBlockDeviceTagArrayInput interface {
	pulumi.Input

	ToGetBlockDeviceTagArrayOutput() GetBlockDeviceTagArrayOutput
	ToGetBlockDeviceTagArrayOutputWithContext(context.Context) GetBlockDeviceTagArrayOutput
}

type GetBlockDeviceTagArray []GetBlockDeviceTagInput

func (GetBlockDeviceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockDeviceTag)(nil)).Elem()
}

func (i GetBlockDeviceTagArray) ToGetBlockDeviceTagArrayOutput() GetBlockDeviceTagArrayOutput {
	return i.ToGetBlockDeviceTagArrayOutputWithContext(context.Background())
}

func (i GetBlockDeviceTagArray) ToGetBlockDeviceTagArrayOutputWithContext(ctx context.Context) GetBlockDeviceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockDeviceTagArrayOutput)
}

type GetBlockDeviceTagOutput struct{ *pulumi.OutputState }

func (GetBlockDeviceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockDeviceTag)(nil)).Elem()
}

func (o GetBlockDeviceTagOutput) ToGetBlockDeviceTagOutput() GetBlockDeviceTagOutput {
	return o
}

func (o GetBlockDeviceTagOutput) ToGetBlockDeviceTagOutputWithContext(ctx context.Context) GetBlockDeviceTagOutput {
	return o
}

// Tag’s key.
func (o GetBlockDeviceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceTag) string { return v.Key }).(pulumi.StringOutput)
}

// Tag’s value.
func (o GetBlockDeviceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockDeviceTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetBlockDeviceTagArrayOutput struct{ *pulumi.OutputState }

func (GetBlockDeviceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockDeviceTag)(nil)).Elem()
}

func (o GetBlockDeviceTagArrayOutput) ToGetBlockDeviceTagArrayOutput() GetBlockDeviceTagArrayOutput {
	return o
}

func (o GetBlockDeviceTagArrayOutput) ToGetBlockDeviceTagArrayOutputWithContext(ctx context.Context) GetBlockDeviceTagArrayOutput {
	return o
}

func (o GetBlockDeviceTagArrayOutput) Index(i pulumi.IntInput) GetBlockDeviceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockDeviceTag {
		return vs[0].([]GetBlockDeviceTag)[vs[1].(int)]
	}).(GetBlockDeviceTagOutput)
}

type GetSnapshotsSnapshot struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt string `pulumi:"createdAt"`
	// A human-friendly description.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// Indicates whether this snapshot is the current snapshot on the block-device.
	IsCurrent bool `pulumi:"isCurrent"`
	// HATEOAS of the entity
	Links []GetSnapshotsSnapshotLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.  Only one of 'filter', 'id', 'name' or 'region_id' must be specified.
	Name string `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrgId string `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner     string `pulumi:"owner"`
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetSnapshotsSnapshotInput is an input type that accepts GetSnapshotsSnapshotArgs and GetSnapshotsSnapshotOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotInput` via:
//
//          GetSnapshotsSnapshotArgs{...}
type GetSnapshotsSnapshotInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput
	ToGetSnapshotsSnapshotOutputWithContext(context.Context) GetSnapshotsSnapshotOutput
}

type GetSnapshotsSnapshotArgs struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// A human-friendly description.
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.StringInput `pulumi:"id"`
	// Indicates whether this snapshot is the current snapshot on the block-device.
	IsCurrent pulumi.BoolInput `pulumi:"isCurrent"`
	// HATEOAS of the entity
	Links GetSnapshotsSnapshotLinkArrayInput `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.  Only one of 'filter', 'id', 'name' or 'region_id' must be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner     pulumi.StringInput `pulumi:"owner"`
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetSnapshotsSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshot)(nil)).Elem()
}

func (i GetSnapshotsSnapshotArgs) ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput {
	return i.ToGetSnapshotsSnapshotOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotArgs) ToGetSnapshotsSnapshotOutputWithContext(ctx context.Context) GetSnapshotsSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotOutput)
}

// GetSnapshotsSnapshotArrayInput is an input type that accepts GetSnapshotsSnapshotArray and GetSnapshotsSnapshotArrayOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotArrayInput` via:
//
//          GetSnapshotsSnapshotArray{ GetSnapshotsSnapshotArgs{...} }
type GetSnapshotsSnapshotArrayInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput
	ToGetSnapshotsSnapshotArrayOutputWithContext(context.Context) GetSnapshotsSnapshotArrayOutput
}

type GetSnapshotsSnapshotArray []GetSnapshotsSnapshotInput

func (GetSnapshotsSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshot)(nil)).Elem()
}

func (i GetSnapshotsSnapshotArray) ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput {
	return i.ToGetSnapshotsSnapshotArrayOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotArray) ToGetSnapshotsSnapshotArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotArrayOutput)
}

type GetSnapshotsSnapshotOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshot)(nil)).Elem()
}

func (o GetSnapshotsSnapshotOutput) ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput {
	return o
}

func (o GetSnapshotsSnapshotOutput) ToGetSnapshotsSnapshotOutputWithContext(ctx context.Context) GetSnapshotsSnapshotOutput {
	return o
}

// Date when the entity was created. The date is in ISO 6801 and UTC.
func (o GetSnapshotsSnapshotOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A human-friendly description.
func (o GetSnapshotsSnapshotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSnapshotsSnapshotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether this snapshot is the current snapshot on the block-device.
func (o GetSnapshotsSnapshotOutput) IsCurrent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) bool { return v.IsCurrent }).(pulumi.BoolOutput)
}

// HATEOAS of the entity
func (o GetSnapshotsSnapshotOutput) Links() GetSnapshotsSnapshotLinkArrayOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) []GetSnapshotsSnapshotLink { return v.Links }).(GetSnapshotsSnapshotLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.  Only one of 'filter', 'id', 'name' or 'region_id' must be specified.
func (o GetSnapshotsSnapshotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o GetSnapshotsSnapshotOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.OrgId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o GetSnapshotsSnapshotOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetSnapshotsSnapshotOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetSnapshotsSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshot)(nil)).Elem()
}

func (o GetSnapshotsSnapshotArrayOutput) ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotArrayOutput) ToGetSnapshotsSnapshotArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotArrayOutput) Index(i pulumi.IntInput) GetSnapshotsSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotsSnapshot {
		return vs[0].([]GetSnapshotsSnapshot)[vs[1].(int)]
	}).(GetSnapshotsSnapshotOutput)
}

type GetSnapshotsSnapshotLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetSnapshotsSnapshotLinkInput is an input type that accepts GetSnapshotsSnapshotLinkArgs and GetSnapshotsSnapshotLinkOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotLinkInput` via:
//
//          GetSnapshotsSnapshotLinkArgs{...}
type GetSnapshotsSnapshotLinkInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotLinkOutput() GetSnapshotsSnapshotLinkOutput
	ToGetSnapshotsSnapshotLinkOutputWithContext(context.Context) GetSnapshotsSnapshotLinkOutput
}

type GetSnapshotsSnapshotLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetSnapshotsSnapshotLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshotLink)(nil)).Elem()
}

func (i GetSnapshotsSnapshotLinkArgs) ToGetSnapshotsSnapshotLinkOutput() GetSnapshotsSnapshotLinkOutput {
	return i.ToGetSnapshotsSnapshotLinkOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotLinkArgs) ToGetSnapshotsSnapshotLinkOutputWithContext(ctx context.Context) GetSnapshotsSnapshotLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotLinkOutput)
}

// GetSnapshotsSnapshotLinkArrayInput is an input type that accepts GetSnapshotsSnapshotLinkArray and GetSnapshotsSnapshotLinkArrayOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotLinkArrayInput` via:
//
//          GetSnapshotsSnapshotLinkArray{ GetSnapshotsSnapshotLinkArgs{...} }
type GetSnapshotsSnapshotLinkArrayInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotLinkArrayOutput() GetSnapshotsSnapshotLinkArrayOutput
	ToGetSnapshotsSnapshotLinkArrayOutputWithContext(context.Context) GetSnapshotsSnapshotLinkArrayOutput
}

type GetSnapshotsSnapshotLinkArray []GetSnapshotsSnapshotLinkInput

func (GetSnapshotsSnapshotLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshotLink)(nil)).Elem()
}

func (i GetSnapshotsSnapshotLinkArray) ToGetSnapshotsSnapshotLinkArrayOutput() GetSnapshotsSnapshotLinkArrayOutput {
	return i.ToGetSnapshotsSnapshotLinkArrayOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotLinkArray) ToGetSnapshotsSnapshotLinkArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotLinkArrayOutput)
}

type GetSnapshotsSnapshotLinkOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshotLink)(nil)).Elem()
}

func (o GetSnapshotsSnapshotLinkOutput) ToGetSnapshotsSnapshotLinkOutput() GetSnapshotsSnapshotLinkOutput {
	return o
}

func (o GetSnapshotsSnapshotLinkOutput) ToGetSnapshotsSnapshotLinkOutputWithContext(ctx context.Context) GetSnapshotsSnapshotLinkOutput {
	return o
}

func (o GetSnapshotsSnapshotLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshotLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetSnapshotsSnapshotLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshotLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetSnapshotsSnapshotLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshotLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetSnapshotsSnapshotLinkArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshotLink)(nil)).Elem()
}

func (o GetSnapshotsSnapshotLinkArrayOutput) ToGetSnapshotsSnapshotLinkArrayOutput() GetSnapshotsSnapshotLinkArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotLinkArrayOutput) ToGetSnapshotsSnapshotLinkArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotLinkArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotLinkArrayOutput) Index(i pulumi.IntInput) GetSnapshotsSnapshotLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotsSnapshotLink {
		return vs[0].([]GetSnapshotsSnapshotLink)[vs[1].(int)]
	}).(GetSnapshotsSnapshotLinkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDeviceConstraintInput)(nil)).Elem(), BlockDeviceConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDeviceConstraintArrayInput)(nil)).Elem(), BlockDeviceConstraintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDeviceLinkInput)(nil)).Elem(), BlockDeviceLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDeviceLinkArrayInput)(nil)).Elem(), BlockDeviceLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDeviceSnapshotInput)(nil)).Elem(), BlockDeviceSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDeviceSnapshotArrayInput)(nil)).Elem(), BlockDeviceSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDeviceSnapshotLinkInput)(nil)).Elem(), BlockDeviceSnapshotLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDeviceSnapshotLinkArrayInput)(nil)).Elem(), BlockDeviceSnapshotLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDeviceTagInput)(nil)).Elem(), BlockDeviceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDeviceTagArrayInput)(nil)).Elem(), BlockDeviceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotLinkInput)(nil)).Elem(), SnapshotLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotLinkArrayInput)(nil)).Elem(), SnapshotLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockDeviceLinkInput)(nil)).Elem(), GetBlockDeviceLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockDeviceLinkArrayInput)(nil)).Elem(), GetBlockDeviceLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockDeviceSnapshotInput)(nil)).Elem(), GetBlockDeviceSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockDeviceSnapshotArrayInput)(nil)).Elem(), GetBlockDeviceSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockDeviceSnapshotLinkInput)(nil)).Elem(), GetBlockDeviceSnapshotLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockDeviceSnapshotLinkArrayInput)(nil)).Elem(), GetBlockDeviceSnapshotLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockDeviceTagInput)(nil)).Elem(), GetBlockDeviceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlockDeviceTagArrayInput)(nil)).Elem(), GetBlockDeviceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotInput)(nil)).Elem(), GetSnapshotsSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotArrayInput)(nil)).Elem(), GetSnapshotsSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotLinkInput)(nil)).Elem(), GetSnapshotsSnapshotLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotLinkArrayInput)(nil)).Elem(), GetSnapshotsSnapshotLinkArray{})
	pulumi.RegisterOutputType(BlockDeviceConstraintOutput{})
	pulumi.RegisterOutputType(BlockDeviceConstraintArrayOutput{})
	pulumi.RegisterOutputType(BlockDeviceLinkOutput{})
	pulumi.RegisterOutputType(BlockDeviceLinkArrayOutput{})
	pulumi.RegisterOutputType(BlockDeviceSnapshotOutput{})
	pulumi.RegisterOutputType(BlockDeviceSnapshotArrayOutput{})
	pulumi.RegisterOutputType(BlockDeviceSnapshotLinkOutput{})
	pulumi.RegisterOutputType(BlockDeviceSnapshotLinkArrayOutput{})
	pulumi.RegisterOutputType(BlockDeviceTagOutput{})
	pulumi.RegisterOutputType(BlockDeviceTagArrayOutput{})
	pulumi.RegisterOutputType(SnapshotLinkOutput{})
	pulumi.RegisterOutputType(SnapshotLinkArrayOutput{})
	pulumi.RegisterOutputType(GetBlockDeviceLinkOutput{})
	pulumi.RegisterOutputType(GetBlockDeviceLinkArrayOutput{})
	pulumi.RegisterOutputType(GetBlockDeviceSnapshotOutput{})
	pulumi.RegisterOutputType(GetBlockDeviceSnapshotArrayOutput{})
	pulumi.RegisterOutputType(GetBlockDeviceSnapshotLinkOutput{})
	pulumi.RegisterOutputType(GetBlockDeviceSnapshotLinkArrayOutput{})
	pulumi.RegisterOutputType(GetBlockDeviceTagOutput{})
	pulumi.RegisterOutputType(GetBlockDeviceTagArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotLinkOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotLinkArrayOutput{})
}
