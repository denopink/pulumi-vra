// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package blockdevice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## ---layout: "vra"
//
// page_title: "VMware vRealize Automation: blockdevice.BlockDevice"
// description: |-
//
//	Provides a data lookup for vra_block_device.
//
// ---
//
// # Data Source: blockdevice.BlockDevice
//
// Provides a data lookup for a vra_block_device.
//
// ## Example Usage
// ### S
//
// **Block device data source by its id:**
//
// This is an example of how to read a block device data source using its ID.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra/blockdevice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/blockdevice"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := blockdevice.LookupBlockDevice(ctx, &blockdevice.LookupBlockDeviceArgs{
//				Id: pulumi.StringRef(_var.Block_device_id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// **Block device data source filter by name:**
//
// This is an example of how to read a block device data source using its name.
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra/blockdevice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/blockdevice"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := blockdevice.LookupBlockDevice(ctx, &blockdevice.LookupBlockDeviceArgs{
//				Filter: pulumi.StringRef(fmt.Sprintf("name eq '%v'", _var.Block_device_name)),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBlockDevice(ctx *pulumi.Context, args *LookupBlockDeviceArgs, opts ...pulumi.InvokeOption) (*LookupBlockDeviceResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupBlockDeviceResult
	err := ctx.Invoke("vra:blockdevice/getBlockDevice:getBlockDevice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBlockDevice.
type LookupBlockDeviceArgs struct {
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description *string `pulumi:"description"`
	// Indicates whether the snapshots of the block-devices should be included in the state. Applicable only for first class block devices.
	ExpandSnapshots *bool `pulumi:"expandSnapshots"`
	// Search criteria to filter the list of block devices.
	Filter *string `pulumi:"filter"`
	// The id of the block device.
	Id *string `pulumi:"id"`
	// A set of tag keys and optional values that were set on this resource instance.
	// example:[ { "key" : "vmware.enumeration.type", "value": "nebsBlock" } ]
	Tags []GetBlockDeviceTag `pulumi:"tags"`
}

// A collection of values returned by getBlockDevice.
type LookupBlockDeviceResult struct {
	// Capacity of the block device in GB.
	CapacityInGb int `pulumi:"capacityInGb"`
	// Set of ids of the cloud accounts this entity belongs to.
	CloudAccountIds []string `pulumi:"cloudAccountIds"`
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt string `pulumi:"createdAt"`
	// Additional custom properties that may be used to extend the machine.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// The id of the deployment that is associated with this resource.
	DeploymentId string `pulumi:"deploymentId"`
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description     *string `pulumi:"description"`
	ExpandSnapshots *bool   `pulumi:"expandSnapshots"`
	// External entity Id on the provider side.
	ExternalId string `pulumi:"externalId"`
	// The external regionId of the resource.
	ExternalRegionId string `pulumi:"externalRegionId"`
	// The external zoneId of the resource.
	ExternalZoneId string  `pulumi:"externalZoneId"`
	Filter         *string `pulumi:"filter"`
	Id             string  `pulumi:"id"`
	// HATEOAS of the entity.
	Links []GetBlockDeviceLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name string `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrgId string `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner string `pulumi:"owner"`
	// Indicates whether the block device survives a delete action.
	Persistent bool `pulumi:"persistent"`
	// The id of the project the current user belongs to.
	ProjectId string                   `pulumi:"projectId"`
	Snapshots []GetBlockDeviceSnapshot `pulumi:"snapshots"`
	// Status of the block device.
	Status string `pulumi:"status"`
	// A set of tag keys and optional values that were set on this resource instance.
	// example:[ { "key" : "vmware.enumeration.type", "value": "nebsBlock" } ]
	Tags []GetBlockDeviceTag `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupBlockDeviceOutput(ctx *pulumi.Context, args LookupBlockDeviceOutputArgs, opts ...pulumi.InvokeOption) LookupBlockDeviceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBlockDeviceResult, error) {
			args := v.(LookupBlockDeviceArgs)
			r, err := LookupBlockDevice(ctx, &args, opts...)
			var s LookupBlockDeviceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBlockDeviceResultOutput)
}

// A collection of arguments for invoking getBlockDevice.
type LookupBlockDeviceOutputArgs struct {
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the snapshots of the block-devices should be included in the state. Applicable only for first class block devices.
	ExpandSnapshots pulumi.BoolPtrInput `pulumi:"expandSnapshots"`
	// Search criteria to filter the list of block devices.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The id of the block device.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A set of tag keys and optional values that were set on this resource instance.
	// example:[ { "key" : "vmware.enumeration.type", "value": "nebsBlock" } ]
	Tags GetBlockDeviceTagArrayInput `pulumi:"tags"`
}

func (LookupBlockDeviceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlockDeviceArgs)(nil)).Elem()
}

// A collection of values returned by getBlockDevice.
type LookupBlockDeviceResultOutput struct{ *pulumi.OutputState }

func (LookupBlockDeviceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlockDeviceResult)(nil)).Elem()
}

func (o LookupBlockDeviceResultOutput) ToLookupBlockDeviceResultOutput() LookupBlockDeviceResultOutput {
	return o
}

func (o LookupBlockDeviceResultOutput) ToLookupBlockDeviceResultOutputWithContext(ctx context.Context) LookupBlockDeviceResultOutput {
	return o
}

// Capacity of the block device in GB.
func (o LookupBlockDeviceResultOutput) CapacityInGb() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) int { return v.CapacityInGb }).(pulumi.IntOutput)
}

// Set of ids of the cloud accounts this entity belongs to.
func (o LookupBlockDeviceResultOutput) CloudAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) []string { return v.CloudAccountIds }).(pulumi.StringArrayOutput)
}

// Date when the entity was created. The date is in ISO 6801 and UTC.
func (o LookupBlockDeviceResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Additional custom properties that may be used to extend the machine.
func (o LookupBlockDeviceResultOutput) CustomProperties() pulumi.MapOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) map[string]interface{} { return v.CustomProperties }).(pulumi.MapOutput)
}

// The id of the deployment that is associated with this resource.
func (o LookupBlockDeviceResultOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.DeploymentId }).(pulumi.StringOutput)
}

// Describes machine within the scope of your organization and is not propagated to the cloud.
func (o LookupBlockDeviceResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupBlockDeviceResultOutput) ExpandSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) *bool { return v.ExpandSnapshots }).(pulumi.BoolPtrOutput)
}

// External entity Id on the provider side.
func (o LookupBlockDeviceResultOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The external regionId of the resource.
func (o LookupBlockDeviceResultOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.ExternalRegionId }).(pulumi.StringOutput)
}

// The external zoneId of the resource.
func (o LookupBlockDeviceResultOutput) ExternalZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.ExternalZoneId }).(pulumi.StringOutput)
}

func (o LookupBlockDeviceResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LookupBlockDeviceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.Id }).(pulumi.StringOutput)
}

// HATEOAS of the entity.
func (o LookupBlockDeviceResultOutput) Links() GetBlockDeviceLinkArrayOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) []GetBlockDeviceLink { return v.Links }).(GetBlockDeviceLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o LookupBlockDeviceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o LookupBlockDeviceResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o LookupBlockDeviceResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.Owner }).(pulumi.StringOutput)
}

// Indicates whether the block device survives a delete action.
func (o LookupBlockDeviceResultOutput) Persistent() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) bool { return v.Persistent }).(pulumi.BoolOutput)
}

// The id of the project the current user belongs to.
func (o LookupBlockDeviceResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupBlockDeviceResultOutput) Snapshots() GetBlockDeviceSnapshotArrayOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) []GetBlockDeviceSnapshot { return v.Snapshots }).(GetBlockDeviceSnapshotArrayOutput)
}

// Status of the block device.
func (o LookupBlockDeviceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.Status }).(pulumi.StringOutput)
}

// A set of tag keys and optional values that were set on this resource instance.
// example:[ { "key" : "vmware.enumeration.type", "value": "nebsBlock" } ]
func (o LookupBlockDeviceResultOutput) Tags() GetBlockDeviceTagArrayOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) []GetBlockDeviceTag { return v.Tags }).(GetBlockDeviceTagArrayOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o LookupBlockDeviceResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockDeviceResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBlockDeviceResultOutput{})
}
