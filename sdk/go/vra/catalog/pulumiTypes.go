// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package catalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ItemEntitlementDefinition struct {
	// Description of the catalog item.
	Description *string `pulumi:"description"`
	// Icon id of associated catalog item.
	IconId *string `pulumi:"iconId"`
	// Id of the catalog item.
	Id *string `pulumi:"id"`
	// Name of the catalog item.
	Name *string `pulumi:"name"`
	// Number of items in the associated catalog source.
	NumberOfItems *int `pulumi:"numberOfItems"`
	// Catalog source name.
	SourceName *string `pulumi:"sourceName"`
	// Catalog source type.
	SourceType *string `pulumi:"sourceType"`
	// Content definition type.
	Type *string `pulumi:"type"`
}

// ItemEntitlementDefinitionInput is an input type that accepts ItemEntitlementDefinitionArgs and ItemEntitlementDefinitionOutput values.
// You can construct a concrete instance of `ItemEntitlementDefinitionInput` via:
//
//	ItemEntitlementDefinitionArgs{...}
type ItemEntitlementDefinitionInput interface {
	pulumi.Input

	ToItemEntitlementDefinitionOutput() ItemEntitlementDefinitionOutput
	ToItemEntitlementDefinitionOutputWithContext(context.Context) ItemEntitlementDefinitionOutput
}

type ItemEntitlementDefinitionArgs struct {
	// Description of the catalog item.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Icon id of associated catalog item.
	IconId pulumi.StringPtrInput `pulumi:"iconId"`
	// Id of the catalog item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the catalog item.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Number of items in the associated catalog source.
	NumberOfItems pulumi.IntPtrInput `pulumi:"numberOfItems"`
	// Catalog source name.
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	// Catalog source type.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
	// Content definition type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ItemEntitlementDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ItemEntitlementDefinition)(nil)).Elem()
}

func (i ItemEntitlementDefinitionArgs) ToItemEntitlementDefinitionOutput() ItemEntitlementDefinitionOutput {
	return i.ToItemEntitlementDefinitionOutputWithContext(context.Background())
}

func (i ItemEntitlementDefinitionArgs) ToItemEntitlementDefinitionOutputWithContext(ctx context.Context) ItemEntitlementDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ItemEntitlementDefinitionOutput)
}

// ItemEntitlementDefinitionArrayInput is an input type that accepts ItemEntitlementDefinitionArray and ItemEntitlementDefinitionArrayOutput values.
// You can construct a concrete instance of `ItemEntitlementDefinitionArrayInput` via:
//
//	ItemEntitlementDefinitionArray{ ItemEntitlementDefinitionArgs{...} }
type ItemEntitlementDefinitionArrayInput interface {
	pulumi.Input

	ToItemEntitlementDefinitionArrayOutput() ItemEntitlementDefinitionArrayOutput
	ToItemEntitlementDefinitionArrayOutputWithContext(context.Context) ItemEntitlementDefinitionArrayOutput
}

type ItemEntitlementDefinitionArray []ItemEntitlementDefinitionInput

func (ItemEntitlementDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ItemEntitlementDefinition)(nil)).Elem()
}

func (i ItemEntitlementDefinitionArray) ToItemEntitlementDefinitionArrayOutput() ItemEntitlementDefinitionArrayOutput {
	return i.ToItemEntitlementDefinitionArrayOutputWithContext(context.Background())
}

func (i ItemEntitlementDefinitionArray) ToItemEntitlementDefinitionArrayOutputWithContext(ctx context.Context) ItemEntitlementDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ItemEntitlementDefinitionArrayOutput)
}

type ItemEntitlementDefinitionOutput struct{ *pulumi.OutputState }

func (ItemEntitlementDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ItemEntitlementDefinition)(nil)).Elem()
}

func (o ItemEntitlementDefinitionOutput) ToItemEntitlementDefinitionOutput() ItemEntitlementDefinitionOutput {
	return o
}

func (o ItemEntitlementDefinitionOutput) ToItemEntitlementDefinitionOutputWithContext(ctx context.Context) ItemEntitlementDefinitionOutput {
	return o
}

// Description of the catalog item.
func (o ItemEntitlementDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ItemEntitlementDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Icon id of associated catalog item.
func (o ItemEntitlementDefinitionOutput) IconId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ItemEntitlementDefinition) *string { return v.IconId }).(pulumi.StringPtrOutput)
}

// Id of the catalog item.
func (o ItemEntitlementDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ItemEntitlementDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the catalog item.
func (o ItemEntitlementDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ItemEntitlementDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Number of items in the associated catalog source.
func (o ItemEntitlementDefinitionOutput) NumberOfItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ItemEntitlementDefinition) *int { return v.NumberOfItems }).(pulumi.IntPtrOutput)
}

// Catalog source name.
func (o ItemEntitlementDefinitionOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ItemEntitlementDefinition) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

// Catalog source type.
func (o ItemEntitlementDefinitionOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ItemEntitlementDefinition) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

// Content definition type.
func (o ItemEntitlementDefinitionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ItemEntitlementDefinition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ItemEntitlementDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ItemEntitlementDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ItemEntitlementDefinition)(nil)).Elem()
}

func (o ItemEntitlementDefinitionArrayOutput) ToItemEntitlementDefinitionArrayOutput() ItemEntitlementDefinitionArrayOutput {
	return o
}

func (o ItemEntitlementDefinitionArrayOutput) ToItemEntitlementDefinitionArrayOutputWithContext(ctx context.Context) ItemEntitlementDefinitionArrayOutput {
	return o
}

func (o ItemEntitlementDefinitionArrayOutput) Index(i pulumi.IntInput) ItemEntitlementDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ItemEntitlementDefinition {
		return vs[0].([]ItemEntitlementDefinition)[vs[1].(int)]
	}).(ItemEntitlementDefinitionOutput)
}

type SourceEntitlementDefinition struct {
	Description   *string `pulumi:"description"`
	IconId        *string `pulumi:"iconId"`
	Id            *string `pulumi:"id"`
	Name          *string `pulumi:"name"`
	NumberOfItems *int    `pulumi:"numberOfItems"`
	SourceName    *string `pulumi:"sourceName"`
	SourceType    *string `pulumi:"sourceType"`
	Type          *string `pulumi:"type"`
}

// SourceEntitlementDefinitionInput is an input type that accepts SourceEntitlementDefinitionArgs and SourceEntitlementDefinitionOutput values.
// You can construct a concrete instance of `SourceEntitlementDefinitionInput` via:
//
//	SourceEntitlementDefinitionArgs{...}
type SourceEntitlementDefinitionInput interface {
	pulumi.Input

	ToSourceEntitlementDefinitionOutput() SourceEntitlementDefinitionOutput
	ToSourceEntitlementDefinitionOutputWithContext(context.Context) SourceEntitlementDefinitionOutput
}

type SourceEntitlementDefinitionArgs struct {
	Description   pulumi.StringPtrInput `pulumi:"description"`
	IconId        pulumi.StringPtrInput `pulumi:"iconId"`
	Id            pulumi.StringPtrInput `pulumi:"id"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	NumberOfItems pulumi.IntPtrInput    `pulumi:"numberOfItems"`
	SourceName    pulumi.StringPtrInput `pulumi:"sourceName"`
	SourceType    pulumi.StringPtrInput `pulumi:"sourceType"`
	Type          pulumi.StringPtrInput `pulumi:"type"`
}

func (SourceEntitlementDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceEntitlementDefinition)(nil)).Elem()
}

func (i SourceEntitlementDefinitionArgs) ToSourceEntitlementDefinitionOutput() SourceEntitlementDefinitionOutput {
	return i.ToSourceEntitlementDefinitionOutputWithContext(context.Background())
}

func (i SourceEntitlementDefinitionArgs) ToSourceEntitlementDefinitionOutputWithContext(ctx context.Context) SourceEntitlementDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceEntitlementDefinitionOutput)
}

// SourceEntitlementDefinitionArrayInput is an input type that accepts SourceEntitlementDefinitionArray and SourceEntitlementDefinitionArrayOutput values.
// You can construct a concrete instance of `SourceEntitlementDefinitionArrayInput` via:
//
//	SourceEntitlementDefinitionArray{ SourceEntitlementDefinitionArgs{...} }
type SourceEntitlementDefinitionArrayInput interface {
	pulumi.Input

	ToSourceEntitlementDefinitionArrayOutput() SourceEntitlementDefinitionArrayOutput
	ToSourceEntitlementDefinitionArrayOutputWithContext(context.Context) SourceEntitlementDefinitionArrayOutput
}

type SourceEntitlementDefinitionArray []SourceEntitlementDefinitionInput

func (SourceEntitlementDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceEntitlementDefinition)(nil)).Elem()
}

func (i SourceEntitlementDefinitionArray) ToSourceEntitlementDefinitionArrayOutput() SourceEntitlementDefinitionArrayOutput {
	return i.ToSourceEntitlementDefinitionArrayOutputWithContext(context.Background())
}

func (i SourceEntitlementDefinitionArray) ToSourceEntitlementDefinitionArrayOutputWithContext(ctx context.Context) SourceEntitlementDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceEntitlementDefinitionArrayOutput)
}

type SourceEntitlementDefinitionOutput struct{ *pulumi.OutputState }

func (SourceEntitlementDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceEntitlementDefinition)(nil)).Elem()
}

func (o SourceEntitlementDefinitionOutput) ToSourceEntitlementDefinitionOutput() SourceEntitlementDefinitionOutput {
	return o
}

func (o SourceEntitlementDefinitionOutput) ToSourceEntitlementDefinitionOutputWithContext(ctx context.Context) SourceEntitlementDefinitionOutput {
	return o
}

func (o SourceEntitlementDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceEntitlementDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SourceEntitlementDefinitionOutput) IconId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceEntitlementDefinition) *string { return v.IconId }).(pulumi.StringPtrOutput)
}

func (o SourceEntitlementDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceEntitlementDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SourceEntitlementDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceEntitlementDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SourceEntitlementDefinitionOutput) NumberOfItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SourceEntitlementDefinition) *int { return v.NumberOfItems }).(pulumi.IntPtrOutput)
}

func (o SourceEntitlementDefinitionOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceEntitlementDefinition) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

func (o SourceEntitlementDefinitionOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceEntitlementDefinition) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

func (o SourceEntitlementDefinitionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceEntitlementDefinition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SourceEntitlementDefinitionArrayOutput struct{ *pulumi.OutputState }

func (SourceEntitlementDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceEntitlementDefinition)(nil)).Elem()
}

func (o SourceEntitlementDefinitionArrayOutput) ToSourceEntitlementDefinitionArrayOutput() SourceEntitlementDefinitionArrayOutput {
	return o
}

func (o SourceEntitlementDefinitionArrayOutput) ToSourceEntitlementDefinitionArrayOutputWithContext(ctx context.Context) SourceEntitlementDefinitionArrayOutput {
	return o
}

func (o SourceEntitlementDefinitionArrayOutput) Index(i pulumi.IntInput) SourceEntitlementDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceEntitlementDefinition {
		return vs[0].([]SourceEntitlementDefinition)[vs[1].(int)]
	}).(SourceEntitlementDefinitionOutput)
}

type GetItemEntitlementDefinition struct {
	// Description of the catalog item.
	Description string `pulumi:"description"`
	// Icon id of associated catalog item.
	IconId string `pulumi:"iconId"`
	// The id of entitlement. One of `catalogItemId` or `id` must be provided.
	Id string `pulumi:"id"`
	// Name of the catalog item.
	Name string `pulumi:"name"`
	// Number of items in the associated catalog source.
	NumberOfItems int `pulumi:"numberOfItems"`
	// Catalog source name.
	SourceName string `pulumi:"sourceName"`
	// Catalog source type.
	SourceType string `pulumi:"sourceType"`
	// Content definition type.
	Type string `pulumi:"type"`
}

// GetItemEntitlementDefinitionInput is an input type that accepts GetItemEntitlementDefinitionArgs and GetItemEntitlementDefinitionOutput values.
// You can construct a concrete instance of `GetItemEntitlementDefinitionInput` via:
//
//	GetItemEntitlementDefinitionArgs{...}
type GetItemEntitlementDefinitionInput interface {
	pulumi.Input

	ToGetItemEntitlementDefinitionOutput() GetItemEntitlementDefinitionOutput
	ToGetItemEntitlementDefinitionOutputWithContext(context.Context) GetItemEntitlementDefinitionOutput
}

type GetItemEntitlementDefinitionArgs struct {
	// Description of the catalog item.
	Description pulumi.StringInput `pulumi:"description"`
	// Icon id of associated catalog item.
	IconId pulumi.StringInput `pulumi:"iconId"`
	// The id of entitlement. One of `catalogItemId` or `id` must be provided.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the catalog item.
	Name pulumi.StringInput `pulumi:"name"`
	// Number of items in the associated catalog source.
	NumberOfItems pulumi.IntInput `pulumi:"numberOfItems"`
	// Catalog source name.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// Catalog source type.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// Content definition type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetItemEntitlementDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetItemEntitlementDefinition)(nil)).Elem()
}

func (i GetItemEntitlementDefinitionArgs) ToGetItemEntitlementDefinitionOutput() GetItemEntitlementDefinitionOutput {
	return i.ToGetItemEntitlementDefinitionOutputWithContext(context.Background())
}

func (i GetItemEntitlementDefinitionArgs) ToGetItemEntitlementDefinitionOutputWithContext(ctx context.Context) GetItemEntitlementDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetItemEntitlementDefinitionOutput)
}

// GetItemEntitlementDefinitionArrayInput is an input type that accepts GetItemEntitlementDefinitionArray and GetItemEntitlementDefinitionArrayOutput values.
// You can construct a concrete instance of `GetItemEntitlementDefinitionArrayInput` via:
//
//	GetItemEntitlementDefinitionArray{ GetItemEntitlementDefinitionArgs{...} }
type GetItemEntitlementDefinitionArrayInput interface {
	pulumi.Input

	ToGetItemEntitlementDefinitionArrayOutput() GetItemEntitlementDefinitionArrayOutput
	ToGetItemEntitlementDefinitionArrayOutputWithContext(context.Context) GetItemEntitlementDefinitionArrayOutput
}

type GetItemEntitlementDefinitionArray []GetItemEntitlementDefinitionInput

func (GetItemEntitlementDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetItemEntitlementDefinition)(nil)).Elem()
}

func (i GetItemEntitlementDefinitionArray) ToGetItemEntitlementDefinitionArrayOutput() GetItemEntitlementDefinitionArrayOutput {
	return i.ToGetItemEntitlementDefinitionArrayOutputWithContext(context.Background())
}

func (i GetItemEntitlementDefinitionArray) ToGetItemEntitlementDefinitionArrayOutputWithContext(ctx context.Context) GetItemEntitlementDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetItemEntitlementDefinitionArrayOutput)
}

type GetItemEntitlementDefinitionOutput struct{ *pulumi.OutputState }

func (GetItemEntitlementDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetItemEntitlementDefinition)(nil)).Elem()
}

func (o GetItemEntitlementDefinitionOutput) ToGetItemEntitlementDefinitionOutput() GetItemEntitlementDefinitionOutput {
	return o
}

func (o GetItemEntitlementDefinitionOutput) ToGetItemEntitlementDefinitionOutputWithContext(ctx context.Context) GetItemEntitlementDefinitionOutput {
	return o
}

// Description of the catalog item.
func (o GetItemEntitlementDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetItemEntitlementDefinition) string { return v.Description }).(pulumi.StringOutput)
}

// Icon id of associated catalog item.
func (o GetItemEntitlementDefinitionOutput) IconId() pulumi.StringOutput {
	return o.ApplyT(func(v GetItemEntitlementDefinition) string { return v.IconId }).(pulumi.StringOutput)
}

// The id of entitlement. One of `catalogItemId` or `id` must be provided.
func (o GetItemEntitlementDefinitionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetItemEntitlementDefinition) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the catalog item.
func (o GetItemEntitlementDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetItemEntitlementDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// Number of items in the associated catalog source.
func (o GetItemEntitlementDefinitionOutput) NumberOfItems() pulumi.IntOutput {
	return o.ApplyT(func(v GetItemEntitlementDefinition) int { return v.NumberOfItems }).(pulumi.IntOutput)
}

// Catalog source name.
func (o GetItemEntitlementDefinitionOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetItemEntitlementDefinition) string { return v.SourceName }).(pulumi.StringOutput)
}

// Catalog source type.
func (o GetItemEntitlementDefinitionOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetItemEntitlementDefinition) string { return v.SourceType }).(pulumi.StringOutput)
}

// Content definition type.
func (o GetItemEntitlementDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetItemEntitlementDefinition) string { return v.Type }).(pulumi.StringOutput)
}

type GetItemEntitlementDefinitionArrayOutput struct{ *pulumi.OutputState }

func (GetItemEntitlementDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetItemEntitlementDefinition)(nil)).Elem()
}

func (o GetItemEntitlementDefinitionArrayOutput) ToGetItemEntitlementDefinitionArrayOutput() GetItemEntitlementDefinitionArrayOutput {
	return o
}

func (o GetItemEntitlementDefinitionArrayOutput) ToGetItemEntitlementDefinitionArrayOutputWithContext(ctx context.Context) GetItemEntitlementDefinitionArrayOutput {
	return o
}

func (o GetItemEntitlementDefinitionArrayOutput) Index(i pulumi.IntInput) GetItemEntitlementDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetItemEntitlementDefinition {
		return vs[0].([]GetItemEntitlementDefinition)[vs[1].(int)]
	}).(GetItemEntitlementDefinitionOutput)
}

type GetItemProject struct {
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// The id of catalog item. One of `id`, or `name` must be provided.
	Id *string `pulumi:"id"`
	// Name of the catalog item. One of `id`, or `name` must be provided.
	Name *string `pulumi:"name"`
	// Version of the entity, if applicable.
	Version *string `pulumi:"version"`
}

// GetItemProjectInput is an input type that accepts GetItemProjectArgs and GetItemProjectOutput values.
// You can construct a concrete instance of `GetItemProjectInput` via:
//
//	GetItemProjectArgs{...}
type GetItemProjectInput interface {
	pulumi.Input

	ToGetItemProjectOutput() GetItemProjectOutput
	ToGetItemProjectOutputWithContext(context.Context) GetItemProjectOutput
}

type GetItemProjectArgs struct {
	// A human-friendly description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The id of catalog item. One of `id`, or `name` must be provided.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the catalog item. One of `id`, or `name` must be provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Version of the entity, if applicable.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetItemProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetItemProject)(nil)).Elem()
}

func (i GetItemProjectArgs) ToGetItemProjectOutput() GetItemProjectOutput {
	return i.ToGetItemProjectOutputWithContext(context.Background())
}

func (i GetItemProjectArgs) ToGetItemProjectOutputWithContext(ctx context.Context) GetItemProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetItemProjectOutput)
}

// GetItemProjectArrayInput is an input type that accepts GetItemProjectArray and GetItemProjectArrayOutput values.
// You can construct a concrete instance of `GetItemProjectArrayInput` via:
//
//	GetItemProjectArray{ GetItemProjectArgs{...} }
type GetItemProjectArrayInput interface {
	pulumi.Input

	ToGetItemProjectArrayOutput() GetItemProjectArrayOutput
	ToGetItemProjectArrayOutputWithContext(context.Context) GetItemProjectArrayOutput
}

type GetItemProjectArray []GetItemProjectInput

func (GetItemProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetItemProject)(nil)).Elem()
}

func (i GetItemProjectArray) ToGetItemProjectArrayOutput() GetItemProjectArrayOutput {
	return i.ToGetItemProjectArrayOutputWithContext(context.Background())
}

func (i GetItemProjectArray) ToGetItemProjectArrayOutputWithContext(ctx context.Context) GetItemProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetItemProjectArrayOutput)
}

type GetItemProjectOutput struct{ *pulumi.OutputState }

func (GetItemProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetItemProject)(nil)).Elem()
}

func (o GetItemProjectOutput) ToGetItemProjectOutput() GetItemProjectOutput {
	return o
}

func (o GetItemProjectOutput) ToGetItemProjectOutputWithContext(ctx context.Context) GetItemProjectOutput {
	return o
}

// A human-friendly description.
func (o GetItemProjectOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemProject) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The id of catalog item. One of `id`, or `name` must be provided.
func (o GetItemProjectOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemProject) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the catalog item. One of `id`, or `name` must be provided.
func (o GetItemProjectOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemProject) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Version of the entity, if applicable.
func (o GetItemProjectOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemProject) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetItemProjectArrayOutput struct{ *pulumi.OutputState }

func (GetItemProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetItemProject)(nil)).Elem()
}

func (o GetItemProjectArrayOutput) ToGetItemProjectArrayOutput() GetItemProjectArrayOutput {
	return o
}

func (o GetItemProjectArrayOutput) ToGetItemProjectArrayOutputWithContext(ctx context.Context) GetItemProjectArrayOutput {
	return o
}

func (o GetItemProjectArrayOutput) Index(i pulumi.IntInput) GetItemProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetItemProject {
		return vs[0].([]GetItemProject)[vs[1].(int)]
	}).(GetItemProjectOutput)
}

type GetItemType struct {
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// The id of catalog item. One of `id`, or `name` must be provided.
	Id *string `pulumi:"id"`
	// Name of the catalog item. One of `id`, or `name` must be provided.
	Name *string `pulumi:"name"`
	// Version of the entity, if applicable.
	Version *string `pulumi:"version"`
}

// GetItemTypeInput is an input type that accepts GetItemTypeArgs and GetItemTypeOutput values.
// You can construct a concrete instance of `GetItemTypeInput` via:
//
//	GetItemTypeArgs{...}
type GetItemTypeInput interface {
	pulumi.Input

	ToGetItemTypeOutput() GetItemTypeOutput
	ToGetItemTypeOutputWithContext(context.Context) GetItemTypeOutput
}

type GetItemTypeArgs struct {
	// A human-friendly description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The id of catalog item. One of `id`, or `name` must be provided.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the catalog item. One of `id`, or `name` must be provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Version of the entity, if applicable.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetItemTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetItemType)(nil)).Elem()
}

func (i GetItemTypeArgs) ToGetItemTypeOutput() GetItemTypeOutput {
	return i.ToGetItemTypeOutputWithContext(context.Background())
}

func (i GetItemTypeArgs) ToGetItemTypeOutputWithContext(ctx context.Context) GetItemTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetItemTypeOutput)
}

// GetItemTypeArrayInput is an input type that accepts GetItemTypeArray and GetItemTypeArrayOutput values.
// You can construct a concrete instance of `GetItemTypeArrayInput` via:
//
//	GetItemTypeArray{ GetItemTypeArgs{...} }
type GetItemTypeArrayInput interface {
	pulumi.Input

	ToGetItemTypeArrayOutput() GetItemTypeArrayOutput
	ToGetItemTypeArrayOutputWithContext(context.Context) GetItemTypeArrayOutput
}

type GetItemTypeArray []GetItemTypeInput

func (GetItemTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetItemType)(nil)).Elem()
}

func (i GetItemTypeArray) ToGetItemTypeArrayOutput() GetItemTypeArrayOutput {
	return i.ToGetItemTypeArrayOutputWithContext(context.Background())
}

func (i GetItemTypeArray) ToGetItemTypeArrayOutputWithContext(ctx context.Context) GetItemTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetItemTypeArrayOutput)
}

type GetItemTypeOutput struct{ *pulumi.OutputState }

func (GetItemTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetItemType)(nil)).Elem()
}

func (o GetItemTypeOutput) ToGetItemTypeOutput() GetItemTypeOutput {
	return o
}

func (o GetItemTypeOutput) ToGetItemTypeOutputWithContext(ctx context.Context) GetItemTypeOutput {
	return o
}

// A human-friendly description.
func (o GetItemTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The id of catalog item. One of `id`, or `name` must be provided.
func (o GetItemTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the catalog item. One of `id`, or `name` must be provided.
func (o GetItemTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Version of the entity, if applicable.
func (o GetItemTypeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemType) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetItemTypeArrayOutput struct{ *pulumi.OutputState }

func (GetItemTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetItemType)(nil)).Elem()
}

func (o GetItemTypeArrayOutput) ToGetItemTypeArrayOutput() GetItemTypeArrayOutput {
	return o
}

func (o GetItemTypeArrayOutput) ToGetItemTypeArrayOutputWithContext(ctx context.Context) GetItemTypeArrayOutput {
	return o
}

func (o GetItemTypeArrayOutput) Index(i pulumi.IntInput) GetItemTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetItemType {
		return vs[0].([]GetItemType)[vs[1].(int)]
	}).(GetItemTypeOutput)
}

type GetItemVersion struct {
	// Date-time when catalog item version was created at.
	CreatedAt *string `pulumi:"createdAt"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// The id of catalog item. One of `id`, or `name` must be provided.
	Id *string `pulumi:"id"`
}

// GetItemVersionInput is an input type that accepts GetItemVersionArgs and GetItemVersionOutput values.
// You can construct a concrete instance of `GetItemVersionInput` via:
//
//	GetItemVersionArgs{...}
type GetItemVersionInput interface {
	pulumi.Input

	ToGetItemVersionOutput() GetItemVersionOutput
	ToGetItemVersionOutputWithContext(context.Context) GetItemVersionOutput
}

type GetItemVersionArgs struct {
	// Date-time when catalog item version was created at.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// A human-friendly description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The id of catalog item. One of `id`, or `name` must be provided.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetItemVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetItemVersion)(nil)).Elem()
}

func (i GetItemVersionArgs) ToGetItemVersionOutput() GetItemVersionOutput {
	return i.ToGetItemVersionOutputWithContext(context.Background())
}

func (i GetItemVersionArgs) ToGetItemVersionOutputWithContext(ctx context.Context) GetItemVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetItemVersionOutput)
}

// GetItemVersionArrayInput is an input type that accepts GetItemVersionArray and GetItemVersionArrayOutput values.
// You can construct a concrete instance of `GetItemVersionArrayInput` via:
//
//	GetItemVersionArray{ GetItemVersionArgs{...} }
type GetItemVersionArrayInput interface {
	pulumi.Input

	ToGetItemVersionArrayOutput() GetItemVersionArrayOutput
	ToGetItemVersionArrayOutputWithContext(context.Context) GetItemVersionArrayOutput
}

type GetItemVersionArray []GetItemVersionInput

func (GetItemVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetItemVersion)(nil)).Elem()
}

func (i GetItemVersionArray) ToGetItemVersionArrayOutput() GetItemVersionArrayOutput {
	return i.ToGetItemVersionArrayOutputWithContext(context.Background())
}

func (i GetItemVersionArray) ToGetItemVersionArrayOutputWithContext(ctx context.Context) GetItemVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetItemVersionArrayOutput)
}

type GetItemVersionOutput struct{ *pulumi.OutputState }

func (GetItemVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetItemVersion)(nil)).Elem()
}

func (o GetItemVersionOutput) ToGetItemVersionOutput() GetItemVersionOutput {
	return o
}

func (o GetItemVersionOutput) ToGetItemVersionOutputWithContext(ctx context.Context) GetItemVersionOutput {
	return o
}

// Date-time when catalog item version was created at.
func (o GetItemVersionOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemVersion) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// A human-friendly description.
func (o GetItemVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemVersion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The id of catalog item. One of `id`, or `name` must be provided.
func (o GetItemVersionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetItemVersion) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GetItemVersionArrayOutput struct{ *pulumi.OutputState }

func (GetItemVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetItemVersion)(nil)).Elem()
}

func (o GetItemVersionArrayOutput) ToGetItemVersionArrayOutput() GetItemVersionArrayOutput {
	return o
}

func (o GetItemVersionArrayOutput) ToGetItemVersionArrayOutputWithContext(ctx context.Context) GetItemVersionArrayOutput {
	return o
}

func (o GetItemVersionArrayOutput) Index(i pulumi.IntInput) GetItemVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetItemVersion {
		return vs[0].([]GetItemVersion)[vs[1].(int)]
	}).(GetItemVersionOutput)
}

type GetSourceEntitlementDefinition struct {
	// Description of the catalog source.
	Description string `pulumi:"description"`
	// Icon id of associated catalog source.
	IconId string `pulumi:"iconId"`
	// The id of entitlement. One of `catalogSourceId` or `id` must be provided.
	Id string `pulumi:"id"`
	// Name of the catalog source.
	Name string `pulumi:"name"`
	// Number of items in the associated catalog source.
	NumberOfItems int `pulumi:"numberOfItems"`
	// Catalog source name.
	SourceName string `pulumi:"sourceName"`
	// Catalog source type.
	SourceType string `pulumi:"sourceType"`
	// Content definition type.
	Type string `pulumi:"type"`
}

// GetSourceEntitlementDefinitionInput is an input type that accepts GetSourceEntitlementDefinitionArgs and GetSourceEntitlementDefinitionOutput values.
// You can construct a concrete instance of `GetSourceEntitlementDefinitionInput` via:
//
//	GetSourceEntitlementDefinitionArgs{...}
type GetSourceEntitlementDefinitionInput interface {
	pulumi.Input

	ToGetSourceEntitlementDefinitionOutput() GetSourceEntitlementDefinitionOutput
	ToGetSourceEntitlementDefinitionOutputWithContext(context.Context) GetSourceEntitlementDefinitionOutput
}

type GetSourceEntitlementDefinitionArgs struct {
	// Description of the catalog source.
	Description pulumi.StringInput `pulumi:"description"`
	// Icon id of associated catalog source.
	IconId pulumi.StringInput `pulumi:"iconId"`
	// The id of entitlement. One of `catalogSourceId` or `id` must be provided.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the catalog source.
	Name pulumi.StringInput `pulumi:"name"`
	// Number of items in the associated catalog source.
	NumberOfItems pulumi.IntInput `pulumi:"numberOfItems"`
	// Catalog source name.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// Catalog source type.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// Content definition type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetSourceEntitlementDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceEntitlementDefinition)(nil)).Elem()
}

func (i GetSourceEntitlementDefinitionArgs) ToGetSourceEntitlementDefinitionOutput() GetSourceEntitlementDefinitionOutput {
	return i.ToGetSourceEntitlementDefinitionOutputWithContext(context.Background())
}

func (i GetSourceEntitlementDefinitionArgs) ToGetSourceEntitlementDefinitionOutputWithContext(ctx context.Context) GetSourceEntitlementDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSourceEntitlementDefinitionOutput)
}

// GetSourceEntitlementDefinitionArrayInput is an input type that accepts GetSourceEntitlementDefinitionArray and GetSourceEntitlementDefinitionArrayOutput values.
// You can construct a concrete instance of `GetSourceEntitlementDefinitionArrayInput` via:
//
//	GetSourceEntitlementDefinitionArray{ GetSourceEntitlementDefinitionArgs{...} }
type GetSourceEntitlementDefinitionArrayInput interface {
	pulumi.Input

	ToGetSourceEntitlementDefinitionArrayOutput() GetSourceEntitlementDefinitionArrayOutput
	ToGetSourceEntitlementDefinitionArrayOutputWithContext(context.Context) GetSourceEntitlementDefinitionArrayOutput
}

type GetSourceEntitlementDefinitionArray []GetSourceEntitlementDefinitionInput

func (GetSourceEntitlementDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSourceEntitlementDefinition)(nil)).Elem()
}

func (i GetSourceEntitlementDefinitionArray) ToGetSourceEntitlementDefinitionArrayOutput() GetSourceEntitlementDefinitionArrayOutput {
	return i.ToGetSourceEntitlementDefinitionArrayOutputWithContext(context.Background())
}

func (i GetSourceEntitlementDefinitionArray) ToGetSourceEntitlementDefinitionArrayOutputWithContext(ctx context.Context) GetSourceEntitlementDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSourceEntitlementDefinitionArrayOutput)
}

type GetSourceEntitlementDefinitionOutput struct{ *pulumi.OutputState }

func (GetSourceEntitlementDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceEntitlementDefinition)(nil)).Elem()
}

func (o GetSourceEntitlementDefinitionOutput) ToGetSourceEntitlementDefinitionOutput() GetSourceEntitlementDefinitionOutput {
	return o
}

func (o GetSourceEntitlementDefinitionOutput) ToGetSourceEntitlementDefinitionOutputWithContext(ctx context.Context) GetSourceEntitlementDefinitionOutput {
	return o
}

// Description of the catalog source.
func (o GetSourceEntitlementDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceEntitlementDefinition) string { return v.Description }).(pulumi.StringOutput)
}

// Icon id of associated catalog source.
func (o GetSourceEntitlementDefinitionOutput) IconId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceEntitlementDefinition) string { return v.IconId }).(pulumi.StringOutput)
}

// The id of entitlement. One of `catalogSourceId` or `id` must be provided.
func (o GetSourceEntitlementDefinitionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceEntitlementDefinition) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the catalog source.
func (o GetSourceEntitlementDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceEntitlementDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// Number of items in the associated catalog source.
func (o GetSourceEntitlementDefinitionOutput) NumberOfItems() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceEntitlementDefinition) int { return v.NumberOfItems }).(pulumi.IntOutput)
}

// Catalog source name.
func (o GetSourceEntitlementDefinitionOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceEntitlementDefinition) string { return v.SourceName }).(pulumi.StringOutput)
}

// Catalog source type.
func (o GetSourceEntitlementDefinitionOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceEntitlementDefinition) string { return v.SourceType }).(pulumi.StringOutput)
}

// Content definition type.
func (o GetSourceEntitlementDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceEntitlementDefinition) string { return v.Type }).(pulumi.StringOutput)
}

type GetSourceEntitlementDefinitionArrayOutput struct{ *pulumi.OutputState }

func (GetSourceEntitlementDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSourceEntitlementDefinition)(nil)).Elem()
}

func (o GetSourceEntitlementDefinitionArrayOutput) ToGetSourceEntitlementDefinitionArrayOutput() GetSourceEntitlementDefinitionArrayOutput {
	return o
}

func (o GetSourceEntitlementDefinitionArrayOutput) ToGetSourceEntitlementDefinitionArrayOutputWithContext(ctx context.Context) GetSourceEntitlementDefinitionArrayOutput {
	return o
}

func (o GetSourceEntitlementDefinitionArrayOutput) Index(i pulumi.IntInput) GetSourceEntitlementDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSourceEntitlementDefinition {
		return vs[0].([]GetSourceEntitlementDefinition)[vs[1].(int)]
	}).(GetSourceEntitlementDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ItemEntitlementDefinitionInput)(nil)).Elem(), ItemEntitlementDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ItemEntitlementDefinitionArrayInput)(nil)).Elem(), ItemEntitlementDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceEntitlementDefinitionInput)(nil)).Elem(), SourceEntitlementDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceEntitlementDefinitionArrayInput)(nil)).Elem(), SourceEntitlementDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetItemEntitlementDefinitionInput)(nil)).Elem(), GetItemEntitlementDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetItemEntitlementDefinitionArrayInput)(nil)).Elem(), GetItemEntitlementDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetItemProjectInput)(nil)).Elem(), GetItemProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetItemProjectArrayInput)(nil)).Elem(), GetItemProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetItemTypeInput)(nil)).Elem(), GetItemTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetItemTypeArrayInput)(nil)).Elem(), GetItemTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetItemVersionInput)(nil)).Elem(), GetItemVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetItemVersionArrayInput)(nil)).Elem(), GetItemVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSourceEntitlementDefinitionInput)(nil)).Elem(), GetSourceEntitlementDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSourceEntitlementDefinitionArrayInput)(nil)).Elem(), GetSourceEntitlementDefinitionArray{})
	pulumi.RegisterOutputType(ItemEntitlementDefinitionOutput{})
	pulumi.RegisterOutputType(ItemEntitlementDefinitionArrayOutput{})
	pulumi.RegisterOutputType(SourceEntitlementDefinitionOutput{})
	pulumi.RegisterOutputType(SourceEntitlementDefinitionArrayOutput{})
	pulumi.RegisterOutputType(GetItemEntitlementDefinitionOutput{})
	pulumi.RegisterOutputType(GetItemEntitlementDefinitionArrayOutput{})
	pulumi.RegisterOutputType(GetItemProjectOutput{})
	pulumi.RegisterOutputType(GetItemProjectArrayOutput{})
	pulumi.RegisterOutputType(GetItemTypeOutput{})
	pulumi.RegisterOutputType(GetItemTypeArrayOutput{})
	pulumi.RegisterOutputType(GetItemVersionOutput{})
	pulumi.RegisterOutputType(GetItemVersionArrayOutput{})
	pulumi.RegisterOutputType(GetSourceEntitlementDefinitionOutput{})
	pulumi.RegisterOutputType(GetSourceEntitlementDefinitionArrayOutput{})
}
