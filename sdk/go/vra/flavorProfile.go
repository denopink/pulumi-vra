// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### S
// This is an example of how to create a flavor profile resource.
//
// **Flavor profile:**
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.NewFlavorProfile(ctx, "my-flavor-profile", &vra.FlavorProfileArgs{
//				Description: pulumi.String("my flavor"),
//				FlavorMappings: FlavorProfileFlavorMappingArray{
//					&FlavorProfileFlavorMappingArgs{
//						InstanceType: pulumi.String("t2.small"),
//						Name:         pulumi.String("small"),
//					},
//					&FlavorProfileFlavorMappingArgs{
//						InstanceType: pulumi.String("t2.medium"),
//						Name:         pulumi.String("medium"),
//					},
//				},
//				RegionId: pulumi.Any(data.Vra_region.Us - east - 1 - region.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// An flavor profile resource supports the following arguments:
type FlavorProfile struct {
	pulumi.CustomResourceState

	// The ID of the cloud account this entity belongs to.
	CloudAccountId pulumi.StringOutput `pulumi:"cloudAccountId"`
	// Date when  entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A human-friendly description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the external region that is associated with the flavor profile.
	ExternalRegionId pulumi.StringOutput `pulumi:"externalRegionId"`
	// Map between global fabric flavor keys and fabric flavor descriptions.
	FlavorMappings FlavorProfileFlavorMappingArrayOutput `pulumi:"flavorMappings"`
	// HATEOAS of entity.
	Links FlavorProfileLinkArrayOutput `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// Email of entity owner.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// Date when the entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewFlavorProfile registers a new resource with the given unique name, arguments, and options.
func NewFlavorProfile(ctx *pulumi.Context,
	name string, args *FlavorProfileArgs, opts ...pulumi.ResourceOption) (*FlavorProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RegionId == nil {
		return nil, errors.New("invalid value for required argument 'RegionId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FlavorProfile
	err := ctx.RegisterResource("vra:index/flavorProfile:FlavorProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlavorProfile gets an existing FlavorProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlavorProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlavorProfileState, opts ...pulumi.ResourceOption) (*FlavorProfile, error) {
	var resource FlavorProfile
	err := ctx.ReadResource("vra:index/flavorProfile:FlavorProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlavorProfile resources.
type flavorProfileState struct {
	// The ID of the cloud account this entity belongs to.
	CloudAccountId *string `pulumi:"cloudAccountId"`
	// Date when  entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// The ID of the external region that is associated with the flavor profile.
	ExternalRegionId *string `pulumi:"externalRegionId"`
	// Map between global fabric flavor keys and fabric flavor descriptions.
	FlavorMappings []FlavorProfileFlavorMapping `pulumi:"flavorMappings"`
	// HATEOAS of entity.
	Links []FlavorProfileLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId *string `pulumi:"orgId"`
	// Email of entity owner.
	Owner *string `pulumi:"owner"`
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId *string `pulumi:"regionId"`
	// Date when the entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type FlavorProfileState struct {
	// The ID of the cloud account this entity belongs to.
	CloudAccountId pulumi.StringPtrInput
	// Date when  entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringPtrInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// The ID of the external region that is associated with the flavor profile.
	ExternalRegionId pulumi.StringPtrInput
	// Map between global fabric flavor keys and fabric flavor descriptions.
	FlavorMappings FlavorProfileFlavorMappingArrayInput
	// HATEOAS of entity.
	Links FlavorProfileLinkArrayInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// ID of organization that entity belongs to.
	OrgId pulumi.StringPtrInput
	// Email of entity owner.
	Owner pulumi.StringPtrInput
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId pulumi.StringPtrInput
	// Date when the entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
}

func (FlavorProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*flavorProfileState)(nil)).Elem()
}

type flavorProfileArgs struct {
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// Map between global fabric flavor keys and fabric flavor descriptions.
	FlavorMappings []FlavorProfileFlavorMapping `pulumi:"flavorMappings"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId string `pulumi:"regionId"`
}

// The set of arguments for constructing a FlavorProfile resource.
type FlavorProfileArgs struct {
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// Map between global fabric flavor keys and fabric flavor descriptions.
	FlavorMappings FlavorProfileFlavorMappingArrayInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId pulumi.StringInput
}

func (FlavorProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flavorProfileArgs)(nil)).Elem()
}

type FlavorProfileInput interface {
	pulumi.Input

	ToFlavorProfileOutput() FlavorProfileOutput
	ToFlavorProfileOutputWithContext(ctx context.Context) FlavorProfileOutput
}

func (*FlavorProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**FlavorProfile)(nil)).Elem()
}

func (i *FlavorProfile) ToFlavorProfileOutput() FlavorProfileOutput {
	return i.ToFlavorProfileOutputWithContext(context.Background())
}

func (i *FlavorProfile) ToFlavorProfileOutputWithContext(ctx context.Context) FlavorProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlavorProfileOutput)
}

// FlavorProfileArrayInput is an input type that accepts FlavorProfileArray and FlavorProfileArrayOutput values.
// You can construct a concrete instance of `FlavorProfileArrayInput` via:
//
//	FlavorProfileArray{ FlavorProfileArgs{...} }
type FlavorProfileArrayInput interface {
	pulumi.Input

	ToFlavorProfileArrayOutput() FlavorProfileArrayOutput
	ToFlavorProfileArrayOutputWithContext(context.Context) FlavorProfileArrayOutput
}

type FlavorProfileArray []FlavorProfileInput

func (FlavorProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlavorProfile)(nil)).Elem()
}

func (i FlavorProfileArray) ToFlavorProfileArrayOutput() FlavorProfileArrayOutput {
	return i.ToFlavorProfileArrayOutputWithContext(context.Background())
}

func (i FlavorProfileArray) ToFlavorProfileArrayOutputWithContext(ctx context.Context) FlavorProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlavorProfileArrayOutput)
}

// FlavorProfileMapInput is an input type that accepts FlavorProfileMap and FlavorProfileMapOutput values.
// You can construct a concrete instance of `FlavorProfileMapInput` via:
//
//	FlavorProfileMap{ "key": FlavorProfileArgs{...} }
type FlavorProfileMapInput interface {
	pulumi.Input

	ToFlavorProfileMapOutput() FlavorProfileMapOutput
	ToFlavorProfileMapOutputWithContext(context.Context) FlavorProfileMapOutput
}

type FlavorProfileMap map[string]FlavorProfileInput

func (FlavorProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlavorProfile)(nil)).Elem()
}

func (i FlavorProfileMap) ToFlavorProfileMapOutput() FlavorProfileMapOutput {
	return i.ToFlavorProfileMapOutputWithContext(context.Background())
}

func (i FlavorProfileMap) ToFlavorProfileMapOutputWithContext(ctx context.Context) FlavorProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlavorProfileMapOutput)
}

type FlavorProfileOutput struct{ *pulumi.OutputState }

func (FlavorProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlavorProfile)(nil)).Elem()
}

func (o FlavorProfileOutput) ToFlavorProfileOutput() FlavorProfileOutput {
	return o
}

func (o FlavorProfileOutput) ToFlavorProfileOutputWithContext(ctx context.Context) FlavorProfileOutput {
	return o
}

// The ID of the cloud account this entity belongs to.
func (o FlavorProfileOutput) CloudAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlavorProfile) pulumi.StringOutput { return v.CloudAccountId }).(pulumi.StringOutput)
}

// Date when  entity was created. Date and time format is ISO 8601 and UTC.
func (o FlavorProfileOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FlavorProfile) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A human-friendly description.
func (o FlavorProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlavorProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the external region that is associated with the flavor profile.
func (o FlavorProfileOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlavorProfile) pulumi.StringOutput { return v.ExternalRegionId }).(pulumi.StringOutput)
}

// Map between global fabric flavor keys and fabric flavor descriptions.
func (o FlavorProfileOutput) FlavorMappings() FlavorProfileFlavorMappingArrayOutput {
	return o.ApplyT(func(v *FlavorProfile) FlavorProfileFlavorMappingArrayOutput { return v.FlavorMappings }).(FlavorProfileFlavorMappingArrayOutput)
}

// HATEOAS of entity.
func (o FlavorProfileOutput) Links() FlavorProfileLinkArrayOutput {
	return o.ApplyT(func(v *FlavorProfile) FlavorProfileLinkArrayOutput { return v.Links }).(FlavorProfileLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o FlavorProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FlavorProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID of organization that entity belongs to.
func (o FlavorProfileOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlavorProfile) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// Email of entity owner.
func (o FlavorProfileOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *FlavorProfile) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// The id of the region for which this profile is defined as in vRealize Automation(vRA).
func (o FlavorProfileOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlavorProfile) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// Date when the entity was last updated. Date and time format is ISO 8601 and UTC.
func (o FlavorProfileOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FlavorProfile) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type FlavorProfileArrayOutput struct{ *pulumi.OutputState }

func (FlavorProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlavorProfile)(nil)).Elem()
}

func (o FlavorProfileArrayOutput) ToFlavorProfileArrayOutput() FlavorProfileArrayOutput {
	return o
}

func (o FlavorProfileArrayOutput) ToFlavorProfileArrayOutputWithContext(ctx context.Context) FlavorProfileArrayOutput {
	return o
}

func (o FlavorProfileArrayOutput) Index(i pulumi.IntInput) FlavorProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlavorProfile {
		return vs[0].([]*FlavorProfile)[vs[1].(int)]
	}).(FlavorProfileOutput)
}

type FlavorProfileMapOutput struct{ *pulumi.OutputState }

func (FlavorProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlavorProfile)(nil)).Elem()
}

func (o FlavorProfileMapOutput) ToFlavorProfileMapOutput() FlavorProfileMapOutput {
	return o
}

func (o FlavorProfileMapOutput) ToFlavorProfileMapOutputWithContext(ctx context.Context) FlavorProfileMapOutput {
	return o
}

func (o FlavorProfileMapOutput) MapIndex(k pulumi.StringInput) FlavorProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlavorProfile {
		return vs[0].(map[string]*FlavorProfile)[vs[1].(string)]
	}).(FlavorProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlavorProfileInput)(nil)).Elem(), &FlavorProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlavorProfileArrayInput)(nil)).Elem(), FlavorProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlavorProfileMapInput)(nil)).Elem(), FlavorProfileMap{})
	pulumi.RegisterOutputType(FlavorProfileOutput{})
	pulumi.RegisterOutputType(FlavorProfileArrayOutput{})
	pulumi.RegisterOutputType(FlavorProfileMapOutput{})
}
