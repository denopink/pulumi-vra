// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### S
//
// This is an example of how to read a zone data source.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra/zone"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/zone"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zone.LookupZone(ctx, &zone.LookupZoneArgs{
//				Name: pulumi.StringRef(_var.Zone_name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// A zone data source supports the following arguments:
func LookupZone(ctx *pulumi.Context, args *LookupZoneArgs, opts ...pulumi.InvokeOption) (*LookupZoneResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupZoneResult
	err := ctx.Invoke("vra:zone/getZone:getZone", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZone.
type LookupZoneArgs struct {
	// The id of the zone resource instance.
	Id *string `pulumi:"id"`
	// A human-friendly name used as an identifier for the zone resource instance.
	Name *string `pulumi:"name"`
	// A set of tag keys and optional values that were set on this resource:
	Tags []GetZoneTag `pulumi:"tags"`
	// A set of tag keys and optional values for compute resource filtering:
	TagsToMatches []GetZoneTagsToMatch `pulumi:"tagsToMatches"`
}

// A collection of values returned by getZone.
type LookupZoneResult struct {
	// The ID of the cloud account this zone belongs to.
	CloudAccountId string `pulumi:"cloudAccountId"`
	// The ids of the compute resources that has been explicitly assigned to this zone.
	ComputeIds []string `pulumi:"computeIds"`
	// Date when the entity was created. The date is in ISO 8601 and UTC.
	CreatedAt string `pulumi:"createdAt"`
	// A list of key value pair of properties that will be used.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// A human-friendly description.
	Description string `pulumi:"description"`
	// The id of the region for which this zone is defined.
	ExternalRegionId string `pulumi:"externalRegionId"`
	// The folder relative path to the datacenter where resources are deployed to (only applicable for vSphere cloud zones).
	Folder string `pulumi:"folder"`
	Id     string `pulumi:"id"`
	// HATEOAS of the entity.
	Links []GetZoneLink `pulumi:"links"`
	Name  string        `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrgId string `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner string `pulumi:"owner"`
	// The placement policy for the zone. One of `DEFAULT`, `SPREAD` or `BINPACK`.
	PlacementPolicy string `pulumi:"placementPolicy"`
	// A set of tag keys and optional values that were set on this resource:
	Tags []GetZoneTag `pulumi:"tags"`
	// A set of tag keys and optional values for compute resource filtering:
	TagsToMatches []GetZoneTagsToMatch `pulumi:"tagsToMatches"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupZoneOutput(ctx *pulumi.Context, args LookupZoneOutputArgs, opts ...pulumi.InvokeOption) LookupZoneResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZoneResult, error) {
			args := v.(LookupZoneArgs)
			r, err := LookupZone(ctx, &args, opts...)
			var s LookupZoneResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZoneResultOutput)
}

// A collection of arguments for invoking getZone.
type LookupZoneOutputArgs struct {
	// The id of the zone resource instance.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A human-friendly name used as an identifier for the zone resource instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A set of tag keys and optional values that were set on this resource:
	Tags GetZoneTagArrayInput `pulumi:"tags"`
	// A set of tag keys and optional values for compute resource filtering:
	TagsToMatches GetZoneTagsToMatchArrayInput `pulumi:"tagsToMatches"`
}

func (LookupZoneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneArgs)(nil)).Elem()
}

// A collection of values returned by getZone.
type LookupZoneResultOutput struct{ *pulumi.OutputState }

func (LookupZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneResult)(nil)).Elem()
}

func (o LookupZoneResultOutput) ToLookupZoneResultOutput() LookupZoneResultOutput {
	return o
}

func (o LookupZoneResultOutput) ToLookupZoneResultOutputWithContext(ctx context.Context) LookupZoneResultOutput {
	return o
}

// The ID of the cloud account this zone belongs to.
func (o LookupZoneResultOutput) CloudAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.CloudAccountId }).(pulumi.StringOutput)
}

// The ids of the compute resources that has been explicitly assigned to this zone.
func (o LookupZoneResultOutput) ComputeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZoneResult) []string { return v.ComputeIds }).(pulumi.StringArrayOutput)
}

// Date when the entity was created. The date is in ISO 8601 and UTC.
func (o LookupZoneResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A list of key value pair of properties that will be used.
func (o LookupZoneResultOutput) CustomProperties() pulumi.MapOutput {
	return o.ApplyT(func(v LookupZoneResult) map[string]interface{} { return v.CustomProperties }).(pulumi.MapOutput)
}

// A human-friendly description.
func (o LookupZoneResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the region for which this zone is defined.
func (o LookupZoneResultOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.ExternalRegionId }).(pulumi.StringOutput)
}

// The folder relative path to the datacenter where resources are deployed to (only applicable for vSphere cloud zones).
func (o LookupZoneResultOutput) Folder() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Folder }).(pulumi.StringOutput)
}

func (o LookupZoneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Id }).(pulumi.StringOutput)
}

// HATEOAS of the entity.
func (o LookupZoneResultOutput) Links() GetZoneLinkArrayOutput {
	return o.ApplyT(func(v LookupZoneResult) []GetZoneLink { return v.Links }).(GetZoneLinkArrayOutput)
}

func (o LookupZoneResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o LookupZoneResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o LookupZoneResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Owner }).(pulumi.StringOutput)
}

// The placement policy for the zone. One of `DEFAULT`, `SPREAD` or `BINPACK`.
func (o LookupZoneResultOutput) PlacementPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.PlacementPolicy }).(pulumi.StringOutput)
}

// A set of tag keys and optional values that were set on this resource:
func (o LookupZoneResultOutput) Tags() GetZoneTagArrayOutput {
	return o.ApplyT(func(v LookupZoneResult) []GetZoneTag { return v.Tags }).(GetZoneTagArrayOutput)
}

// A set of tag keys and optional values for compute resource filtering:
func (o LookupZoneResultOutput) TagsToMatches() GetZoneTagsToMatchArrayOutput {
	return o.ApplyT(func(v LookupZoneResult) []GetZoneTagsToMatch { return v.TagsToMatches }).(GetZoneTagsToMatchArrayOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o LookupZoneResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneResultOutput{})
}
