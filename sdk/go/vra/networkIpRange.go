// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a VMware vRealize Automation networkIpRange resource.
//
// ## Example Usage
//
// ## Import
//
// # To import the vRA Network IP range, use the ID as in the following example
//
// ```sh
//
//	$ pulumi import vra:index/networkIpRange:NetworkIpRange new_ip_range 05956583-6488-4e7d-84c9-92a7b7219a15`
//
// ```
type NetworkIpRange struct {
	pulumi.CustomResourceState

	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// State object representing a network on a external cloud provider.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// End IP address of the range.
	EndIpAddress pulumi.StringOutput `pulumi:"endIpAddress"`
	// External entity Id on the provider side.
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// Fabric network Id.
	FabricNetworkId pulumi.StringPtrOutput `pulumi:"fabricNetworkId"`
	// IP address version: IPv4 or IPv6. Default: IPv4.
	IpVersion pulumi.StringOutput `pulumi:"ipVersion"`
	// HATEOAS of the entity
	Links NetworkIpRangeLinkArrayOutput `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// Start IP address of the range.
	StartIpAddress pulumi.StringOutput `pulumi:"startIpAddress"`
	// Set of tag keys and values to apply to the resource.
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags NetworkIpRangeTagArrayOutput `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewNetworkIpRange registers a new resource with the given unique name, arguments, and options.
func NewNetworkIpRange(ctx *pulumi.Context,
	name string, args *NetworkIpRangeArgs, opts ...pulumi.ResourceOption) (*NetworkIpRange, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndIpAddress == nil {
		return nil, errors.New("invalid value for required argument 'EndIpAddress'")
	}
	if args.IpVersion == nil {
		return nil, errors.New("invalid value for required argument 'IpVersion'")
	}
	if args.StartIpAddress == nil {
		return nil, errors.New("invalid value for required argument 'StartIpAddress'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource NetworkIpRange
	err := ctx.RegisterResource("vra:index/networkIpRange:NetworkIpRange", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkIpRange gets an existing NetworkIpRange resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkIpRange(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkIpRangeState, opts ...pulumi.ResourceOption) (*NetworkIpRange, error) {
	var resource NetworkIpRange
	err := ctx.ReadResource("vra:index/networkIpRange:NetworkIpRange", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkIpRange resources.
type networkIpRangeState struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// State object representing a network on a external cloud provider.
	Description *string `pulumi:"description"`
	// End IP address of the range.
	EndIpAddress *string `pulumi:"endIpAddress"`
	// External entity Id on the provider side.
	ExternalId *string `pulumi:"externalId"`
	// Fabric network Id.
	FabricNetworkId *string `pulumi:"fabricNetworkId"`
	// IP address version: IPv4 or IPv6. Default: IPv4.
	IpVersion *string `pulumi:"ipVersion"`
	// HATEOAS of the entity
	Links []NetworkIpRangeLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId *string `pulumi:"orgId"`
	// Start IP address of the range.
	StartIpAddress *string `pulumi:"startIpAddress"`
	// Set of tag keys and values to apply to the resource.
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []NetworkIpRangeTag `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type NetworkIpRangeState struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt pulumi.StringPtrInput
	// State object representing a network on a external cloud provider.
	Description pulumi.StringPtrInput
	// End IP address of the range.
	EndIpAddress pulumi.StringPtrInput
	// External entity Id on the provider side.
	ExternalId pulumi.StringPtrInput
	// Fabric network Id.
	FabricNetworkId pulumi.StringPtrInput
	// IP address version: IPv4 or IPv6. Default: IPv4.
	IpVersion pulumi.StringPtrInput
	// HATEOAS of the entity
	Links NetworkIpRangeLinkArrayInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// ID of organization that entity belongs to.
	OrgId pulumi.StringPtrInput
	// Start IP address of the range.
	StartIpAddress pulumi.StringPtrInput
	// Set of tag keys and values to apply to the resource.
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags NetworkIpRangeTagArrayInput
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
}

func (NetworkIpRangeState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkIpRangeState)(nil)).Elem()
}

type networkIpRangeArgs struct {
	// State object representing a network on a external cloud provider.
	Description *string `pulumi:"description"`
	// End IP address of the range.
	EndIpAddress string `pulumi:"endIpAddress"`
	// Fabric network Id.
	FabricNetworkId *string `pulumi:"fabricNetworkId"`
	// IP address version: IPv4 or IPv6. Default: IPv4.
	IpVersion string `pulumi:"ipVersion"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// Start IP address of the range.
	StartIpAddress string `pulumi:"startIpAddress"`
	// Set of tag keys and values to apply to the resource.
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []NetworkIpRangeTag `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkIpRange resource.
type NetworkIpRangeArgs struct {
	// State object representing a network on a external cloud provider.
	Description pulumi.StringPtrInput
	// End IP address of the range.
	EndIpAddress pulumi.StringInput
	// Fabric network Id.
	FabricNetworkId pulumi.StringPtrInput
	// IP address version: IPv4 or IPv6. Default: IPv4.
	IpVersion pulumi.StringInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// Start IP address of the range.
	StartIpAddress pulumi.StringInput
	// Set of tag keys and values to apply to the resource.
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags NetworkIpRangeTagArrayInput
}

func (NetworkIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkIpRangeArgs)(nil)).Elem()
}

type NetworkIpRangeInput interface {
	pulumi.Input

	ToNetworkIpRangeOutput() NetworkIpRangeOutput
	ToNetworkIpRangeOutputWithContext(ctx context.Context) NetworkIpRangeOutput
}

func (*NetworkIpRange) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkIpRange)(nil)).Elem()
}

func (i *NetworkIpRange) ToNetworkIpRangeOutput() NetworkIpRangeOutput {
	return i.ToNetworkIpRangeOutputWithContext(context.Background())
}

func (i *NetworkIpRange) ToNetworkIpRangeOutputWithContext(ctx context.Context) NetworkIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIpRangeOutput)
}

// NetworkIpRangeArrayInput is an input type that accepts NetworkIpRangeArray and NetworkIpRangeArrayOutput values.
// You can construct a concrete instance of `NetworkIpRangeArrayInput` via:
//
//	NetworkIpRangeArray{ NetworkIpRangeArgs{...} }
type NetworkIpRangeArrayInput interface {
	pulumi.Input

	ToNetworkIpRangeArrayOutput() NetworkIpRangeArrayOutput
	ToNetworkIpRangeArrayOutputWithContext(context.Context) NetworkIpRangeArrayOutput
}

type NetworkIpRangeArray []NetworkIpRangeInput

func (NetworkIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkIpRange)(nil)).Elem()
}

func (i NetworkIpRangeArray) ToNetworkIpRangeArrayOutput() NetworkIpRangeArrayOutput {
	return i.ToNetworkIpRangeArrayOutputWithContext(context.Background())
}

func (i NetworkIpRangeArray) ToNetworkIpRangeArrayOutputWithContext(ctx context.Context) NetworkIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIpRangeArrayOutput)
}

// NetworkIpRangeMapInput is an input type that accepts NetworkIpRangeMap and NetworkIpRangeMapOutput values.
// You can construct a concrete instance of `NetworkIpRangeMapInput` via:
//
//	NetworkIpRangeMap{ "key": NetworkIpRangeArgs{...} }
type NetworkIpRangeMapInput interface {
	pulumi.Input

	ToNetworkIpRangeMapOutput() NetworkIpRangeMapOutput
	ToNetworkIpRangeMapOutputWithContext(context.Context) NetworkIpRangeMapOutput
}

type NetworkIpRangeMap map[string]NetworkIpRangeInput

func (NetworkIpRangeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkIpRange)(nil)).Elem()
}

func (i NetworkIpRangeMap) ToNetworkIpRangeMapOutput() NetworkIpRangeMapOutput {
	return i.ToNetworkIpRangeMapOutputWithContext(context.Background())
}

func (i NetworkIpRangeMap) ToNetworkIpRangeMapOutputWithContext(ctx context.Context) NetworkIpRangeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIpRangeMapOutput)
}

type NetworkIpRangeOutput struct{ *pulumi.OutputState }

func (NetworkIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkIpRange)(nil)).Elem()
}

func (o NetworkIpRangeOutput) ToNetworkIpRangeOutput() NetworkIpRangeOutput {
	return o
}

func (o NetworkIpRangeOutput) ToNetworkIpRangeOutputWithContext(ctx context.Context) NetworkIpRangeOutput {
	return o
}

// Date when the entity was created. The date is in ISO 6801 and UTC.
func (o NetworkIpRangeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkIpRange) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// State object representing a network on a external cloud provider.
func (o NetworkIpRangeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkIpRange) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// End IP address of the range.
func (o NetworkIpRangeOutput) EndIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkIpRange) pulumi.StringOutput { return v.EndIpAddress }).(pulumi.StringOutput)
}

// External entity Id on the provider side.
func (o NetworkIpRangeOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkIpRange) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// Fabric network Id.
func (o NetworkIpRangeOutput) FabricNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkIpRange) pulumi.StringPtrOutput { return v.FabricNetworkId }).(pulumi.StringPtrOutput)
}

// IP address version: IPv4 or IPv6. Default: IPv4.
func (o NetworkIpRangeOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkIpRange) pulumi.StringOutput { return v.IpVersion }).(pulumi.StringOutput)
}

// HATEOAS of the entity
func (o NetworkIpRangeOutput) Links() NetworkIpRangeLinkArrayOutput {
	return o.ApplyT(func(v *NetworkIpRange) NetworkIpRangeLinkArrayOutput { return v.Links }).(NetworkIpRangeLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o NetworkIpRangeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkIpRange) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID of organization that entity belongs to.
func (o NetworkIpRangeOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkIpRange) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// Start IP address of the range.
func (o NetworkIpRangeOutput) StartIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkIpRange) pulumi.StringOutput { return v.StartIpAddress }).(pulumi.StringOutput)
}

// Set of tag keys and values to apply to the resource.
// Example:[ { "key" : "vmware", "value": "provider" } ]
func (o NetworkIpRangeOutput) Tags() NetworkIpRangeTagArrayOutput {
	return o.ApplyT(func(v *NetworkIpRange) NetworkIpRangeTagArrayOutput { return v.Tags }).(NetworkIpRangeTagArrayOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o NetworkIpRangeOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkIpRange) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type NetworkIpRangeArrayOutput struct{ *pulumi.OutputState }

func (NetworkIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkIpRange)(nil)).Elem()
}

func (o NetworkIpRangeArrayOutput) ToNetworkIpRangeArrayOutput() NetworkIpRangeArrayOutput {
	return o
}

func (o NetworkIpRangeArrayOutput) ToNetworkIpRangeArrayOutputWithContext(ctx context.Context) NetworkIpRangeArrayOutput {
	return o
}

func (o NetworkIpRangeArrayOutput) Index(i pulumi.IntInput) NetworkIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkIpRange {
		return vs[0].([]*NetworkIpRange)[vs[1].(int)]
	}).(NetworkIpRangeOutput)
}

type NetworkIpRangeMapOutput struct{ *pulumi.OutputState }

func (NetworkIpRangeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkIpRange)(nil)).Elem()
}

func (o NetworkIpRangeMapOutput) ToNetworkIpRangeMapOutput() NetworkIpRangeMapOutput {
	return o
}

func (o NetworkIpRangeMapOutput) ToNetworkIpRangeMapOutputWithContext(ctx context.Context) NetworkIpRangeMapOutput {
	return o
}

func (o NetworkIpRangeMapOutput) MapIndex(k pulumi.StringInput) NetworkIpRangeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkIpRange {
		return vs[0].(map[string]*NetworkIpRange)[vs[1].(string)]
	}).(NetworkIpRangeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIpRangeInput)(nil)).Elem(), &NetworkIpRange{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIpRangeArrayInput)(nil)).Elem(), NetworkIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIpRangeMapInput)(nil)).Elem(), NetworkIpRangeMap{})
	pulumi.RegisterOutputType(NetworkIpRangeOutput{})
	pulumi.RegisterOutputType(NetworkIpRangeArrayOutput{})
	pulumi.RegisterOutputType(NetworkIpRangeMapOutput{})
}
