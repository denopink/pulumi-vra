// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### S
// This is an example of how to create a storage profile aws resource.
//
// **Vra storage profile aws:**
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/schmidtw/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.NewStorageProfileAws(ctx, "thisStorageProfileAws", &vra.StorageProfileAwsArgs{
//				Description:        pulumi.String("AWS Storage Profile with instance store device type."),
//				RegionId:           pulumi.Any(data.Vra_region.This.Id),
//				DefaultItem:        pulumi.Bool(false),
//				SupportsEncryption: pulumi.Bool(false),
//				DeviceType:         pulumi.String("ebs"),
//				VolumeType:         pulumi.String("io1"),
//				Iops:               pulumi.String("1000"),
//				Tags: StorageProfileAwsTagArray{
//					&StorageProfileAwsTagArgs{
//						Key:   pulumi.String("foo"),
//						Value: pulumi.String("bar"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vra.NewStorageProfileAws(ctx, "thisIndex/storageProfileAwsStorageProfileAws", &vra.StorageProfileAwsArgs{
//				Description: pulumi.String("AWS Storage Profile with instance store device type."),
//				RegionId:    pulumi.Any(data.Vra_region.This.Id),
//				DefaultItem: pulumi.Bool(false),
//				DeviceType:  pulumi.String("instance-store"),
//				Tags: StorageProfileAwsTagArray{
//					&StorageProfileAwsTagArgs{
//						Key:   pulumi.String("foo"),
//						Value: pulumi.String("bar"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// A storage profile aws resource supports the following arguments:
type StorageProfileAws struct {
	pulumi.CustomResourceState

	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Indicates if this storage profile is a default profile.
	DefaultItem pulumi.BoolOutput `pulumi:"defaultItem"`
	// A human-friendly description.
	Description pulumi.StringOutput `pulumi:"description"`
	// Indicates the type of storage device.
	DeviceType pulumi.StringOutput `pulumi:"deviceType"`
	// The id of the region as seen in the cloud provider for which this profile is defined.
	ExternalRegionId pulumi.StringOutput `pulumi:"externalRegionId"`
	// Indicates maximum I/O operations per second in range(1-20,000).
	Iops pulumi.StringOutput `pulumi:"iops"`
	// HATEOAS of the entity
	Links StorageProfileAwsLinkArrayOutput `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringOutput `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Email of the user that owns the entity.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// A link to the region that is associated with the storage profile.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// Indicates whether this storage profile supports encryption or not.
	SupportsEncryption pulumi.BoolOutput `pulumi:"supportsEncryption"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags StorageProfileAwsTagArrayOutput `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Indicates the type of volume associated with type of storage.
	VolumeType pulumi.StringOutput `pulumi:"volumeType"`
}

// NewStorageProfileAws registers a new resource with the given unique name, arguments, and options.
func NewStorageProfileAws(ctx *pulumi.Context,
	name string, args *StorageProfileAwsArgs, opts ...pulumi.ResourceOption) (*StorageProfileAws, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultItem == nil {
		return nil, errors.New("invalid value for required argument 'DefaultItem'")
	}
	if args.RegionId == nil {
		return nil, errors.New("invalid value for required argument 'RegionId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource StorageProfileAws
	err := ctx.RegisterResource("vra:index/storageProfileAws:StorageProfileAws", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageProfileAws gets an existing StorageProfileAws resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageProfileAws(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageProfileAwsState, opts ...pulumi.ResourceOption) (*StorageProfileAws, error) {
	var resource StorageProfileAws
	err := ctx.ReadResource("vra:index/storageProfileAws:StorageProfileAws", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageProfileAws resources.
type storageProfileAwsState struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// Indicates if this storage profile is a default profile.
	DefaultItem *bool `pulumi:"defaultItem"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// Indicates the type of storage device.
	DeviceType *string `pulumi:"deviceType"`
	// The id of the region as seen in the cloud provider for which this profile is defined.
	ExternalRegionId *string `pulumi:"externalRegionId"`
	// Indicates maximum I/O operations per second in range(1-20,000).
	Iops *string `pulumi:"iops"`
	// HATEOAS of the entity
	Links []StorageProfileAwsLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrganizationId *string `pulumi:"organizationId"`
	// Email of the user that owns the entity.
	Owner *string `pulumi:"owner"`
	// A link to the region that is associated with the storage profile.
	RegionId *string `pulumi:"regionId"`
	// Indicates whether this storage profile supports encryption or not.
	SupportsEncryption *bool `pulumi:"supportsEncryption"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []StorageProfileAwsTag `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Indicates the type of volume associated with type of storage.
	VolumeType *string `pulumi:"volumeType"`
}

type StorageProfileAwsState struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt pulumi.StringPtrInput
	// Indicates if this storage profile is a default profile.
	DefaultItem pulumi.BoolPtrInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// Indicates the type of storage device.
	DeviceType pulumi.StringPtrInput
	// The id of the region as seen in the cloud provider for which this profile is defined.
	ExternalRegionId pulumi.StringPtrInput
	// Indicates maximum I/O operations per second in range(1-20,000).
	Iops pulumi.StringPtrInput
	// HATEOAS of the entity
	Links StorageProfileAwsLinkArrayInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// The id of the organization this entity belongs to.
	OrganizationId pulumi.StringPtrInput
	// Email of the user that owns the entity.
	Owner pulumi.StringPtrInput
	// A link to the region that is associated with the storage profile.
	RegionId pulumi.StringPtrInput
	// Indicates whether this storage profile supports encryption or not.
	SupportsEncryption pulumi.BoolPtrInput
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags StorageProfileAwsTagArrayInput
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
	// Indicates the type of volume associated with type of storage.
	VolumeType pulumi.StringPtrInput
}

func (StorageProfileAwsState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageProfileAwsState)(nil)).Elem()
}

type storageProfileAwsArgs struct {
	// Indicates if this storage profile is a default profile.
	DefaultItem bool `pulumi:"defaultItem"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// Indicates the type of storage device.
	DeviceType *string `pulumi:"deviceType"`
	// Indicates maximum I/O operations per second in range(1-20,000).
	Iops *string `pulumi:"iops"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// A link to the region that is associated with the storage profile.
	RegionId string `pulumi:"regionId"`
	// Indicates whether this storage profile supports encryption or not.
	SupportsEncryption *bool `pulumi:"supportsEncryption"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []StorageProfileAwsTag `pulumi:"tags"`
	// Indicates the type of volume associated with type of storage.
	VolumeType *string `pulumi:"volumeType"`
}

// The set of arguments for constructing a StorageProfileAws resource.
type StorageProfileAwsArgs struct {
	// Indicates if this storage profile is a default profile.
	DefaultItem pulumi.BoolInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// Indicates the type of storage device.
	DeviceType pulumi.StringPtrInput
	// Indicates maximum I/O operations per second in range(1-20,000).
	Iops pulumi.StringPtrInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// A link to the region that is associated with the storage profile.
	RegionId pulumi.StringInput
	// Indicates whether this storage profile supports encryption or not.
	SupportsEncryption pulumi.BoolPtrInput
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags StorageProfileAwsTagArrayInput
	// Indicates the type of volume associated with type of storage.
	VolumeType pulumi.StringPtrInput
}

func (StorageProfileAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageProfileAwsArgs)(nil)).Elem()
}

type StorageProfileAwsInput interface {
	pulumi.Input

	ToStorageProfileAwsOutput() StorageProfileAwsOutput
	ToStorageProfileAwsOutputWithContext(ctx context.Context) StorageProfileAwsOutput
}

func (*StorageProfileAws) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfileAws)(nil)).Elem()
}

func (i *StorageProfileAws) ToStorageProfileAwsOutput() StorageProfileAwsOutput {
	return i.ToStorageProfileAwsOutputWithContext(context.Background())
}

func (i *StorageProfileAws) ToStorageProfileAwsOutputWithContext(ctx context.Context) StorageProfileAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileAwsOutput)
}

// StorageProfileAwsArrayInput is an input type that accepts StorageProfileAwsArray and StorageProfileAwsArrayOutput values.
// You can construct a concrete instance of `StorageProfileAwsArrayInput` via:
//
//	StorageProfileAwsArray{ StorageProfileAwsArgs{...} }
type StorageProfileAwsArrayInput interface {
	pulumi.Input

	ToStorageProfileAwsArrayOutput() StorageProfileAwsArrayOutput
	ToStorageProfileAwsArrayOutputWithContext(context.Context) StorageProfileAwsArrayOutput
}

type StorageProfileAwsArray []StorageProfileAwsInput

func (StorageProfileAwsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StorageProfileAws)(nil)).Elem()
}

func (i StorageProfileAwsArray) ToStorageProfileAwsArrayOutput() StorageProfileAwsArrayOutput {
	return i.ToStorageProfileAwsArrayOutputWithContext(context.Background())
}

func (i StorageProfileAwsArray) ToStorageProfileAwsArrayOutputWithContext(ctx context.Context) StorageProfileAwsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileAwsArrayOutput)
}

// StorageProfileAwsMapInput is an input type that accepts StorageProfileAwsMap and StorageProfileAwsMapOutput values.
// You can construct a concrete instance of `StorageProfileAwsMapInput` via:
//
//	StorageProfileAwsMap{ "key": StorageProfileAwsArgs{...} }
type StorageProfileAwsMapInput interface {
	pulumi.Input

	ToStorageProfileAwsMapOutput() StorageProfileAwsMapOutput
	ToStorageProfileAwsMapOutputWithContext(context.Context) StorageProfileAwsMapOutput
}

type StorageProfileAwsMap map[string]StorageProfileAwsInput

func (StorageProfileAwsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StorageProfileAws)(nil)).Elem()
}

func (i StorageProfileAwsMap) ToStorageProfileAwsMapOutput() StorageProfileAwsMapOutput {
	return i.ToStorageProfileAwsMapOutputWithContext(context.Background())
}

func (i StorageProfileAwsMap) ToStorageProfileAwsMapOutputWithContext(ctx context.Context) StorageProfileAwsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileAwsMapOutput)
}

type StorageProfileAwsOutput struct{ *pulumi.OutputState }

func (StorageProfileAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfileAws)(nil)).Elem()
}

func (o StorageProfileAwsOutput) ToStorageProfileAwsOutput() StorageProfileAwsOutput {
	return o
}

func (o StorageProfileAwsOutput) ToStorageProfileAwsOutputWithContext(ctx context.Context) StorageProfileAwsOutput {
	return o
}

// Date when the entity was created. The date is in ISO 6801 and UTC.
func (o StorageProfileAwsOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Indicates if this storage profile is a default profile.
func (o StorageProfileAwsOutput) DefaultItem() pulumi.BoolOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.BoolOutput { return v.DefaultItem }).(pulumi.BoolOutput)
}

// A human-friendly description.
func (o StorageProfileAwsOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Indicates the type of storage device.
func (o StorageProfileAwsOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.DeviceType }).(pulumi.StringOutput)
}

// The id of the region as seen in the cloud provider for which this profile is defined.
func (o StorageProfileAwsOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.ExternalRegionId }).(pulumi.StringOutput)
}

// Indicates maximum I/O operations per second in range(1-20,000).
func (o StorageProfileAwsOutput) Iops() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.Iops }).(pulumi.StringOutput)
}

// HATEOAS of the entity
func (o StorageProfileAwsOutput) Links() StorageProfileAwsLinkArrayOutput {
	return o.ApplyT(func(v *StorageProfileAws) StorageProfileAwsLinkArrayOutput { return v.Links }).(StorageProfileAwsLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o StorageProfileAwsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o StorageProfileAwsOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o StorageProfileAwsOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// A link to the region that is associated with the storage profile.
func (o StorageProfileAwsOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// Indicates whether this storage profile supports encryption or not.
func (o StorageProfileAwsOutput) SupportsEncryption() pulumi.BoolOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.BoolOutput { return v.SupportsEncryption }).(pulumi.BoolOutput)
}

// A set of tag keys and optional values that were set on this Network Profile.
// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
func (o StorageProfileAwsOutput) Tags() StorageProfileAwsTagArrayOutput {
	return o.ApplyT(func(v *StorageProfileAws) StorageProfileAwsTagArrayOutput { return v.Tags }).(StorageProfileAwsTagArrayOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o StorageProfileAwsOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Indicates the type of volume associated with type of storage.
func (o StorageProfileAwsOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfileAws) pulumi.StringOutput { return v.VolumeType }).(pulumi.StringOutput)
}

type StorageProfileAwsArrayOutput struct{ *pulumi.OutputState }

func (StorageProfileAwsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StorageProfileAws)(nil)).Elem()
}

func (o StorageProfileAwsArrayOutput) ToStorageProfileAwsArrayOutput() StorageProfileAwsArrayOutput {
	return o
}

func (o StorageProfileAwsArrayOutput) ToStorageProfileAwsArrayOutputWithContext(ctx context.Context) StorageProfileAwsArrayOutput {
	return o
}

func (o StorageProfileAwsArrayOutput) Index(i pulumi.IntInput) StorageProfileAwsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StorageProfileAws {
		return vs[0].([]*StorageProfileAws)[vs[1].(int)]
	}).(StorageProfileAwsOutput)
}

type StorageProfileAwsMapOutput struct{ *pulumi.OutputState }

func (StorageProfileAwsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StorageProfileAws)(nil)).Elem()
}

func (o StorageProfileAwsMapOutput) ToStorageProfileAwsMapOutput() StorageProfileAwsMapOutput {
	return o
}

func (o StorageProfileAwsMapOutput) ToStorageProfileAwsMapOutputWithContext(ctx context.Context) StorageProfileAwsMapOutput {
	return o
}

func (o StorageProfileAwsMapOutput) MapIndex(k pulumi.StringInput) StorageProfileAwsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StorageProfileAws {
		return vs[0].(map[string]*StorageProfileAws)[vs[1].(string)]
	}).(StorageProfileAwsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageProfileAwsInput)(nil)).Elem(), &StorageProfileAws{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageProfileAwsArrayInput)(nil)).Elem(), StorageProfileAwsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageProfileAwsMapInput)(nil)).Elem(), StorageProfileAwsMap{})
	pulumi.RegisterOutputType(StorageProfileAwsOutput{})
	pulumi.RegisterOutputType(StorageProfileAwsArrayOutput{})
	pulumi.RegisterOutputType(StorageProfileAwsMapOutput{})
}
