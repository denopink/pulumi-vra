// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a VMware vRealize Automation GCP cloud account resource.
//
// ## Example Usage
// ### S
//
// The following example shows how to create a GCP cloud account resource.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.NewCloudAccountGcp(ctx, "this", &vra.CloudAccountGcpArgs{
//				ClientEmail:  pulumi.String("client_email"),
//				Description:  pulumi.String("terraform test cloud account gcp"),
//				PrivateKey:   pulumi.String("private_key"),
//				PrivateKeyId: pulumi.String("private_key_id"),
//				ProjectId:    pulumi.String("project_id"),
//				Regions: pulumi.StringArray{
//					pulumi.String("us-west1"),
//					pulumi.String("us-west2"),
//				},
//				Tags: CloudAccountGcpTagArray{
//					&CloudAccountGcpTagArgs{
//						Key:   pulumi.String("foo"),
//						Value: pulumi.String("bar"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # To import the GCP cloud account, use the ID as in the following example
//
// ```sh
//
//	$ pulumi import vra:index/cloudAccountGcp:CloudAccountGcp new_gcp 05956583-6488-4e7d-84c9-92a7b7219a15`
//
// ```
type CloudAccountGcp struct {
	pulumi.CustomResourceState

	// GCP Client email.
	ClientEmail pulumi.StringOutput `pulumi:"clientEmail"`
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Human-friendly description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// HATEOAS of entity.
	Links CloudAccountGcpLinkArrayOutput `pulumi:"links"`
	// Name of GCP cloud account.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// Email of entity owner.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// GCP Private key.
	PrivateKey pulumi.StringOutput `pulumi:"privateKey"`
	// GCP Private key ID.
	PrivateKeyId pulumi.StringOutput `pulumi:"privateKeyId"`
	// GCP Project ID.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayOutput `pulumi:"regions"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags CloudAccountGcpTagArrayOutput `pulumi:"tags"`
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewCloudAccountGcp registers a new resource with the given unique name, arguments, and options.
func NewCloudAccountGcp(ctx *pulumi.Context,
	name string, args *CloudAccountGcpArgs, opts ...pulumi.ResourceOption) (*CloudAccountGcp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientEmail == nil {
		return nil, errors.New("invalid value for required argument 'ClientEmail'")
	}
	if args.PrivateKey == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKey'")
	}
	if args.PrivateKeyId == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKeyId'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.Regions == nil {
		return nil, errors.New("invalid value for required argument 'Regions'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CloudAccountGcp
	err := ctx.RegisterResource("vra:index/cloudAccountGcp:CloudAccountGcp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudAccountGcp gets an existing CloudAccountGcp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudAccountGcp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudAccountGcpState, opts ...pulumi.ResourceOption) (*CloudAccountGcp, error) {
	var resource CloudAccountGcp
	err := ctx.ReadResource("vra:index/cloudAccountGcp:CloudAccountGcp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudAccountGcp resources.
type cloudAccountGcpState struct {
	// GCP Client email.
	ClientEmail *string `pulumi:"clientEmail"`
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// Human-friendly description.
	Description *string `pulumi:"description"`
	// HATEOAS of entity.
	Links []CloudAccountGcpLink `pulumi:"links"`
	// Name of GCP cloud account.
	Name *string `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId *string `pulumi:"orgId"`
	// Email of entity owner.
	Owner *string `pulumi:"owner"`
	// GCP Private key.
	PrivateKey *string `pulumi:"privateKey"`
	// GCP Private key ID.
	PrivateKeyId *string `pulumi:"privateKeyId"`
	// GCP Project ID.
	ProjectId *string `pulumi:"projectId"`
	// Set of region names enabled for the cloud account.
	Regions []string `pulumi:"regions"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []CloudAccountGcpTag `pulumi:"tags"`
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type CloudAccountGcpState struct {
	// GCP Client email.
	ClientEmail pulumi.StringPtrInput
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringPtrInput
	// Human-friendly description.
	Description pulumi.StringPtrInput
	// HATEOAS of entity.
	Links CloudAccountGcpLinkArrayInput
	// Name of GCP cloud account.
	Name pulumi.StringPtrInput
	// ID of organization that entity belongs to.
	OrgId pulumi.StringPtrInput
	// Email of entity owner.
	Owner pulumi.StringPtrInput
	// GCP Private key.
	PrivateKey pulumi.StringPtrInput
	// GCP Private key ID.
	PrivateKeyId pulumi.StringPtrInput
	// GCP Project ID.
	ProjectId pulumi.StringPtrInput
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayInput
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags CloudAccountGcpTagArrayInput
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
}

func (CloudAccountGcpState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccountGcpState)(nil)).Elem()
}

type cloudAccountGcpArgs struct {
	// GCP Client email.
	ClientEmail string `pulumi:"clientEmail"`
	// Human-friendly description.
	Description *string `pulumi:"description"`
	// Name of GCP cloud account.
	Name *string `pulumi:"name"`
	// GCP Private key.
	PrivateKey string `pulumi:"privateKey"`
	// GCP Private key ID.
	PrivateKeyId string `pulumi:"privateKeyId"`
	// GCP Project ID.
	ProjectId string `pulumi:"projectId"`
	// Set of region names enabled for the cloud account.
	Regions []string `pulumi:"regions"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []CloudAccountGcpTag `pulumi:"tags"`
}

// The set of arguments for constructing a CloudAccountGcp resource.
type CloudAccountGcpArgs struct {
	// GCP Client email.
	ClientEmail pulumi.StringInput
	// Human-friendly description.
	Description pulumi.StringPtrInput
	// Name of GCP cloud account.
	Name pulumi.StringPtrInput
	// GCP Private key.
	PrivateKey pulumi.StringInput
	// GCP Private key ID.
	PrivateKeyId pulumi.StringInput
	// GCP Project ID.
	ProjectId pulumi.StringInput
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayInput
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags CloudAccountGcpTagArrayInput
}

func (CloudAccountGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccountGcpArgs)(nil)).Elem()
}

type CloudAccountGcpInput interface {
	pulumi.Input

	ToCloudAccountGcpOutput() CloudAccountGcpOutput
	ToCloudAccountGcpOutputWithContext(ctx context.Context) CloudAccountGcpOutput
}

func (*CloudAccountGcp) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountGcp)(nil)).Elem()
}

func (i *CloudAccountGcp) ToCloudAccountGcpOutput() CloudAccountGcpOutput {
	return i.ToCloudAccountGcpOutputWithContext(context.Background())
}

func (i *CloudAccountGcp) ToCloudAccountGcpOutputWithContext(ctx context.Context) CloudAccountGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountGcpOutput)
}

// CloudAccountGcpArrayInput is an input type that accepts CloudAccountGcpArray and CloudAccountGcpArrayOutput values.
// You can construct a concrete instance of `CloudAccountGcpArrayInput` via:
//
//	CloudAccountGcpArray{ CloudAccountGcpArgs{...} }
type CloudAccountGcpArrayInput interface {
	pulumi.Input

	ToCloudAccountGcpArrayOutput() CloudAccountGcpArrayOutput
	ToCloudAccountGcpArrayOutputWithContext(context.Context) CloudAccountGcpArrayOutput
}

type CloudAccountGcpArray []CloudAccountGcpInput

func (CloudAccountGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccountGcp)(nil)).Elem()
}

func (i CloudAccountGcpArray) ToCloudAccountGcpArrayOutput() CloudAccountGcpArrayOutput {
	return i.ToCloudAccountGcpArrayOutputWithContext(context.Background())
}

func (i CloudAccountGcpArray) ToCloudAccountGcpArrayOutputWithContext(ctx context.Context) CloudAccountGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountGcpArrayOutput)
}

// CloudAccountGcpMapInput is an input type that accepts CloudAccountGcpMap and CloudAccountGcpMapOutput values.
// You can construct a concrete instance of `CloudAccountGcpMapInput` via:
//
//	CloudAccountGcpMap{ "key": CloudAccountGcpArgs{...} }
type CloudAccountGcpMapInput interface {
	pulumi.Input

	ToCloudAccountGcpMapOutput() CloudAccountGcpMapOutput
	ToCloudAccountGcpMapOutputWithContext(context.Context) CloudAccountGcpMapOutput
}

type CloudAccountGcpMap map[string]CloudAccountGcpInput

func (CloudAccountGcpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccountGcp)(nil)).Elem()
}

func (i CloudAccountGcpMap) ToCloudAccountGcpMapOutput() CloudAccountGcpMapOutput {
	return i.ToCloudAccountGcpMapOutputWithContext(context.Background())
}

func (i CloudAccountGcpMap) ToCloudAccountGcpMapOutputWithContext(ctx context.Context) CloudAccountGcpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountGcpMapOutput)
}

type CloudAccountGcpOutput struct{ *pulumi.OutputState }

func (CloudAccountGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountGcp)(nil)).Elem()
}

func (o CloudAccountGcpOutput) ToCloudAccountGcpOutput() CloudAccountGcpOutput {
	return o
}

func (o CloudAccountGcpOutput) ToCloudAccountGcpOutputWithContext(ctx context.Context) CloudAccountGcpOutput {
	return o
}

// GCP Client email.
func (o CloudAccountGcpOutput) ClientEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringOutput { return v.ClientEmail }).(pulumi.StringOutput)
}

// Date when entity was created. Date and time format is ISO 8601 and UTC.
func (o CloudAccountGcpOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Human-friendly description.
func (o CloudAccountGcpOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// HATEOAS of entity.
func (o CloudAccountGcpOutput) Links() CloudAccountGcpLinkArrayOutput {
	return o.ApplyT(func(v *CloudAccountGcp) CloudAccountGcpLinkArrayOutput { return v.Links }).(CloudAccountGcpLinkArrayOutput)
}

// Name of GCP cloud account.
func (o CloudAccountGcpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID of organization that entity belongs to.
func (o CloudAccountGcpOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// Email of entity owner.
func (o CloudAccountGcpOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// GCP Private key.
func (o CloudAccountGcpOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringOutput { return v.PrivateKey }).(pulumi.StringOutput)
}

// GCP Private key ID.
func (o CloudAccountGcpOutput) PrivateKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringOutput { return v.PrivateKeyId }).(pulumi.StringOutput)
}

// GCP Project ID.
func (o CloudAccountGcpOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// Set of region names enabled for the cloud account.
func (o CloudAccountGcpOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringArrayOutput { return v.Regions }).(pulumi.StringArrayOutput)
}

// Set of tag keys and values to apply to the cloud account.\
// Example:[ { "key" : "vmware", "value": "provider" } ]
func (o CloudAccountGcpOutput) Tags() CloudAccountGcpTagArrayOutput {
	return o.ApplyT(func(v *CloudAccountGcp) CloudAccountGcpTagArrayOutput { return v.Tags }).(CloudAccountGcpTagArrayOutput)
}

// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
func (o CloudAccountGcpOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountGcp) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type CloudAccountGcpArrayOutput struct{ *pulumi.OutputState }

func (CloudAccountGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccountGcp)(nil)).Elem()
}

func (o CloudAccountGcpArrayOutput) ToCloudAccountGcpArrayOutput() CloudAccountGcpArrayOutput {
	return o
}

func (o CloudAccountGcpArrayOutput) ToCloudAccountGcpArrayOutputWithContext(ctx context.Context) CloudAccountGcpArrayOutput {
	return o
}

func (o CloudAccountGcpArrayOutput) Index(i pulumi.IntInput) CloudAccountGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudAccountGcp {
		return vs[0].([]*CloudAccountGcp)[vs[1].(int)]
	}).(CloudAccountGcpOutput)
}

type CloudAccountGcpMapOutput struct{ *pulumi.OutputState }

func (CloudAccountGcpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccountGcp)(nil)).Elem()
}

func (o CloudAccountGcpMapOutput) ToCloudAccountGcpMapOutput() CloudAccountGcpMapOutput {
	return o
}

func (o CloudAccountGcpMapOutput) ToCloudAccountGcpMapOutputWithContext(ctx context.Context) CloudAccountGcpMapOutput {
	return o
}

func (o CloudAccountGcpMapOutput) MapIndex(k pulumi.StringInput) CloudAccountGcpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudAccountGcp {
		return vs[0].(map[string]*CloudAccountGcp)[vs[1].(string)]
	}).(CloudAccountGcpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountGcpInput)(nil)).Elem(), &CloudAccountGcp{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountGcpArrayInput)(nil)).Elem(), CloudAccountGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountGcpMapInput)(nil)).Elem(), CloudAccountGcpMap{})
	pulumi.RegisterOutputType(CloudAccountGcpOutput{})
	pulumi.RegisterOutputType(CloudAccountGcpArrayOutput{})
	pulumi.RegisterOutputType(CloudAccountGcpMapOutput{})
}
