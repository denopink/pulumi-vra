// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Updates a VMware vRealize Automation fabricCompute resource.
//
// ## Example Usage
// ### S
//
// You cannot create a fabric compute resource, however you can import it using the command specified in the import section below.
//
// Once a resource is imported, you can update it as shown below:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.NewFabricCompute(ctx, "this", &vra.FabricComputeArgs{
//				Tags: FabricComputeTagArray{
//					&FabricComputeTagArgs{
//						Key:   pulumi.String("foo"),
//						Value: pulumi.String("bar"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # To import the fabric compute resource, use the ID as in the following example
//
// ```sh
//
//	$ pulumi import vra:index/fabricCompute:FabricCompute this 88fdea8b-92ed-4aa9-b6ee-4670412961b0
//
// ```
type FabricCompute struct {
	pulumi.CustomResourceState

	// Date when the entity was created. The date is in ISO 8601 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A list of key value pair of custom properties for the fabric compute resource.
	CustomProperties pulumi.MapOutput `pulumi:"customProperties"`
	// A human-friendly description.
	Description pulumi.StringOutput `pulumi:"description"`
	// The id of the external entity on the provider side.
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// The external region id of the fabric compute.
	ExternalRegionId pulumi.StringOutput `pulumi:"externalRegionId"`
	// The external zone id of the fabric compute.
	ExternalZoneId pulumi.StringOutput `pulumi:"externalZoneId"`
	// Lifecycle status of the compute instance.
	LifecycleState pulumi.StringOutput `pulumi:"lifecycleState"`
	// HATEOAS of the entity.
	Links FabricComputeLinkArrayOutput `pulumi:"links"`
	// A human-friendly name used as an identifier for the fabric compute resource instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// Power state of fabric compute instance.
	PowerState pulumi.StringOutput `pulumi:"powerState"`
	// A set of tag keys and optional values that were set on this resource:
	Tags FabricComputeTagArrayOutput `pulumi:"tags"`
	// Type of the fabric compute instance.
	Type pulumi.StringOutput `pulumi:"type"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewFabricCompute registers a new resource with the given unique name, arguments, and options.
func NewFabricCompute(ctx *pulumi.Context,
	name string, args *FabricComputeArgs, opts ...pulumi.ResourceOption) (*FabricCompute, error) {
	if args == nil {
		args = &FabricComputeArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FabricCompute
	err := ctx.RegisterResource("vra:index/fabricCompute:FabricCompute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFabricCompute gets an existing FabricCompute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFabricCompute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FabricComputeState, opts ...pulumi.ResourceOption) (*FabricCompute, error) {
	var resource FabricCompute
	err := ctx.ReadResource("vra:index/fabricCompute:FabricCompute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FabricCompute resources.
type fabricComputeState struct {
	// Date when the entity was created. The date is in ISO 8601 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// A list of key value pair of custom properties for the fabric compute resource.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// The id of the external entity on the provider side.
	ExternalId *string `pulumi:"externalId"`
	// The external region id of the fabric compute.
	ExternalRegionId *string `pulumi:"externalRegionId"`
	// The external zone id of the fabric compute.
	ExternalZoneId *string `pulumi:"externalZoneId"`
	// Lifecycle status of the compute instance.
	LifecycleState *string `pulumi:"lifecycleState"`
	// HATEOAS of the entity.
	Links []FabricComputeLink `pulumi:"links"`
	// A human-friendly name used as an identifier for the fabric compute resource instance.
	Name *string `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrgId *string `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner *string `pulumi:"owner"`
	// Power state of fabric compute instance.
	PowerState *string `pulumi:"powerState"`
	// A set of tag keys and optional values that were set on this resource:
	Tags []FabricComputeTag `pulumi:"tags"`
	// Type of the fabric compute instance.
	Type *string `pulumi:"type"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type FabricComputeState struct {
	// Date when the entity was created. The date is in ISO 8601 and UTC.
	CreatedAt pulumi.StringPtrInput
	// A list of key value pair of custom properties for the fabric compute resource.
	CustomProperties pulumi.MapInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// The id of the external entity on the provider side.
	ExternalId pulumi.StringPtrInput
	// The external region id of the fabric compute.
	ExternalRegionId pulumi.StringPtrInput
	// The external zone id of the fabric compute.
	ExternalZoneId pulumi.StringPtrInput
	// Lifecycle status of the compute instance.
	LifecycleState pulumi.StringPtrInput
	// HATEOAS of the entity.
	Links FabricComputeLinkArrayInput
	// A human-friendly name used as an identifier for the fabric compute resource instance.
	Name pulumi.StringPtrInput
	// The id of the organization this entity belongs to.
	OrgId pulumi.StringPtrInput
	// Email of the user that owns the entity.
	Owner pulumi.StringPtrInput
	// Power state of fabric compute instance.
	PowerState pulumi.StringPtrInput
	// A set of tag keys and optional values that were set on this resource:
	Tags FabricComputeTagArrayInput
	// Type of the fabric compute instance.
	Type pulumi.StringPtrInput
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
}

func (FabricComputeState) ElementType() reflect.Type {
	return reflect.TypeOf((*fabricComputeState)(nil)).Elem()
}

type fabricComputeArgs struct {
	// A set of tag keys and optional values that were set on this resource:
	Tags []FabricComputeTag `pulumi:"tags"`
}

// The set of arguments for constructing a FabricCompute resource.
type FabricComputeArgs struct {
	// A set of tag keys and optional values that were set on this resource:
	Tags FabricComputeTagArrayInput
}

func (FabricComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fabricComputeArgs)(nil)).Elem()
}

type FabricComputeInput interface {
	pulumi.Input

	ToFabricComputeOutput() FabricComputeOutput
	ToFabricComputeOutputWithContext(ctx context.Context) FabricComputeOutput
}

func (*FabricCompute) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricCompute)(nil)).Elem()
}

func (i *FabricCompute) ToFabricComputeOutput() FabricComputeOutput {
	return i.ToFabricComputeOutputWithContext(context.Background())
}

func (i *FabricCompute) ToFabricComputeOutputWithContext(ctx context.Context) FabricComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricComputeOutput)
}

// FabricComputeArrayInput is an input type that accepts FabricComputeArray and FabricComputeArrayOutput values.
// You can construct a concrete instance of `FabricComputeArrayInput` via:
//
//	FabricComputeArray{ FabricComputeArgs{...} }
type FabricComputeArrayInput interface {
	pulumi.Input

	ToFabricComputeArrayOutput() FabricComputeArrayOutput
	ToFabricComputeArrayOutputWithContext(context.Context) FabricComputeArrayOutput
}

type FabricComputeArray []FabricComputeInput

func (FabricComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FabricCompute)(nil)).Elem()
}

func (i FabricComputeArray) ToFabricComputeArrayOutput() FabricComputeArrayOutput {
	return i.ToFabricComputeArrayOutputWithContext(context.Background())
}

func (i FabricComputeArray) ToFabricComputeArrayOutputWithContext(ctx context.Context) FabricComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricComputeArrayOutput)
}

// FabricComputeMapInput is an input type that accepts FabricComputeMap and FabricComputeMapOutput values.
// You can construct a concrete instance of `FabricComputeMapInput` via:
//
//	FabricComputeMap{ "key": FabricComputeArgs{...} }
type FabricComputeMapInput interface {
	pulumi.Input

	ToFabricComputeMapOutput() FabricComputeMapOutput
	ToFabricComputeMapOutputWithContext(context.Context) FabricComputeMapOutput
}

type FabricComputeMap map[string]FabricComputeInput

func (FabricComputeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FabricCompute)(nil)).Elem()
}

func (i FabricComputeMap) ToFabricComputeMapOutput() FabricComputeMapOutput {
	return i.ToFabricComputeMapOutputWithContext(context.Background())
}

func (i FabricComputeMap) ToFabricComputeMapOutputWithContext(ctx context.Context) FabricComputeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricComputeMapOutput)
}

type FabricComputeOutput struct{ *pulumi.OutputState }

func (FabricComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricCompute)(nil)).Elem()
}

func (o FabricComputeOutput) ToFabricComputeOutput() FabricComputeOutput {
	return o
}

func (o FabricComputeOutput) ToFabricComputeOutputWithContext(ctx context.Context) FabricComputeOutput {
	return o
}

// Date when the entity was created. The date is in ISO 8601 and UTC.
func (o FabricComputeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A list of key value pair of custom properties for the fabric compute resource.
func (o FabricComputeOutput) CustomProperties() pulumi.MapOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.MapOutput { return v.CustomProperties }).(pulumi.MapOutput)
}

// A human-friendly description.
func (o FabricComputeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The id of the external entity on the provider side.
func (o FabricComputeOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// The external region id of the fabric compute.
func (o FabricComputeOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.ExternalRegionId }).(pulumi.StringOutput)
}

// The external zone id of the fabric compute.
func (o FabricComputeOutput) ExternalZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.ExternalZoneId }).(pulumi.StringOutput)
}

// Lifecycle status of the compute instance.
func (o FabricComputeOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.LifecycleState }).(pulumi.StringOutput)
}

// HATEOAS of the entity.
func (o FabricComputeOutput) Links() FabricComputeLinkArrayOutput {
	return o.ApplyT(func(v *FabricCompute) FabricComputeLinkArrayOutput { return v.Links }).(FabricComputeLinkArrayOutput)
}

// A human-friendly name used as an identifier for the fabric compute resource instance.
func (o FabricComputeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o FabricComputeOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o FabricComputeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// Power state of fabric compute instance.
func (o FabricComputeOutput) PowerState() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.PowerState }).(pulumi.StringOutput)
}

// A set of tag keys and optional values that were set on this resource:
func (o FabricComputeOutput) Tags() FabricComputeTagArrayOutput {
	return o.ApplyT(func(v *FabricCompute) FabricComputeTagArrayOutput { return v.Tags }).(FabricComputeTagArrayOutput)
}

// Type of the fabric compute instance.
func (o FabricComputeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o FabricComputeOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCompute) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type FabricComputeArrayOutput struct{ *pulumi.OutputState }

func (FabricComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FabricCompute)(nil)).Elem()
}

func (o FabricComputeArrayOutput) ToFabricComputeArrayOutput() FabricComputeArrayOutput {
	return o
}

func (o FabricComputeArrayOutput) ToFabricComputeArrayOutputWithContext(ctx context.Context) FabricComputeArrayOutput {
	return o
}

func (o FabricComputeArrayOutput) Index(i pulumi.IntInput) FabricComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FabricCompute {
		return vs[0].([]*FabricCompute)[vs[1].(int)]
	}).(FabricComputeOutput)
}

type FabricComputeMapOutput struct{ *pulumi.OutputState }

func (FabricComputeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FabricCompute)(nil)).Elem()
}

func (o FabricComputeMapOutput) ToFabricComputeMapOutput() FabricComputeMapOutput {
	return o
}

func (o FabricComputeMapOutput) ToFabricComputeMapOutputWithContext(ctx context.Context) FabricComputeMapOutput {
	return o
}

func (o FabricComputeMapOutput) MapIndex(k pulumi.StringInput) FabricComputeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FabricCompute {
		return vs[0].(map[string]*FabricCompute)[vs[1].(string)]
	}).(FabricComputeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FabricComputeInput)(nil)).Elem(), &FabricCompute{})
	pulumi.RegisterInputType(reflect.TypeOf((*FabricComputeArrayInput)(nil)).Elem(), FabricComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FabricComputeMapInput)(nil)).Elem(), FabricComputeMap{})
	pulumi.RegisterOutputType(FabricComputeOutput{})
	pulumi.RegisterOutputType(FabricComputeArrayOutput{})
	pulumi.RegisterOutputType(FabricComputeMapOutput{})
}
