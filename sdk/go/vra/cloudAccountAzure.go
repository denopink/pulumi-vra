// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a VMware vRealize Automation Azure cloud account resource.
//
// ## Example Usage
// ### S
//
// The following example shows how to create an Azure cloud account resource.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.NewCloudAccountAzure(ctx, "this", &vra.CloudAccountAzureArgs{
//				ApplicationId:  pulumi.String("sample-application-id"),
//				ApplicationKey: pulumi.String("sample-application=key"),
//				Description:    pulumi.String("test cloud account"),
//				Regions: pulumi.StringArray{
//					pulumi.String("centralus"),
//				},
//				SubscriptionId: pulumi.String("sample-subscription-id"),
//				TenantId:       pulumi.String("sample-tenant-id"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # To import the Azure cloud account, use the ID as in the following example
//
// ```sh
//
//	$ pulumi import vra:index/cloudAccountAzure:CloudAccountAzure new_azure 05956583-6488-4e7d-84c9-92a7b7219a15`
//
// ```
type CloudAccountAzure struct {
	pulumi.CustomResourceState

	// Azure Client Application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Azure Client Application Secret Key.
	ApplicationKey pulumi.StringOutput `pulumi:"applicationKey"`
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Human-friendly description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// HATEOAS of entity.
	Links CloudAccountAzureLinkArrayOutput `pulumi:"links"`
	// Name of Azure cloud account.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// Email of entity owner.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayOutput `pulumi:"regions"`
	// Azure Subscription ID.
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags CloudAccountAzureTagArrayOutput `pulumi:"tags"`
	// Azure Tenant ID.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewCloudAccountAzure registers a new resource with the given unique name, arguments, and options.
func NewCloudAccountAzure(ctx *pulumi.Context,
	name string, args *CloudAccountAzureArgs, opts ...pulumi.ResourceOption) (*CloudAccountAzure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.ApplicationKey == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationKey'")
	}
	if args.Regions == nil {
		return nil, errors.New("invalid value for required argument 'Regions'")
	}
	if args.SubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'SubscriptionId'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CloudAccountAzure
	err := ctx.RegisterResource("vra:index/cloudAccountAzure:CloudAccountAzure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudAccountAzure gets an existing CloudAccountAzure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudAccountAzure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudAccountAzureState, opts ...pulumi.ResourceOption) (*CloudAccountAzure, error) {
	var resource CloudAccountAzure
	err := ctx.ReadResource("vra:index/cloudAccountAzure:CloudAccountAzure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudAccountAzure resources.
type cloudAccountAzureState struct {
	// Azure Client Application ID.
	ApplicationId *string `pulumi:"applicationId"`
	// Azure Client Application Secret Key.
	ApplicationKey *string `pulumi:"applicationKey"`
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// Human-friendly description.
	Description *string `pulumi:"description"`
	// HATEOAS of entity.
	Links []CloudAccountAzureLink `pulumi:"links"`
	// Name of Azure cloud account.
	Name *string `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId *string `pulumi:"orgId"`
	// Email of entity owner.
	Owner *string `pulumi:"owner"`
	// Set of region names enabled for the cloud account.
	Regions []string `pulumi:"regions"`
	// Azure Subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []CloudAccountAzureTag `pulumi:"tags"`
	// Azure Tenant ID.
	TenantId *string `pulumi:"tenantId"`
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type CloudAccountAzureState struct {
	// Azure Client Application ID.
	ApplicationId pulumi.StringPtrInput
	// Azure Client Application Secret Key.
	ApplicationKey pulumi.StringPtrInput
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringPtrInput
	// Human-friendly description.
	Description pulumi.StringPtrInput
	// HATEOAS of entity.
	Links CloudAccountAzureLinkArrayInput
	// Name of Azure cloud account.
	Name pulumi.StringPtrInput
	// ID of organization that entity belongs to.
	OrgId pulumi.StringPtrInput
	// Email of entity owner.
	Owner pulumi.StringPtrInput
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayInput
	// Azure Subscription ID.
	SubscriptionId pulumi.StringPtrInput
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags CloudAccountAzureTagArrayInput
	// Azure Tenant ID.
	TenantId pulumi.StringPtrInput
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
}

func (CloudAccountAzureState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccountAzureState)(nil)).Elem()
}

type cloudAccountAzureArgs struct {
	// Azure Client Application ID.
	ApplicationId string `pulumi:"applicationId"`
	// Azure Client Application Secret Key.
	ApplicationKey string `pulumi:"applicationKey"`
	// Human-friendly description.
	Description *string `pulumi:"description"`
	// Name of Azure cloud account.
	Name *string `pulumi:"name"`
	// Set of region names enabled for the cloud account.
	Regions []string `pulumi:"regions"`
	// Azure Subscription ID.
	SubscriptionId string `pulumi:"subscriptionId"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []CloudAccountAzureTag `pulumi:"tags"`
	// Azure Tenant ID.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a CloudAccountAzure resource.
type CloudAccountAzureArgs struct {
	// Azure Client Application ID.
	ApplicationId pulumi.StringInput
	// Azure Client Application Secret Key.
	ApplicationKey pulumi.StringInput
	// Human-friendly description.
	Description pulumi.StringPtrInput
	// Name of Azure cloud account.
	Name pulumi.StringPtrInput
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayInput
	// Azure Subscription ID.
	SubscriptionId pulumi.StringInput
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags CloudAccountAzureTagArrayInput
	// Azure Tenant ID.
	TenantId pulumi.StringInput
}

func (CloudAccountAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccountAzureArgs)(nil)).Elem()
}

type CloudAccountAzureInput interface {
	pulumi.Input

	ToCloudAccountAzureOutput() CloudAccountAzureOutput
	ToCloudAccountAzureOutputWithContext(ctx context.Context) CloudAccountAzureOutput
}

func (*CloudAccountAzure) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountAzure)(nil)).Elem()
}

func (i *CloudAccountAzure) ToCloudAccountAzureOutput() CloudAccountAzureOutput {
	return i.ToCloudAccountAzureOutputWithContext(context.Background())
}

func (i *CloudAccountAzure) ToCloudAccountAzureOutputWithContext(ctx context.Context) CloudAccountAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAzureOutput)
}

// CloudAccountAzureArrayInput is an input type that accepts CloudAccountAzureArray and CloudAccountAzureArrayOutput values.
// You can construct a concrete instance of `CloudAccountAzureArrayInput` via:
//
//	CloudAccountAzureArray{ CloudAccountAzureArgs{...} }
type CloudAccountAzureArrayInput interface {
	pulumi.Input

	ToCloudAccountAzureArrayOutput() CloudAccountAzureArrayOutput
	ToCloudAccountAzureArrayOutputWithContext(context.Context) CloudAccountAzureArrayOutput
}

type CloudAccountAzureArray []CloudAccountAzureInput

func (CloudAccountAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccountAzure)(nil)).Elem()
}

func (i CloudAccountAzureArray) ToCloudAccountAzureArrayOutput() CloudAccountAzureArrayOutput {
	return i.ToCloudAccountAzureArrayOutputWithContext(context.Background())
}

func (i CloudAccountAzureArray) ToCloudAccountAzureArrayOutputWithContext(ctx context.Context) CloudAccountAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAzureArrayOutput)
}

// CloudAccountAzureMapInput is an input type that accepts CloudAccountAzureMap and CloudAccountAzureMapOutput values.
// You can construct a concrete instance of `CloudAccountAzureMapInput` via:
//
//	CloudAccountAzureMap{ "key": CloudAccountAzureArgs{...} }
type CloudAccountAzureMapInput interface {
	pulumi.Input

	ToCloudAccountAzureMapOutput() CloudAccountAzureMapOutput
	ToCloudAccountAzureMapOutputWithContext(context.Context) CloudAccountAzureMapOutput
}

type CloudAccountAzureMap map[string]CloudAccountAzureInput

func (CloudAccountAzureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccountAzure)(nil)).Elem()
}

func (i CloudAccountAzureMap) ToCloudAccountAzureMapOutput() CloudAccountAzureMapOutput {
	return i.ToCloudAccountAzureMapOutputWithContext(context.Background())
}

func (i CloudAccountAzureMap) ToCloudAccountAzureMapOutputWithContext(ctx context.Context) CloudAccountAzureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountAzureMapOutput)
}

type CloudAccountAzureOutput struct{ *pulumi.OutputState }

func (CloudAccountAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccountAzure)(nil)).Elem()
}

func (o CloudAccountAzureOutput) ToCloudAccountAzureOutput() CloudAccountAzureOutput {
	return o
}

func (o CloudAccountAzureOutput) ToCloudAccountAzureOutputWithContext(ctx context.Context) CloudAccountAzureOutput {
	return o
}

// Azure Client Application ID.
func (o CloudAccountAzureOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Azure Client Application Secret Key.
func (o CloudAccountAzureOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringOutput { return v.ApplicationKey }).(pulumi.StringOutput)
}

// Date when entity was created. Date and time format is ISO 8601 and UTC.
func (o CloudAccountAzureOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Human-friendly description.
func (o CloudAccountAzureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// HATEOAS of entity.
func (o CloudAccountAzureOutput) Links() CloudAccountAzureLinkArrayOutput {
	return o.ApplyT(func(v *CloudAccountAzure) CloudAccountAzureLinkArrayOutput { return v.Links }).(CloudAccountAzureLinkArrayOutput)
}

// Name of Azure cloud account.
func (o CloudAccountAzureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID of organization that entity belongs to.
func (o CloudAccountAzureOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// Email of entity owner.
func (o CloudAccountAzureOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// Set of region names enabled for the cloud account.
func (o CloudAccountAzureOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringArrayOutput { return v.Regions }).(pulumi.StringArrayOutput)
}

// Azure Subscription ID.
func (o CloudAccountAzureOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Set of tag keys and values to apply to the cloud account.\
// Example:[ { "key" : "vmware", "value": "provider" } ]
func (o CloudAccountAzureOutput) Tags() CloudAccountAzureTagArrayOutput {
	return o.ApplyT(func(v *CloudAccountAzure) CloudAccountAzureTagArrayOutput { return v.Tags }).(CloudAccountAzureTagArrayOutput)
}

// Azure Tenant ID.
func (o CloudAccountAzureOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
func (o CloudAccountAzureOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccountAzure) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type CloudAccountAzureArrayOutput struct{ *pulumi.OutputState }

func (CloudAccountAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccountAzure)(nil)).Elem()
}

func (o CloudAccountAzureArrayOutput) ToCloudAccountAzureArrayOutput() CloudAccountAzureArrayOutput {
	return o
}

func (o CloudAccountAzureArrayOutput) ToCloudAccountAzureArrayOutputWithContext(ctx context.Context) CloudAccountAzureArrayOutput {
	return o
}

func (o CloudAccountAzureArrayOutput) Index(i pulumi.IntInput) CloudAccountAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudAccountAzure {
		return vs[0].([]*CloudAccountAzure)[vs[1].(int)]
	}).(CloudAccountAzureOutput)
}

type CloudAccountAzureMapOutput struct{ *pulumi.OutputState }

func (CloudAccountAzureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccountAzure)(nil)).Elem()
}

func (o CloudAccountAzureMapOutput) ToCloudAccountAzureMapOutput() CloudAccountAzureMapOutput {
	return o
}

func (o CloudAccountAzureMapOutput) ToCloudAccountAzureMapOutputWithContext(ctx context.Context) CloudAccountAzureMapOutput {
	return o
}

func (o CloudAccountAzureMapOutput) MapIndex(k pulumi.StringInput) CloudAccountAzureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudAccountAzure {
		return vs[0].(map[string]*CloudAccountAzure)[vs[1].(string)]
	}).(CloudAccountAzureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAzureInput)(nil)).Elem(), &CloudAccountAzure{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAzureArrayInput)(nil)).Elem(), CloudAccountAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountAzureMapInput)(nil)).Elem(), CloudAccountAzureMap{})
	pulumi.RegisterOutputType(CloudAccountAzureOutput{})
	pulumi.RegisterOutputType(CloudAccountAzureArrayOutput{})
	pulumi.RegisterOutputType(CloudAccountAzureMapOutput{})
}
