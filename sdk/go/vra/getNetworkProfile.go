// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### S
// This is an example of how to create a network profile resource.
//
// **Network profile data source by its id:**
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.LookupNetworkProfile(ctx, &GetNetworkProfileArgs{
//				Filter: pulumi.StringRef(fmt.Sprintf("name eq '%v'", vra_network_profile.This.Name)),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// **Vra network profile data source filter by region id:**
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.LookupNetworkProfile(ctx, &GetNetworkProfileArgs{
//				Filter: pulumi.StringRef(fmt.Sprintf("regionId eq '%v'", data.Vra_region.This.Id)),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// A network profile data source supports the following arguments:
func LookupNetworkProfile(ctx *pulumi.Context, args *LookupNetworkProfileArgs, opts ...pulumi.InvokeOption) (*LookupNetworkProfileResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupNetworkProfileResult
	err := ctx.Invoke("vra:index/getNetworkProfile:getNetworkProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkProfile.
type LookupNetworkProfileArgs struct {
	// Filter query string that is supported by vRA multi-cloud IaaS API. Example: regionId eq '<regionId>' and cloudAccountId eq '<cloudAccountId>'.
	Filter *string `pulumi:"filter"`
	// The id of the image profile instance.
	Id *string `pulumi:"id"`
	// The Id of the fabric network used for outbound access.
	IsolatedExternalFabricNetworkId *string `pulumi:"isolatedExternalFabricNetworkId"`
	// The Id of the network domain used for creating isolated networks.
	IsolatedNetworkDomainId *string `pulumi:"isolatedNetworkDomainId"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []GetNetworkProfileTag `pulumi:"tags"`
}

// A collection of values returned by getNetworkProfile.
type LookupNetworkProfileResult struct {
	// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// A human-friendly description.
	Description string `pulumi:"description"`
	// The external regionId of the resource.
	ExternalRegionId string `pulumi:"externalRegionId"`
	// A list of fabric network Ids which are assigned to the network profile.
	// example:[ "6543" ]
	FabricNetworkIds                []string `pulumi:"fabricNetworkIds"`
	Filter                          *string  `pulumi:"filter"`
	Id                              string   `pulumi:"id"`
	IsolatedExternalFabricNetworkId *string  `pulumi:"isolatedExternalFabricNetworkId"`
	// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
	IsolatedNetworkCidrPrefix int `pulumi:"isolatedNetworkCidrPrefix"`
	// CIDR of the isolation network domain.
	IsolatedNetworkDomainCidr string  `pulumi:"isolatedNetworkDomainCidr"`
	IsolatedNetworkDomainId   *string `pulumi:"isolatedNetworkDomainId"`
	// Specifies the isolation type e.g. none, subnet or security group
	IsolationType string `pulumi:"isolationType"`
	// HATEOAS of the entity
	Links []GetNetworkProfileLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name string `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrganizationId string `pulumi:"organizationId"`
	// Email of the user that owns the entity.
	Owner string `pulumi:"owner"`
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId string `pulumi:"regionId"`
	// A list of security group Ids which are assigned to the network profile.
	// example:[ "6545" ]
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []GetNetworkProfileTag `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupNetworkProfileOutput(ctx *pulumi.Context, args LookupNetworkProfileOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkProfileResult, error) {
			args := v.(LookupNetworkProfileArgs)
			r, err := LookupNetworkProfile(ctx, &args, opts...)
			var s LookupNetworkProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetworkProfileResultOutput)
}

// A collection of arguments for invoking getNetworkProfile.
type LookupNetworkProfileOutputArgs struct {
	// Filter query string that is supported by vRA multi-cloud IaaS API. Example: regionId eq '<regionId>' and cloudAccountId eq '<cloudAccountId>'.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The id of the image profile instance.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Id of the fabric network used for outbound access.
	IsolatedExternalFabricNetworkId pulumi.StringPtrInput `pulumi:"isolatedExternalFabricNetworkId"`
	// The Id of the network domain used for creating isolated networks.
	IsolatedNetworkDomainId pulumi.StringPtrInput `pulumi:"isolatedNetworkDomainId"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags GetNetworkProfileTagArrayInput `pulumi:"tags"`
}

func (LookupNetworkProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkProfileArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkProfile.
type LookupNetworkProfileResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkProfileResult)(nil)).Elem()
}

func (o LookupNetworkProfileResultOutput) ToLookupNetworkProfileResultOutput() LookupNetworkProfileResultOutput {
	return o
}

func (o LookupNetworkProfileResultOutput) ToLookupNetworkProfileResultOutputWithContext(ctx context.Context) LookupNetworkProfileResultOutput {
	return o
}

// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
func (o LookupNetworkProfileResultOutput) CustomProperties() pulumi.MapOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) map[string]interface{} { return v.CustomProperties }).(pulumi.MapOutput)
}

// A human-friendly description.
func (o LookupNetworkProfileResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) string { return v.Description }).(pulumi.StringOutput)
}

// The external regionId of the resource.
func (o LookupNetworkProfileResultOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) string { return v.ExternalRegionId }).(pulumi.StringOutput)
}

// A list of fabric network Ids which are assigned to the network profile.
// example:[ "6543" ]
func (o LookupNetworkProfileResultOutput) FabricNetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) []string { return v.FabricNetworkIds }).(pulumi.StringArrayOutput)
}

func (o LookupNetworkProfileResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LookupNetworkProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNetworkProfileResultOutput) IsolatedExternalFabricNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *string { return v.IsolatedExternalFabricNetworkId }).(pulumi.StringPtrOutput)
}

// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
func (o LookupNetworkProfileResultOutput) IsolatedNetworkCidrPrefix() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) int { return v.IsolatedNetworkCidrPrefix }).(pulumi.IntOutput)
}

// CIDR of the isolation network domain.
func (o LookupNetworkProfileResultOutput) IsolatedNetworkDomainCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) string { return v.IsolatedNetworkDomainCidr }).(pulumi.StringOutput)
}

func (o LookupNetworkProfileResultOutput) IsolatedNetworkDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *string { return v.IsolatedNetworkDomainId }).(pulumi.StringPtrOutput)
}

// Specifies the isolation type e.g. none, subnet or security group
func (o LookupNetworkProfileResultOutput) IsolationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) string { return v.IsolationType }).(pulumi.StringOutput)
}

// HATEOAS of the entity
func (o LookupNetworkProfileResultOutput) Links() GetNetworkProfileLinkArrayOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) []GetNetworkProfileLink { return v.Links }).(GetNetworkProfileLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o LookupNetworkProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o LookupNetworkProfileResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o LookupNetworkProfileResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) string { return v.Owner }).(pulumi.StringOutput)
}

// The id of the region for which this profile is defined as in vRealize Automation(vRA).
func (o LookupNetworkProfileResultOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) string { return v.RegionId }).(pulumi.StringOutput)
}

// A list of security group Ids which are assigned to the network profile.
// example:[ "6545" ]
func (o LookupNetworkProfileResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A set of tag keys and optional values that were set on this Network Profile.
// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
func (o LookupNetworkProfileResultOutput) Tags() GetNetworkProfileTagArrayOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) []GetNetworkProfileTag { return v.Tags }).(GetNetworkProfileTagArrayOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o LookupNetworkProfileResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkProfileResultOutput{})
}
