// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storageprofile

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AwsLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// AwsLinkInput is an input type that accepts AwsLinkArgs and AwsLinkOutput values.
// You can construct a concrete instance of `AwsLinkInput` via:
//
//          AwsLinkArgs{...}
type AwsLinkInput interface {
	pulumi.Input

	ToAwsLinkOutput() AwsLinkOutput
	ToAwsLinkOutputWithContext(context.Context) AwsLinkOutput
}

type AwsLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (AwsLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsLink)(nil)).Elem()
}

func (i AwsLinkArgs) ToAwsLinkOutput() AwsLinkOutput {
	return i.ToAwsLinkOutputWithContext(context.Background())
}

func (i AwsLinkArgs) ToAwsLinkOutputWithContext(ctx context.Context) AwsLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLinkOutput)
}

// AwsLinkArrayInput is an input type that accepts AwsLinkArray and AwsLinkArrayOutput values.
// You can construct a concrete instance of `AwsLinkArrayInput` via:
//
//          AwsLinkArray{ AwsLinkArgs{...} }
type AwsLinkArrayInput interface {
	pulumi.Input

	ToAwsLinkArrayOutput() AwsLinkArrayOutput
	ToAwsLinkArrayOutputWithContext(context.Context) AwsLinkArrayOutput
}

type AwsLinkArray []AwsLinkInput

func (AwsLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsLink)(nil)).Elem()
}

func (i AwsLinkArray) ToAwsLinkArrayOutput() AwsLinkArrayOutput {
	return i.ToAwsLinkArrayOutputWithContext(context.Background())
}

func (i AwsLinkArray) ToAwsLinkArrayOutputWithContext(ctx context.Context) AwsLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLinkArrayOutput)
}

type AwsLinkOutput struct{ *pulumi.OutputState }

func (AwsLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsLink)(nil)).Elem()
}

func (o AwsLinkOutput) ToAwsLinkOutput() AwsLinkOutput {
	return o
}

func (o AwsLinkOutput) ToAwsLinkOutputWithContext(ctx context.Context) AwsLinkOutput {
	return o
}

func (o AwsLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o AwsLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o AwsLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v AwsLink) string { return v.Rel }).(pulumi.StringOutput)
}

type AwsLinkArrayOutput struct{ *pulumi.OutputState }

func (AwsLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsLink)(nil)).Elem()
}

func (o AwsLinkArrayOutput) ToAwsLinkArrayOutput() AwsLinkArrayOutput {
	return o
}

func (o AwsLinkArrayOutput) ToAwsLinkArrayOutputWithContext(ctx context.Context) AwsLinkArrayOutput {
	return o
}

func (o AwsLinkArrayOutput) Index(i pulumi.IntInput) AwsLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsLink {
		return vs[0].([]AwsLink)[vs[1].(int)]
	}).(AwsLinkOutput)
}

type AwsTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// AwsTagInput is an input type that accepts AwsTagArgs and AwsTagOutput values.
// You can construct a concrete instance of `AwsTagInput` via:
//
//          AwsTagArgs{...}
type AwsTagInput interface {
	pulumi.Input

	ToAwsTagOutput() AwsTagOutput
	ToAwsTagOutputWithContext(context.Context) AwsTagOutput
}

type AwsTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AwsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsTag)(nil)).Elem()
}

func (i AwsTagArgs) ToAwsTagOutput() AwsTagOutput {
	return i.ToAwsTagOutputWithContext(context.Background())
}

func (i AwsTagArgs) ToAwsTagOutputWithContext(ctx context.Context) AwsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsTagOutput)
}

// AwsTagArrayInput is an input type that accepts AwsTagArray and AwsTagArrayOutput values.
// You can construct a concrete instance of `AwsTagArrayInput` via:
//
//          AwsTagArray{ AwsTagArgs{...} }
type AwsTagArrayInput interface {
	pulumi.Input

	ToAwsTagArrayOutput() AwsTagArrayOutput
	ToAwsTagArrayOutputWithContext(context.Context) AwsTagArrayOutput
}

type AwsTagArray []AwsTagInput

func (AwsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsTag)(nil)).Elem()
}

func (i AwsTagArray) ToAwsTagArrayOutput() AwsTagArrayOutput {
	return i.ToAwsTagArrayOutputWithContext(context.Background())
}

func (i AwsTagArray) ToAwsTagArrayOutputWithContext(ctx context.Context) AwsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsTagArrayOutput)
}

type AwsTagOutput struct{ *pulumi.OutputState }

func (AwsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsTag)(nil)).Elem()
}

func (o AwsTagOutput) ToAwsTagOutput() AwsTagOutput {
	return o
}

func (o AwsTagOutput) ToAwsTagOutputWithContext(ctx context.Context) AwsTagOutput {
	return o
}

func (o AwsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AwsTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o AwsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AwsTag) string { return v.Value }).(pulumi.StringOutput)
}

type AwsTagArrayOutput struct{ *pulumi.OutputState }

func (AwsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsTag)(nil)).Elem()
}

func (o AwsTagArrayOutput) ToAwsTagArrayOutput() AwsTagArrayOutput {
	return o
}

func (o AwsTagArrayOutput) ToAwsTagArrayOutputWithContext(ctx context.Context) AwsTagArrayOutput {
	return o
}

func (o AwsTagArrayOutput) Index(i pulumi.IntInput) AwsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsTag {
		return vs[0].([]AwsTag)[vs[1].(int)]
	}).(AwsTagOutput)
}

type AzureLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// AzureLinkInput is an input type that accepts AzureLinkArgs and AzureLinkOutput values.
// You can construct a concrete instance of `AzureLinkInput` via:
//
//          AzureLinkArgs{...}
type AzureLinkInput interface {
	pulumi.Input

	ToAzureLinkOutput() AzureLinkOutput
	ToAzureLinkOutputWithContext(context.Context) AzureLinkOutput
}

type AzureLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (AzureLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureLink)(nil)).Elem()
}

func (i AzureLinkArgs) ToAzureLinkOutput() AzureLinkOutput {
	return i.ToAzureLinkOutputWithContext(context.Background())
}

func (i AzureLinkArgs) ToAzureLinkOutputWithContext(ctx context.Context) AzureLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureLinkOutput)
}

// AzureLinkArrayInput is an input type that accepts AzureLinkArray and AzureLinkArrayOutput values.
// You can construct a concrete instance of `AzureLinkArrayInput` via:
//
//          AzureLinkArray{ AzureLinkArgs{...} }
type AzureLinkArrayInput interface {
	pulumi.Input

	ToAzureLinkArrayOutput() AzureLinkArrayOutput
	ToAzureLinkArrayOutputWithContext(context.Context) AzureLinkArrayOutput
}

type AzureLinkArray []AzureLinkInput

func (AzureLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureLink)(nil)).Elem()
}

func (i AzureLinkArray) ToAzureLinkArrayOutput() AzureLinkArrayOutput {
	return i.ToAzureLinkArrayOutputWithContext(context.Background())
}

func (i AzureLinkArray) ToAzureLinkArrayOutputWithContext(ctx context.Context) AzureLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureLinkArrayOutput)
}

type AzureLinkOutput struct{ *pulumi.OutputState }

func (AzureLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureLink)(nil)).Elem()
}

func (o AzureLinkOutput) ToAzureLinkOutput() AzureLinkOutput {
	return o
}

func (o AzureLinkOutput) ToAzureLinkOutputWithContext(ctx context.Context) AzureLinkOutput {
	return o
}

func (o AzureLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o AzureLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o AzureLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v AzureLink) string { return v.Rel }).(pulumi.StringOutput)
}

type AzureLinkArrayOutput struct{ *pulumi.OutputState }

func (AzureLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureLink)(nil)).Elem()
}

func (o AzureLinkArrayOutput) ToAzureLinkArrayOutput() AzureLinkArrayOutput {
	return o
}

func (o AzureLinkArrayOutput) ToAzureLinkArrayOutputWithContext(ctx context.Context) AzureLinkArrayOutput {
	return o
}

func (o AzureLinkArrayOutput) Index(i pulumi.IntInput) AzureLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureLink {
		return vs[0].([]AzureLink)[vs[1].(int)]
	}).(AzureLinkOutput)
}

type AzureTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// AzureTagInput is an input type that accepts AzureTagArgs and AzureTagOutput values.
// You can construct a concrete instance of `AzureTagInput` via:
//
//          AzureTagArgs{...}
type AzureTagInput interface {
	pulumi.Input

	ToAzureTagOutput() AzureTagOutput
	ToAzureTagOutputWithContext(context.Context) AzureTagOutput
}

type AzureTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AzureTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTag)(nil)).Elem()
}

func (i AzureTagArgs) ToAzureTagOutput() AzureTagOutput {
	return i.ToAzureTagOutputWithContext(context.Background())
}

func (i AzureTagArgs) ToAzureTagOutputWithContext(ctx context.Context) AzureTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTagOutput)
}

// AzureTagArrayInput is an input type that accepts AzureTagArray and AzureTagArrayOutput values.
// You can construct a concrete instance of `AzureTagArrayInput` via:
//
//          AzureTagArray{ AzureTagArgs{...} }
type AzureTagArrayInput interface {
	pulumi.Input

	ToAzureTagArrayOutput() AzureTagArrayOutput
	ToAzureTagArrayOutputWithContext(context.Context) AzureTagArrayOutput
}

type AzureTagArray []AzureTagInput

func (AzureTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureTag)(nil)).Elem()
}

func (i AzureTagArray) ToAzureTagArrayOutput() AzureTagArrayOutput {
	return i.ToAzureTagArrayOutputWithContext(context.Background())
}

func (i AzureTagArray) ToAzureTagArrayOutputWithContext(ctx context.Context) AzureTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTagArrayOutput)
}

type AzureTagOutput struct{ *pulumi.OutputState }

func (AzureTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTag)(nil)).Elem()
}

func (o AzureTagOutput) ToAzureTagOutput() AzureTagOutput {
	return o
}

func (o AzureTagOutput) ToAzureTagOutputWithContext(ctx context.Context) AzureTagOutput {
	return o
}

func (o AzureTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o AzureTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTag) string { return v.Value }).(pulumi.StringOutput)
}

type AzureTagArrayOutput struct{ *pulumi.OutputState }

func (AzureTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureTag)(nil)).Elem()
}

func (o AzureTagArrayOutput) ToAzureTagArrayOutput() AzureTagArrayOutput {
	return o
}

func (o AzureTagArrayOutput) ToAzureTagArrayOutputWithContext(ctx context.Context) AzureTagArrayOutput {
	return o
}

func (o AzureTagArrayOutput) Index(i pulumi.IntInput) AzureTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureTag {
		return vs[0].([]AzureTag)[vs[1].(int)]
	}).(AzureTagOutput)
}

type StorageProfileLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// StorageProfileLinkInput is an input type that accepts StorageProfileLinkArgs and StorageProfileLinkOutput values.
// You can construct a concrete instance of `StorageProfileLinkInput` via:
//
//          StorageProfileLinkArgs{...}
type StorageProfileLinkInput interface {
	pulumi.Input

	ToStorageProfileLinkOutput() StorageProfileLinkOutput
	ToStorageProfileLinkOutputWithContext(context.Context) StorageProfileLinkOutput
}

type StorageProfileLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (StorageProfileLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileLink)(nil)).Elem()
}

func (i StorageProfileLinkArgs) ToStorageProfileLinkOutput() StorageProfileLinkOutput {
	return i.ToStorageProfileLinkOutputWithContext(context.Background())
}

func (i StorageProfileLinkArgs) ToStorageProfileLinkOutputWithContext(ctx context.Context) StorageProfileLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileLinkOutput)
}

// StorageProfileLinkArrayInput is an input type that accepts StorageProfileLinkArray and StorageProfileLinkArrayOutput values.
// You can construct a concrete instance of `StorageProfileLinkArrayInput` via:
//
//          StorageProfileLinkArray{ StorageProfileLinkArgs{...} }
type StorageProfileLinkArrayInput interface {
	pulumi.Input

	ToStorageProfileLinkArrayOutput() StorageProfileLinkArrayOutput
	ToStorageProfileLinkArrayOutputWithContext(context.Context) StorageProfileLinkArrayOutput
}

type StorageProfileLinkArray []StorageProfileLinkInput

func (StorageProfileLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageProfileLink)(nil)).Elem()
}

func (i StorageProfileLinkArray) ToStorageProfileLinkArrayOutput() StorageProfileLinkArrayOutput {
	return i.ToStorageProfileLinkArrayOutputWithContext(context.Background())
}

func (i StorageProfileLinkArray) ToStorageProfileLinkArrayOutputWithContext(ctx context.Context) StorageProfileLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileLinkArrayOutput)
}

type StorageProfileLinkOutput struct{ *pulumi.OutputState }

func (StorageProfileLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileLink)(nil)).Elem()
}

func (o StorageProfileLinkOutput) ToStorageProfileLinkOutput() StorageProfileLinkOutput {
	return o
}

func (o StorageProfileLinkOutput) ToStorageProfileLinkOutputWithContext(ctx context.Context) StorageProfileLinkOutput {
	return o
}

func (o StorageProfileLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfileLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o StorageProfileLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageProfileLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o StorageProfileLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v StorageProfileLink) string { return v.Rel }).(pulumi.StringOutput)
}

type StorageProfileLinkArrayOutput struct{ *pulumi.OutputState }

func (StorageProfileLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageProfileLink)(nil)).Elem()
}

func (o StorageProfileLinkArrayOutput) ToStorageProfileLinkArrayOutput() StorageProfileLinkArrayOutput {
	return o
}

func (o StorageProfileLinkArrayOutput) ToStorageProfileLinkArrayOutputWithContext(ctx context.Context) StorageProfileLinkArrayOutput {
	return o
}

func (o StorageProfileLinkArrayOutput) Index(i pulumi.IntInput) StorageProfileLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageProfileLink {
		return vs[0].([]StorageProfileLink)[vs[1].(int)]
	}).(StorageProfileLinkOutput)
}

type StorageProfileTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// StorageProfileTagInput is an input type that accepts StorageProfileTagArgs and StorageProfileTagOutput values.
// You can construct a concrete instance of `StorageProfileTagInput` via:
//
//          StorageProfileTagArgs{...}
type StorageProfileTagInput interface {
	pulumi.Input

	ToStorageProfileTagOutput() StorageProfileTagOutput
	ToStorageProfileTagOutputWithContext(context.Context) StorageProfileTagOutput
}

type StorageProfileTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (StorageProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileTag)(nil)).Elem()
}

func (i StorageProfileTagArgs) ToStorageProfileTagOutput() StorageProfileTagOutput {
	return i.ToStorageProfileTagOutputWithContext(context.Background())
}

func (i StorageProfileTagArgs) ToStorageProfileTagOutputWithContext(ctx context.Context) StorageProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileTagOutput)
}

// StorageProfileTagArrayInput is an input type that accepts StorageProfileTagArray and StorageProfileTagArrayOutput values.
// You can construct a concrete instance of `StorageProfileTagArrayInput` via:
//
//          StorageProfileTagArray{ StorageProfileTagArgs{...} }
type StorageProfileTagArrayInput interface {
	pulumi.Input

	ToStorageProfileTagArrayOutput() StorageProfileTagArrayOutput
	ToStorageProfileTagArrayOutputWithContext(context.Context) StorageProfileTagArrayOutput
}

type StorageProfileTagArray []StorageProfileTagInput

func (StorageProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageProfileTag)(nil)).Elem()
}

func (i StorageProfileTagArray) ToStorageProfileTagArrayOutput() StorageProfileTagArrayOutput {
	return i.ToStorageProfileTagArrayOutputWithContext(context.Background())
}

func (i StorageProfileTagArray) ToStorageProfileTagArrayOutputWithContext(ctx context.Context) StorageProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileTagArrayOutput)
}

type StorageProfileTagOutput struct{ *pulumi.OutputState }

func (StorageProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileTag)(nil)).Elem()
}

func (o StorageProfileTagOutput) ToStorageProfileTagOutput() StorageProfileTagOutput {
	return o
}

func (o StorageProfileTagOutput) ToStorageProfileTagOutputWithContext(ctx context.Context) StorageProfileTagOutput {
	return o
}

func (o StorageProfileTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StorageProfileTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o StorageProfileTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StorageProfileTag) string { return v.Value }).(pulumi.StringOutput)
}

type StorageProfileTagArrayOutput struct{ *pulumi.OutputState }

func (StorageProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageProfileTag)(nil)).Elem()
}

func (o StorageProfileTagArrayOutput) ToStorageProfileTagArrayOutput() StorageProfileTagArrayOutput {
	return o
}

func (o StorageProfileTagArrayOutput) ToStorageProfileTagArrayOutputWithContext(ctx context.Context) StorageProfileTagArrayOutput {
	return o
}

func (o StorageProfileTagArrayOutput) Index(i pulumi.IntInput) StorageProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageProfileTag {
		return vs[0].([]StorageProfileTag)[vs[1].(int)]
	}).(StorageProfileTagOutput)
}

type VSphereLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// VSphereLinkInput is an input type that accepts VSphereLinkArgs and VSphereLinkOutput values.
// You can construct a concrete instance of `VSphereLinkInput` via:
//
//          VSphereLinkArgs{...}
type VSphereLinkInput interface {
	pulumi.Input

	ToVSphereLinkOutput() VSphereLinkOutput
	ToVSphereLinkOutputWithContext(context.Context) VSphereLinkOutput
}

type VSphereLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (VSphereLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VSphereLink)(nil)).Elem()
}

func (i VSphereLinkArgs) ToVSphereLinkOutput() VSphereLinkOutput {
	return i.ToVSphereLinkOutputWithContext(context.Background())
}

func (i VSphereLinkArgs) ToVSphereLinkOutputWithContext(ctx context.Context) VSphereLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VSphereLinkOutput)
}

// VSphereLinkArrayInput is an input type that accepts VSphereLinkArray and VSphereLinkArrayOutput values.
// You can construct a concrete instance of `VSphereLinkArrayInput` via:
//
//          VSphereLinkArray{ VSphereLinkArgs{...} }
type VSphereLinkArrayInput interface {
	pulumi.Input

	ToVSphereLinkArrayOutput() VSphereLinkArrayOutput
	ToVSphereLinkArrayOutputWithContext(context.Context) VSphereLinkArrayOutput
}

type VSphereLinkArray []VSphereLinkInput

func (VSphereLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VSphereLink)(nil)).Elem()
}

func (i VSphereLinkArray) ToVSphereLinkArrayOutput() VSphereLinkArrayOutput {
	return i.ToVSphereLinkArrayOutputWithContext(context.Background())
}

func (i VSphereLinkArray) ToVSphereLinkArrayOutputWithContext(ctx context.Context) VSphereLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VSphereLinkArrayOutput)
}

type VSphereLinkOutput struct{ *pulumi.OutputState }

func (VSphereLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VSphereLink)(nil)).Elem()
}

func (o VSphereLinkOutput) ToVSphereLinkOutput() VSphereLinkOutput {
	return o
}

func (o VSphereLinkOutput) ToVSphereLinkOutputWithContext(ctx context.Context) VSphereLinkOutput {
	return o
}

func (o VSphereLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VSphereLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o VSphereLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VSphereLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o VSphereLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v VSphereLink) string { return v.Rel }).(pulumi.StringOutput)
}

type VSphereLinkArrayOutput struct{ *pulumi.OutputState }

func (VSphereLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VSphereLink)(nil)).Elem()
}

func (o VSphereLinkArrayOutput) ToVSphereLinkArrayOutput() VSphereLinkArrayOutput {
	return o
}

func (o VSphereLinkArrayOutput) ToVSphereLinkArrayOutputWithContext(ctx context.Context) VSphereLinkArrayOutput {
	return o
}

func (o VSphereLinkArrayOutput) Index(i pulumi.IntInput) VSphereLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VSphereLink {
		return vs[0].([]VSphereLink)[vs[1].(int)]
	}).(VSphereLinkOutput)
}

type VSphereTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// VSphereTagInput is an input type that accepts VSphereTagArgs and VSphereTagOutput values.
// You can construct a concrete instance of `VSphereTagInput` via:
//
//          VSphereTagArgs{...}
type VSphereTagInput interface {
	pulumi.Input

	ToVSphereTagOutput() VSphereTagOutput
	ToVSphereTagOutputWithContext(context.Context) VSphereTagOutput
}

type VSphereTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (VSphereTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VSphereTag)(nil)).Elem()
}

func (i VSphereTagArgs) ToVSphereTagOutput() VSphereTagOutput {
	return i.ToVSphereTagOutputWithContext(context.Background())
}

func (i VSphereTagArgs) ToVSphereTagOutputWithContext(ctx context.Context) VSphereTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VSphereTagOutput)
}

// VSphereTagArrayInput is an input type that accepts VSphereTagArray and VSphereTagArrayOutput values.
// You can construct a concrete instance of `VSphereTagArrayInput` via:
//
//          VSphereTagArray{ VSphereTagArgs{...} }
type VSphereTagArrayInput interface {
	pulumi.Input

	ToVSphereTagArrayOutput() VSphereTagArrayOutput
	ToVSphereTagArrayOutputWithContext(context.Context) VSphereTagArrayOutput
}

type VSphereTagArray []VSphereTagInput

func (VSphereTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VSphereTag)(nil)).Elem()
}

func (i VSphereTagArray) ToVSphereTagArrayOutput() VSphereTagArrayOutput {
	return i.ToVSphereTagArrayOutputWithContext(context.Background())
}

func (i VSphereTagArray) ToVSphereTagArrayOutputWithContext(ctx context.Context) VSphereTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VSphereTagArrayOutput)
}

type VSphereTagOutput struct{ *pulumi.OutputState }

func (VSphereTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VSphereTag)(nil)).Elem()
}

func (o VSphereTagOutput) ToVSphereTagOutput() VSphereTagOutput {
	return o
}

func (o VSphereTagOutput) ToVSphereTagOutputWithContext(ctx context.Context) VSphereTagOutput {
	return o
}

func (o VSphereTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VSphereTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o VSphereTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VSphereTag) string { return v.Value }).(pulumi.StringOutput)
}

type VSphereTagArrayOutput struct{ *pulumi.OutputState }

func (VSphereTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VSphereTag)(nil)).Elem()
}

func (o VSphereTagArrayOutput) ToVSphereTagArrayOutput() VSphereTagArrayOutput {
	return o
}

func (o VSphereTagArrayOutput) ToVSphereTagArrayOutputWithContext(ctx context.Context) VSphereTagArrayOutput {
	return o
}

func (o VSphereTagArrayOutput) Index(i pulumi.IntInput) VSphereTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VSphereTag {
		return vs[0].([]VSphereTag)[vs[1].(int)]
	}).(VSphereTagOutput)
}

type GetAwsLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetAwsLinkInput is an input type that accepts GetAwsLinkArgs and GetAwsLinkOutput values.
// You can construct a concrete instance of `GetAwsLinkInput` via:
//
//          GetAwsLinkArgs{...}
type GetAwsLinkInput interface {
	pulumi.Input

	ToGetAwsLinkOutput() GetAwsLinkOutput
	ToGetAwsLinkOutputWithContext(context.Context) GetAwsLinkOutput
}

type GetAwsLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetAwsLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsLink)(nil)).Elem()
}

func (i GetAwsLinkArgs) ToGetAwsLinkOutput() GetAwsLinkOutput {
	return i.ToGetAwsLinkOutputWithContext(context.Background())
}

func (i GetAwsLinkArgs) ToGetAwsLinkOutputWithContext(ctx context.Context) GetAwsLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsLinkOutput)
}

// GetAwsLinkArrayInput is an input type that accepts GetAwsLinkArray and GetAwsLinkArrayOutput values.
// You can construct a concrete instance of `GetAwsLinkArrayInput` via:
//
//          GetAwsLinkArray{ GetAwsLinkArgs{...} }
type GetAwsLinkArrayInput interface {
	pulumi.Input

	ToGetAwsLinkArrayOutput() GetAwsLinkArrayOutput
	ToGetAwsLinkArrayOutputWithContext(context.Context) GetAwsLinkArrayOutput
}

type GetAwsLinkArray []GetAwsLinkInput

func (GetAwsLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsLink)(nil)).Elem()
}

func (i GetAwsLinkArray) ToGetAwsLinkArrayOutput() GetAwsLinkArrayOutput {
	return i.ToGetAwsLinkArrayOutputWithContext(context.Background())
}

func (i GetAwsLinkArray) ToGetAwsLinkArrayOutputWithContext(ctx context.Context) GetAwsLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsLinkArrayOutput)
}

type GetAwsLinkOutput struct{ *pulumi.OutputState }

func (GetAwsLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsLink)(nil)).Elem()
}

func (o GetAwsLinkOutput) ToGetAwsLinkOutput() GetAwsLinkOutput {
	return o
}

func (o GetAwsLinkOutput) ToGetAwsLinkOutputWithContext(ctx context.Context) GetAwsLinkOutput {
	return o
}

func (o GetAwsLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetAwsLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetAwsLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetAwsLinkArrayOutput struct{ *pulumi.OutputState }

func (GetAwsLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsLink)(nil)).Elem()
}

func (o GetAwsLinkArrayOutput) ToGetAwsLinkArrayOutput() GetAwsLinkArrayOutput {
	return o
}

func (o GetAwsLinkArrayOutput) ToGetAwsLinkArrayOutputWithContext(ctx context.Context) GetAwsLinkArrayOutput {
	return o
}

func (o GetAwsLinkArrayOutput) Index(i pulumi.IntInput) GetAwsLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsLink {
		return vs[0].([]GetAwsLink)[vs[1].(int)]
	}).(GetAwsLinkOutput)
}

type GetAwsTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GetAwsTagInput is an input type that accepts GetAwsTagArgs and GetAwsTagOutput values.
// You can construct a concrete instance of `GetAwsTagInput` via:
//
//          GetAwsTagArgs{...}
type GetAwsTagInput interface {
	pulumi.Input

	ToGetAwsTagOutput() GetAwsTagOutput
	ToGetAwsTagOutputWithContext(context.Context) GetAwsTagOutput
}

type GetAwsTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAwsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsTag)(nil)).Elem()
}

func (i GetAwsTagArgs) ToGetAwsTagOutput() GetAwsTagOutput {
	return i.ToGetAwsTagOutputWithContext(context.Background())
}

func (i GetAwsTagArgs) ToGetAwsTagOutputWithContext(ctx context.Context) GetAwsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsTagOutput)
}

// GetAwsTagArrayInput is an input type that accepts GetAwsTagArray and GetAwsTagArrayOutput values.
// You can construct a concrete instance of `GetAwsTagArrayInput` via:
//
//          GetAwsTagArray{ GetAwsTagArgs{...} }
type GetAwsTagArrayInput interface {
	pulumi.Input

	ToGetAwsTagArrayOutput() GetAwsTagArrayOutput
	ToGetAwsTagArrayOutputWithContext(context.Context) GetAwsTagArrayOutput
}

type GetAwsTagArray []GetAwsTagInput

func (GetAwsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsTag)(nil)).Elem()
}

func (i GetAwsTagArray) ToGetAwsTagArrayOutput() GetAwsTagArrayOutput {
	return i.ToGetAwsTagArrayOutputWithContext(context.Background())
}

func (i GetAwsTagArray) ToGetAwsTagArrayOutputWithContext(ctx context.Context) GetAwsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsTagArrayOutput)
}

type GetAwsTagOutput struct{ *pulumi.OutputState }

func (GetAwsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsTag)(nil)).Elem()
}

func (o GetAwsTagOutput) ToGetAwsTagOutput() GetAwsTagOutput {
	return o
}

func (o GetAwsTagOutput) ToGetAwsTagOutputWithContext(ctx context.Context) GetAwsTagOutput {
	return o
}

func (o GetAwsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetAwsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetAwsTagArrayOutput struct{ *pulumi.OutputState }

func (GetAwsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsTag)(nil)).Elem()
}

func (o GetAwsTagArrayOutput) ToGetAwsTagArrayOutput() GetAwsTagArrayOutput {
	return o
}

func (o GetAwsTagArrayOutput) ToGetAwsTagArrayOutputWithContext(ctx context.Context) GetAwsTagArrayOutput {
	return o
}

func (o GetAwsTagArrayOutput) Index(i pulumi.IntInput) GetAwsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsTag {
		return vs[0].([]GetAwsTag)[vs[1].(int)]
	}).(GetAwsTagOutput)
}

type GetAzureLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetAzureLinkInput is an input type that accepts GetAzureLinkArgs and GetAzureLinkOutput values.
// You can construct a concrete instance of `GetAzureLinkInput` via:
//
//          GetAzureLinkArgs{...}
type GetAzureLinkInput interface {
	pulumi.Input

	ToGetAzureLinkOutput() GetAzureLinkOutput
	ToGetAzureLinkOutputWithContext(context.Context) GetAzureLinkOutput
}

type GetAzureLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetAzureLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureLink)(nil)).Elem()
}

func (i GetAzureLinkArgs) ToGetAzureLinkOutput() GetAzureLinkOutput {
	return i.ToGetAzureLinkOutputWithContext(context.Background())
}

func (i GetAzureLinkArgs) ToGetAzureLinkOutputWithContext(ctx context.Context) GetAzureLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureLinkOutput)
}

// GetAzureLinkArrayInput is an input type that accepts GetAzureLinkArray and GetAzureLinkArrayOutput values.
// You can construct a concrete instance of `GetAzureLinkArrayInput` via:
//
//          GetAzureLinkArray{ GetAzureLinkArgs{...} }
type GetAzureLinkArrayInput interface {
	pulumi.Input

	ToGetAzureLinkArrayOutput() GetAzureLinkArrayOutput
	ToGetAzureLinkArrayOutputWithContext(context.Context) GetAzureLinkArrayOutput
}

type GetAzureLinkArray []GetAzureLinkInput

func (GetAzureLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureLink)(nil)).Elem()
}

func (i GetAzureLinkArray) ToGetAzureLinkArrayOutput() GetAzureLinkArrayOutput {
	return i.ToGetAzureLinkArrayOutputWithContext(context.Background())
}

func (i GetAzureLinkArray) ToGetAzureLinkArrayOutputWithContext(ctx context.Context) GetAzureLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureLinkArrayOutput)
}

type GetAzureLinkOutput struct{ *pulumi.OutputState }

func (GetAzureLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureLink)(nil)).Elem()
}

func (o GetAzureLinkOutput) ToGetAzureLinkOutput() GetAzureLinkOutput {
	return o
}

func (o GetAzureLinkOutput) ToGetAzureLinkOutputWithContext(ctx context.Context) GetAzureLinkOutput {
	return o
}

func (o GetAzureLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAzureLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetAzureLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAzureLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetAzureLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetAzureLinkArrayOutput struct{ *pulumi.OutputState }

func (GetAzureLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureLink)(nil)).Elem()
}

func (o GetAzureLinkArrayOutput) ToGetAzureLinkArrayOutput() GetAzureLinkArrayOutput {
	return o
}

func (o GetAzureLinkArrayOutput) ToGetAzureLinkArrayOutputWithContext(ctx context.Context) GetAzureLinkArrayOutput {
	return o
}

func (o GetAzureLinkArrayOutput) Index(i pulumi.IntInput) GetAzureLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureLink {
		return vs[0].([]GetAzureLink)[vs[1].(int)]
	}).(GetAzureLinkOutput)
}

type GetAzureTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GetAzureTagInput is an input type that accepts GetAzureTagArgs and GetAzureTagOutput values.
// You can construct a concrete instance of `GetAzureTagInput` via:
//
//          GetAzureTagArgs{...}
type GetAzureTagInput interface {
	pulumi.Input

	ToGetAzureTagOutput() GetAzureTagOutput
	ToGetAzureTagOutputWithContext(context.Context) GetAzureTagOutput
}

type GetAzureTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAzureTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureTag)(nil)).Elem()
}

func (i GetAzureTagArgs) ToGetAzureTagOutput() GetAzureTagOutput {
	return i.ToGetAzureTagOutputWithContext(context.Background())
}

func (i GetAzureTagArgs) ToGetAzureTagOutputWithContext(ctx context.Context) GetAzureTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureTagOutput)
}

// GetAzureTagArrayInput is an input type that accepts GetAzureTagArray and GetAzureTagArrayOutput values.
// You can construct a concrete instance of `GetAzureTagArrayInput` via:
//
//          GetAzureTagArray{ GetAzureTagArgs{...} }
type GetAzureTagArrayInput interface {
	pulumi.Input

	ToGetAzureTagArrayOutput() GetAzureTagArrayOutput
	ToGetAzureTagArrayOutputWithContext(context.Context) GetAzureTagArrayOutput
}

type GetAzureTagArray []GetAzureTagInput

func (GetAzureTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureTag)(nil)).Elem()
}

func (i GetAzureTagArray) ToGetAzureTagArrayOutput() GetAzureTagArrayOutput {
	return i.ToGetAzureTagArrayOutputWithContext(context.Background())
}

func (i GetAzureTagArray) ToGetAzureTagArrayOutputWithContext(ctx context.Context) GetAzureTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureTagArrayOutput)
}

type GetAzureTagOutput struct{ *pulumi.OutputState }

func (GetAzureTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureTag)(nil)).Elem()
}

func (o GetAzureTagOutput) ToGetAzureTagOutput() GetAzureTagOutput {
	return o
}

func (o GetAzureTagOutput) ToGetAzureTagOutputWithContext(ctx context.Context) GetAzureTagOutput {
	return o
}

func (o GetAzureTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetAzureTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetAzureTagArrayOutput struct{ *pulumi.OutputState }

func (GetAzureTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureTag)(nil)).Elem()
}

func (o GetAzureTagArrayOutput) ToGetAzureTagArrayOutput() GetAzureTagArrayOutput {
	return o
}

func (o GetAzureTagArrayOutput) ToGetAzureTagArrayOutputWithContext(ctx context.Context) GetAzureTagArrayOutput {
	return o
}

func (o GetAzureTagArrayOutput) Index(i pulumi.IntInput) GetAzureTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureTag {
		return vs[0].([]GetAzureTag)[vs[1].(int)]
	}).(GetAzureTagOutput)
}

type GetStorageProfileLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetStorageProfileLinkInput is an input type that accepts GetStorageProfileLinkArgs and GetStorageProfileLinkOutput values.
// You can construct a concrete instance of `GetStorageProfileLinkInput` via:
//
//          GetStorageProfileLinkArgs{...}
type GetStorageProfileLinkInput interface {
	pulumi.Input

	ToGetStorageProfileLinkOutput() GetStorageProfileLinkOutput
	ToGetStorageProfileLinkOutputWithContext(context.Context) GetStorageProfileLinkOutput
}

type GetStorageProfileLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetStorageProfileLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageProfileLink)(nil)).Elem()
}

func (i GetStorageProfileLinkArgs) ToGetStorageProfileLinkOutput() GetStorageProfileLinkOutput {
	return i.ToGetStorageProfileLinkOutputWithContext(context.Background())
}

func (i GetStorageProfileLinkArgs) ToGetStorageProfileLinkOutputWithContext(ctx context.Context) GetStorageProfileLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageProfileLinkOutput)
}

// GetStorageProfileLinkArrayInput is an input type that accepts GetStorageProfileLinkArray and GetStorageProfileLinkArrayOutput values.
// You can construct a concrete instance of `GetStorageProfileLinkArrayInput` via:
//
//          GetStorageProfileLinkArray{ GetStorageProfileLinkArgs{...} }
type GetStorageProfileLinkArrayInput interface {
	pulumi.Input

	ToGetStorageProfileLinkArrayOutput() GetStorageProfileLinkArrayOutput
	ToGetStorageProfileLinkArrayOutputWithContext(context.Context) GetStorageProfileLinkArrayOutput
}

type GetStorageProfileLinkArray []GetStorageProfileLinkInput

func (GetStorageProfileLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageProfileLink)(nil)).Elem()
}

func (i GetStorageProfileLinkArray) ToGetStorageProfileLinkArrayOutput() GetStorageProfileLinkArrayOutput {
	return i.ToGetStorageProfileLinkArrayOutputWithContext(context.Background())
}

func (i GetStorageProfileLinkArray) ToGetStorageProfileLinkArrayOutputWithContext(ctx context.Context) GetStorageProfileLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageProfileLinkArrayOutput)
}

type GetStorageProfileLinkOutput struct{ *pulumi.OutputState }

func (GetStorageProfileLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageProfileLink)(nil)).Elem()
}

func (o GetStorageProfileLinkOutput) ToGetStorageProfileLinkOutput() GetStorageProfileLinkOutput {
	return o
}

func (o GetStorageProfileLinkOutput) ToGetStorageProfileLinkOutputWithContext(ctx context.Context) GetStorageProfileLinkOutput {
	return o
}

func (o GetStorageProfileLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStorageProfileLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetStorageProfileLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStorageProfileLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetStorageProfileLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageProfileLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetStorageProfileLinkArrayOutput struct{ *pulumi.OutputState }

func (GetStorageProfileLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageProfileLink)(nil)).Elem()
}

func (o GetStorageProfileLinkArrayOutput) ToGetStorageProfileLinkArrayOutput() GetStorageProfileLinkArrayOutput {
	return o
}

func (o GetStorageProfileLinkArrayOutput) ToGetStorageProfileLinkArrayOutputWithContext(ctx context.Context) GetStorageProfileLinkArrayOutput {
	return o
}

func (o GetStorageProfileLinkArrayOutput) Index(i pulumi.IntInput) GetStorageProfileLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageProfileLink {
		return vs[0].([]GetStorageProfileLink)[vs[1].(int)]
	}).(GetStorageProfileLinkOutput)
}

type GetStorageProfileTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GetStorageProfileTagInput is an input type that accepts GetStorageProfileTagArgs and GetStorageProfileTagOutput values.
// You can construct a concrete instance of `GetStorageProfileTagInput` via:
//
//          GetStorageProfileTagArgs{...}
type GetStorageProfileTagInput interface {
	pulumi.Input

	ToGetStorageProfileTagOutput() GetStorageProfileTagOutput
	ToGetStorageProfileTagOutputWithContext(context.Context) GetStorageProfileTagOutput
}

type GetStorageProfileTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetStorageProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageProfileTag)(nil)).Elem()
}

func (i GetStorageProfileTagArgs) ToGetStorageProfileTagOutput() GetStorageProfileTagOutput {
	return i.ToGetStorageProfileTagOutputWithContext(context.Background())
}

func (i GetStorageProfileTagArgs) ToGetStorageProfileTagOutputWithContext(ctx context.Context) GetStorageProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageProfileTagOutput)
}

// GetStorageProfileTagArrayInput is an input type that accepts GetStorageProfileTagArray and GetStorageProfileTagArrayOutput values.
// You can construct a concrete instance of `GetStorageProfileTagArrayInput` via:
//
//          GetStorageProfileTagArray{ GetStorageProfileTagArgs{...} }
type GetStorageProfileTagArrayInput interface {
	pulumi.Input

	ToGetStorageProfileTagArrayOutput() GetStorageProfileTagArrayOutput
	ToGetStorageProfileTagArrayOutputWithContext(context.Context) GetStorageProfileTagArrayOutput
}

type GetStorageProfileTagArray []GetStorageProfileTagInput

func (GetStorageProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageProfileTag)(nil)).Elem()
}

func (i GetStorageProfileTagArray) ToGetStorageProfileTagArrayOutput() GetStorageProfileTagArrayOutput {
	return i.ToGetStorageProfileTagArrayOutputWithContext(context.Background())
}

func (i GetStorageProfileTagArray) ToGetStorageProfileTagArrayOutputWithContext(ctx context.Context) GetStorageProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageProfileTagArrayOutput)
}

type GetStorageProfileTagOutput struct{ *pulumi.OutputState }

func (GetStorageProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageProfileTag)(nil)).Elem()
}

func (o GetStorageProfileTagOutput) ToGetStorageProfileTagOutput() GetStorageProfileTagOutput {
	return o
}

func (o GetStorageProfileTagOutput) ToGetStorageProfileTagOutputWithContext(ctx context.Context) GetStorageProfileTagOutput {
	return o
}

func (o GetStorageProfileTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageProfileTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetStorageProfileTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageProfileTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetStorageProfileTagArrayOutput struct{ *pulumi.OutputState }

func (GetStorageProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageProfileTag)(nil)).Elem()
}

func (o GetStorageProfileTagArrayOutput) ToGetStorageProfileTagArrayOutput() GetStorageProfileTagArrayOutput {
	return o
}

func (o GetStorageProfileTagArrayOutput) ToGetStorageProfileTagArrayOutputWithContext(ctx context.Context) GetStorageProfileTagArrayOutput {
	return o
}

func (o GetStorageProfileTagArrayOutput) Index(i pulumi.IntInput) GetStorageProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageProfileTag {
		return vs[0].([]GetStorageProfileTag)[vs[1].(int)]
	}).(GetStorageProfileTagOutput)
}

type GetVSphereLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetVSphereLinkInput is an input type that accepts GetVSphereLinkArgs and GetVSphereLinkOutput values.
// You can construct a concrete instance of `GetVSphereLinkInput` via:
//
//          GetVSphereLinkArgs{...}
type GetVSphereLinkInput interface {
	pulumi.Input

	ToGetVSphereLinkOutput() GetVSphereLinkOutput
	ToGetVSphereLinkOutputWithContext(context.Context) GetVSphereLinkOutput
}

type GetVSphereLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetVSphereLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVSphereLink)(nil)).Elem()
}

func (i GetVSphereLinkArgs) ToGetVSphereLinkOutput() GetVSphereLinkOutput {
	return i.ToGetVSphereLinkOutputWithContext(context.Background())
}

func (i GetVSphereLinkArgs) ToGetVSphereLinkOutputWithContext(ctx context.Context) GetVSphereLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVSphereLinkOutput)
}

// GetVSphereLinkArrayInput is an input type that accepts GetVSphereLinkArray and GetVSphereLinkArrayOutput values.
// You can construct a concrete instance of `GetVSphereLinkArrayInput` via:
//
//          GetVSphereLinkArray{ GetVSphereLinkArgs{...} }
type GetVSphereLinkArrayInput interface {
	pulumi.Input

	ToGetVSphereLinkArrayOutput() GetVSphereLinkArrayOutput
	ToGetVSphereLinkArrayOutputWithContext(context.Context) GetVSphereLinkArrayOutput
}

type GetVSphereLinkArray []GetVSphereLinkInput

func (GetVSphereLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVSphereLink)(nil)).Elem()
}

func (i GetVSphereLinkArray) ToGetVSphereLinkArrayOutput() GetVSphereLinkArrayOutput {
	return i.ToGetVSphereLinkArrayOutputWithContext(context.Background())
}

func (i GetVSphereLinkArray) ToGetVSphereLinkArrayOutputWithContext(ctx context.Context) GetVSphereLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVSphereLinkArrayOutput)
}

type GetVSphereLinkOutput struct{ *pulumi.OutputState }

func (GetVSphereLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVSphereLink)(nil)).Elem()
}

func (o GetVSphereLinkOutput) ToGetVSphereLinkOutput() GetVSphereLinkOutput {
	return o
}

func (o GetVSphereLinkOutput) ToGetVSphereLinkOutputWithContext(ctx context.Context) GetVSphereLinkOutput {
	return o
}

func (o GetVSphereLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVSphereLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetVSphereLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVSphereLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetVSphereLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetVSphereLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetVSphereLinkArrayOutput struct{ *pulumi.OutputState }

func (GetVSphereLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVSphereLink)(nil)).Elem()
}

func (o GetVSphereLinkArrayOutput) ToGetVSphereLinkArrayOutput() GetVSphereLinkArrayOutput {
	return o
}

func (o GetVSphereLinkArrayOutput) ToGetVSphereLinkArrayOutputWithContext(ctx context.Context) GetVSphereLinkArrayOutput {
	return o
}

func (o GetVSphereLinkArrayOutput) Index(i pulumi.IntInput) GetVSphereLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVSphereLink {
		return vs[0].([]GetVSphereLink)[vs[1].(int)]
	}).(GetVSphereLinkOutput)
}

type GetVSphereTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GetVSphereTagInput is an input type that accepts GetVSphereTagArgs and GetVSphereTagOutput values.
// You can construct a concrete instance of `GetVSphereTagInput` via:
//
//          GetVSphereTagArgs{...}
type GetVSphereTagInput interface {
	pulumi.Input

	ToGetVSphereTagOutput() GetVSphereTagOutput
	ToGetVSphereTagOutputWithContext(context.Context) GetVSphereTagOutput
}

type GetVSphereTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVSphereTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVSphereTag)(nil)).Elem()
}

func (i GetVSphereTagArgs) ToGetVSphereTagOutput() GetVSphereTagOutput {
	return i.ToGetVSphereTagOutputWithContext(context.Background())
}

func (i GetVSphereTagArgs) ToGetVSphereTagOutputWithContext(ctx context.Context) GetVSphereTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVSphereTagOutput)
}

// GetVSphereTagArrayInput is an input type that accepts GetVSphereTagArray and GetVSphereTagArrayOutput values.
// You can construct a concrete instance of `GetVSphereTagArrayInput` via:
//
//          GetVSphereTagArray{ GetVSphereTagArgs{...} }
type GetVSphereTagArrayInput interface {
	pulumi.Input

	ToGetVSphereTagArrayOutput() GetVSphereTagArrayOutput
	ToGetVSphereTagArrayOutputWithContext(context.Context) GetVSphereTagArrayOutput
}

type GetVSphereTagArray []GetVSphereTagInput

func (GetVSphereTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVSphereTag)(nil)).Elem()
}

func (i GetVSphereTagArray) ToGetVSphereTagArrayOutput() GetVSphereTagArrayOutput {
	return i.ToGetVSphereTagArrayOutputWithContext(context.Background())
}

func (i GetVSphereTagArray) ToGetVSphereTagArrayOutputWithContext(ctx context.Context) GetVSphereTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVSphereTagArrayOutput)
}

type GetVSphereTagOutput struct{ *pulumi.OutputState }

func (GetVSphereTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVSphereTag)(nil)).Elem()
}

func (o GetVSphereTagOutput) ToGetVSphereTagOutput() GetVSphereTagOutput {
	return o
}

func (o GetVSphereTagOutput) ToGetVSphereTagOutputWithContext(ctx context.Context) GetVSphereTagOutput {
	return o
}

func (o GetVSphereTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVSphereTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetVSphereTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVSphereTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVSphereTagArrayOutput struct{ *pulumi.OutputState }

func (GetVSphereTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVSphereTag)(nil)).Elem()
}

func (o GetVSphereTagArrayOutput) ToGetVSphereTagArrayOutput() GetVSphereTagArrayOutput {
	return o
}

func (o GetVSphereTagArrayOutput) ToGetVSphereTagArrayOutputWithContext(ctx context.Context) GetVSphereTagArrayOutput {
	return o
}

func (o GetVSphereTagArrayOutput) Index(i pulumi.IntInput) GetVSphereTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVSphereTag {
		return vs[0].([]GetVSphereTag)[vs[1].(int)]
	}).(GetVSphereTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLinkInput)(nil)).Elem(), AwsLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLinkArrayInput)(nil)).Elem(), AwsLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsTagInput)(nil)).Elem(), AwsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsTagArrayInput)(nil)).Elem(), AwsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureLinkInput)(nil)).Elem(), AzureLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureLinkArrayInput)(nil)).Elem(), AzureLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureTagInput)(nil)).Elem(), AzureTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureTagArrayInput)(nil)).Elem(), AzureTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageProfileLinkInput)(nil)).Elem(), StorageProfileLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageProfileLinkArrayInput)(nil)).Elem(), StorageProfileLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageProfileTagInput)(nil)).Elem(), StorageProfileTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageProfileTagArrayInput)(nil)).Elem(), StorageProfileTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VSphereLinkInput)(nil)).Elem(), VSphereLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VSphereLinkArrayInput)(nil)).Elem(), VSphereLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VSphereTagInput)(nil)).Elem(), VSphereTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VSphereTagArrayInput)(nil)).Elem(), VSphereTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsLinkInput)(nil)).Elem(), GetAwsLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsLinkArrayInput)(nil)).Elem(), GetAwsLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsTagInput)(nil)).Elem(), GetAwsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsTagArrayInput)(nil)).Elem(), GetAwsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureLinkInput)(nil)).Elem(), GetAzureLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureLinkArrayInput)(nil)).Elem(), GetAzureLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureTagInput)(nil)).Elem(), GetAzureTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureTagArrayInput)(nil)).Elem(), GetAzureTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageProfileLinkInput)(nil)).Elem(), GetStorageProfileLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageProfileLinkArrayInput)(nil)).Elem(), GetStorageProfileLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageProfileTagInput)(nil)).Elem(), GetStorageProfileTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageProfileTagArrayInput)(nil)).Elem(), GetStorageProfileTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVSphereLinkInput)(nil)).Elem(), GetVSphereLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVSphereLinkArrayInput)(nil)).Elem(), GetVSphereLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVSphereTagInput)(nil)).Elem(), GetVSphereTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVSphereTagArrayInput)(nil)).Elem(), GetVSphereTagArray{})
	pulumi.RegisterOutputType(AwsLinkOutput{})
	pulumi.RegisterOutputType(AwsLinkArrayOutput{})
	pulumi.RegisterOutputType(AwsTagOutput{})
	pulumi.RegisterOutputType(AwsTagArrayOutput{})
	pulumi.RegisterOutputType(AzureLinkOutput{})
	pulumi.RegisterOutputType(AzureLinkArrayOutput{})
	pulumi.RegisterOutputType(AzureTagOutput{})
	pulumi.RegisterOutputType(AzureTagArrayOutput{})
	pulumi.RegisterOutputType(StorageProfileLinkOutput{})
	pulumi.RegisterOutputType(StorageProfileLinkArrayOutput{})
	pulumi.RegisterOutputType(StorageProfileTagOutput{})
	pulumi.RegisterOutputType(StorageProfileTagArrayOutput{})
	pulumi.RegisterOutputType(VSphereLinkOutput{})
	pulumi.RegisterOutputType(VSphereLinkArrayOutput{})
	pulumi.RegisterOutputType(VSphereTagOutput{})
	pulumi.RegisterOutputType(VSphereTagArrayOutput{})
	pulumi.RegisterOutputType(GetAwsLinkOutput{})
	pulumi.RegisterOutputType(GetAwsLinkArrayOutput{})
	pulumi.RegisterOutputType(GetAwsTagOutput{})
	pulumi.RegisterOutputType(GetAwsTagArrayOutput{})
	pulumi.RegisterOutputType(GetAzureLinkOutput{})
	pulumi.RegisterOutputType(GetAzureLinkArrayOutput{})
	pulumi.RegisterOutputType(GetAzureTagOutput{})
	pulumi.RegisterOutputType(GetAzureTagArrayOutput{})
	pulumi.RegisterOutputType(GetStorageProfileLinkOutput{})
	pulumi.RegisterOutputType(GetStorageProfileLinkArrayOutput{})
	pulumi.RegisterOutputType(GetStorageProfileTagOutput{})
	pulumi.RegisterOutputType(GetStorageProfileTagArrayOutput{})
	pulumi.RegisterOutputType(GetVSphereLinkOutput{})
	pulumi.RegisterOutputType(GetVSphereLinkArrayOutput{})
	pulumi.RegisterOutputType(GetVSphereTagOutput{})
	pulumi.RegisterOutputType(GetVSphereTagArrayOutput{})
}
