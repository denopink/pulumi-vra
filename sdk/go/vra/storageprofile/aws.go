// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storageprofile

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### S
// This is an example of how to create a storage profile aws resource.
//
// **Vra storage profile aws:**
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vra/sdk/go/vra/storageprofile"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/storageprofile"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := storageprofile.NewAws(ctx, "thisAws", &storageprofile.AwsArgs{
// 			Description:        pulumi.String("AWS Storage Profile with instance store device type."),
// 			RegionId:           pulumi.Any(data.Vra_region.This.Id),
// 			DefaultItem:        pulumi.Bool(false),
// 			SupportsEncryption: pulumi.Bool(false),
// 			DeviceType:         pulumi.String("ebs"),
// 			VolumeType:         pulumi.String("io1"),
// 			Iops:               pulumi.String("1000"),
// 			Tags: storageprofile.AwsTagArray{
// 				&storageprofile.AwsTagArgs{
// 					Key:   pulumi.String("foo"),
// 					Value: pulumi.String("bar"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = storageprofile.NewAws(ctx, "thisStorageprofile/awsAws", &storageprofile.AwsArgs{
// 			Description: pulumi.String("AWS Storage Profile with instance store device type."),
// 			RegionId:    pulumi.Any(data.Vra_region.This.Id),
// 			DefaultItem: pulumi.Bool(false),
// 			DeviceType:  pulumi.String("instance-store"),
// 			Tags: storageprofile.AwsTagArray{
// 				&storageprofile.AwsTagArgs{
// 					Key:   pulumi.String("foo"),
// 					Value: pulumi.String("bar"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// A storage profile aws resource supports the following arguments:
type Aws struct {
	pulumi.CustomResourceState

	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Indicates if this storage profile is a default profile.
	DefaultItem pulumi.BoolOutput `pulumi:"defaultItem"`
	// A human-friendly description.
	Description pulumi.StringOutput `pulumi:"description"`
	// Indicates the type of storage device.
	DeviceType pulumi.StringOutput `pulumi:"deviceType"`
	// The id of the region as seen in the cloud provider for which this profile is defined.
	ExternalRegionId pulumi.StringOutput `pulumi:"externalRegionId"`
	// Indicates maximum I/O operations per second in range(1-20,000).
	Iops pulumi.StringOutput `pulumi:"iops"`
	// HATEOAS of the entity
	Links AwsLinkArrayOutput `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringOutput `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Email of the user that owns the entity.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// A link to the region that is associated with the storage profile.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// Indicates whether this storage profile supports encryption or not.
	SupportsEncryption pulumi.BoolOutput `pulumi:"supportsEncryption"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags AwsTagArrayOutput `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Indicates the type of volume associated with type of storage.
	VolumeType pulumi.StringOutput `pulumi:"volumeType"`
}

// NewAws registers a new resource with the given unique name, arguments, and options.
func NewAws(ctx *pulumi.Context,
	name string, args *AwsArgs, opts ...pulumi.ResourceOption) (*Aws, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultItem == nil {
		return nil, errors.New("invalid value for required argument 'DefaultItem'")
	}
	if args.RegionId == nil {
		return nil, errors.New("invalid value for required argument 'RegionId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Aws
	err := ctx.RegisterResource("vra:storageprofile/aws:Aws", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAws gets an existing Aws resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAws(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsState, opts ...pulumi.ResourceOption) (*Aws, error) {
	var resource Aws
	err := ctx.ReadResource("vra:storageprofile/aws:Aws", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Aws resources.
type awsState struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// Indicates if this storage profile is a default profile.
	DefaultItem *bool `pulumi:"defaultItem"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// Indicates the type of storage device.
	DeviceType *string `pulumi:"deviceType"`
	// The id of the region as seen in the cloud provider for which this profile is defined.
	ExternalRegionId *string `pulumi:"externalRegionId"`
	// Indicates maximum I/O operations per second in range(1-20,000).
	Iops *string `pulumi:"iops"`
	// HATEOAS of the entity
	Links []AwsLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrganizationId *string `pulumi:"organizationId"`
	// Email of the user that owns the entity.
	Owner *string `pulumi:"owner"`
	// A link to the region that is associated with the storage profile.
	RegionId *string `pulumi:"regionId"`
	// Indicates whether this storage profile supports encryption or not.
	SupportsEncryption *bool `pulumi:"supportsEncryption"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []AwsTag `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Indicates the type of volume associated with type of storage.
	VolumeType *string `pulumi:"volumeType"`
}

type AwsState struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt pulumi.StringPtrInput
	// Indicates if this storage profile is a default profile.
	DefaultItem pulumi.BoolPtrInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// Indicates the type of storage device.
	DeviceType pulumi.StringPtrInput
	// The id of the region as seen in the cloud provider for which this profile is defined.
	ExternalRegionId pulumi.StringPtrInput
	// Indicates maximum I/O operations per second in range(1-20,000).
	Iops pulumi.StringPtrInput
	// HATEOAS of the entity
	Links AwsLinkArrayInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// The id of the organization this entity belongs to.
	OrganizationId pulumi.StringPtrInput
	// Email of the user that owns the entity.
	Owner pulumi.StringPtrInput
	// A link to the region that is associated with the storage profile.
	RegionId pulumi.StringPtrInput
	// Indicates whether this storage profile supports encryption or not.
	SupportsEncryption pulumi.BoolPtrInput
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags AwsTagArrayInput
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
	// Indicates the type of volume associated with type of storage.
	VolumeType pulumi.StringPtrInput
}

func (AwsState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsState)(nil)).Elem()
}

type awsArgs struct {
	// Indicates if this storage profile is a default profile.
	DefaultItem bool `pulumi:"defaultItem"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// Indicates the type of storage device.
	DeviceType *string `pulumi:"deviceType"`
	// Indicates maximum I/O operations per second in range(1-20,000).
	Iops *string `pulumi:"iops"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// A link to the region that is associated with the storage profile.
	RegionId string `pulumi:"regionId"`
	// Indicates whether this storage profile supports encryption or not.
	SupportsEncryption *bool `pulumi:"supportsEncryption"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []AwsTag `pulumi:"tags"`
	// Indicates the type of volume associated with type of storage.
	VolumeType *string `pulumi:"volumeType"`
}

// The set of arguments for constructing a Aws resource.
type AwsArgs struct {
	// Indicates if this storage profile is a default profile.
	DefaultItem pulumi.BoolInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// Indicates the type of storage device.
	DeviceType pulumi.StringPtrInput
	// Indicates maximum I/O operations per second in range(1-20,000).
	Iops pulumi.StringPtrInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// A link to the region that is associated with the storage profile.
	RegionId pulumi.StringInput
	// Indicates whether this storage profile supports encryption or not.
	SupportsEncryption pulumi.BoolPtrInput
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags AwsTagArrayInput
	// Indicates the type of volume associated with type of storage.
	VolumeType pulumi.StringPtrInput
}

func (AwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsArgs)(nil)).Elem()
}

type AwsInput interface {
	pulumi.Input

	ToAwsOutput() AwsOutput
	ToAwsOutputWithContext(ctx context.Context) AwsOutput
}

func (*Aws) ElementType() reflect.Type {
	return reflect.TypeOf((**Aws)(nil)).Elem()
}

func (i *Aws) ToAwsOutput() AwsOutput {
	return i.ToAwsOutputWithContext(context.Background())
}

func (i *Aws) ToAwsOutputWithContext(ctx context.Context) AwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsOutput)
}

// AwsArrayInput is an input type that accepts AwsArray and AwsArrayOutput values.
// You can construct a concrete instance of `AwsArrayInput` via:
//
//          AwsArray{ AwsArgs{...} }
type AwsArrayInput interface {
	pulumi.Input

	ToAwsArrayOutput() AwsArrayOutput
	ToAwsArrayOutputWithContext(context.Context) AwsArrayOutput
}

type AwsArray []AwsInput

func (AwsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Aws)(nil)).Elem()
}

func (i AwsArray) ToAwsArrayOutput() AwsArrayOutput {
	return i.ToAwsArrayOutputWithContext(context.Background())
}

func (i AwsArray) ToAwsArrayOutputWithContext(ctx context.Context) AwsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsArrayOutput)
}

// AwsMapInput is an input type that accepts AwsMap and AwsMapOutput values.
// You can construct a concrete instance of `AwsMapInput` via:
//
//          AwsMap{ "key": AwsArgs{...} }
type AwsMapInput interface {
	pulumi.Input

	ToAwsMapOutput() AwsMapOutput
	ToAwsMapOutputWithContext(context.Context) AwsMapOutput
}

type AwsMap map[string]AwsInput

func (AwsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Aws)(nil)).Elem()
}

func (i AwsMap) ToAwsMapOutput() AwsMapOutput {
	return i.ToAwsMapOutputWithContext(context.Background())
}

func (i AwsMap) ToAwsMapOutputWithContext(ctx context.Context) AwsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsMapOutput)
}

type AwsOutput struct{ *pulumi.OutputState }

func (AwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Aws)(nil)).Elem()
}

func (o AwsOutput) ToAwsOutput() AwsOutput {
	return o
}

func (o AwsOutput) ToAwsOutputWithContext(ctx context.Context) AwsOutput {
	return o
}

// Date when the entity was created. The date is in ISO 6801 and UTC.
func (o AwsOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Indicates if this storage profile is a default profile.
func (o AwsOutput) DefaultItem() pulumi.BoolOutput {
	return o.ApplyT(func(v *Aws) pulumi.BoolOutput { return v.DefaultItem }).(pulumi.BoolOutput)
}

// A human-friendly description.
func (o AwsOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Indicates the type of storage device.
func (o AwsOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.DeviceType }).(pulumi.StringOutput)
}

// The id of the region as seen in the cloud provider for which this profile is defined.
func (o AwsOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.ExternalRegionId }).(pulumi.StringOutput)
}

// Indicates maximum I/O operations per second in range(1-20,000).
func (o AwsOutput) Iops() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.Iops }).(pulumi.StringOutput)
}

// HATEOAS of the entity
func (o AwsOutput) Links() AwsLinkArrayOutput {
	return o.ApplyT(func(v *Aws) AwsLinkArrayOutput { return v.Links }).(AwsLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o AwsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o AwsOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o AwsOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// A link to the region that is associated with the storage profile.
func (o AwsOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// Indicates whether this storage profile supports encryption or not.
func (o AwsOutput) SupportsEncryption() pulumi.BoolOutput {
	return o.ApplyT(func(v *Aws) pulumi.BoolOutput { return v.SupportsEncryption }).(pulumi.BoolOutput)
}

// A set of tag keys and optional values that were set on this Network Profile.
// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
func (o AwsOutput) Tags() AwsTagArrayOutput {
	return o.ApplyT(func(v *Aws) AwsTagArrayOutput { return v.Tags }).(AwsTagArrayOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o AwsOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Indicates the type of volume associated with type of storage.
func (o AwsOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Aws) pulumi.StringOutput { return v.VolumeType }).(pulumi.StringOutput)
}

type AwsArrayOutput struct{ *pulumi.OutputState }

func (AwsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Aws)(nil)).Elem()
}

func (o AwsArrayOutput) ToAwsArrayOutput() AwsArrayOutput {
	return o
}

func (o AwsArrayOutput) ToAwsArrayOutputWithContext(ctx context.Context) AwsArrayOutput {
	return o
}

func (o AwsArrayOutput) Index(i pulumi.IntInput) AwsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Aws {
		return vs[0].([]*Aws)[vs[1].(int)]
	}).(AwsOutput)
}

type AwsMapOutput struct{ *pulumi.OutputState }

func (AwsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Aws)(nil)).Elem()
}

func (o AwsMapOutput) ToAwsMapOutput() AwsMapOutput {
	return o
}

func (o AwsMapOutput) ToAwsMapOutputWithContext(ctx context.Context) AwsMapOutput {
	return o
}

func (o AwsMapOutput) MapIndex(k pulumi.StringInput) AwsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Aws {
		return vs[0].(map[string]*Aws)[vs[1].(string)]
	}).(AwsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInput)(nil)).Elem(), &Aws{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsArrayInput)(nil)).Elem(), AwsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsMapInput)(nil)).Elem(), AwsMap{})
	pulumi.RegisterOutputType(AwsOutput{})
	pulumi.RegisterOutputType(AwsArrayOutput{})
	pulumi.RegisterOutputType(AwsMapOutput{})
}
