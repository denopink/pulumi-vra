// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudaccount

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a VMware vRealize Automation Azure cloud account resource.
//
// ## Example Usage
// ### S
//
// The following example shows how to create an Azure cloud account resource.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/cloudaccount"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudaccount.NewAzure(ctx, "this", &cloudaccount.AzureArgs{
// 			ApplicationId:  pulumi.String("sample-application-id"),
// 			ApplicationKey: pulumi.String("sample-application=key"),
// 			Description:    pulumi.String("test cloud account"),
// 			Regions: pulumi.StringArray{
// 				pulumi.String("centralus"),
// 			},
// 			SubscriptionId: pulumi.String("sample-subscription-id"),
// 			TenantId:       pulumi.String("sample-tenant-id"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// To import the Azure cloud account, use the ID as in the following example
//
// ```sh
//  $ pulumi import vra:cloudaccount/azure:Azure new_azure 05956583-6488-4e7d-84c9-92a7b7219a15`
// ```
type Azure struct {
	pulumi.CustomResourceState

	// Azure Client Application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Azure Client Application Secret Key.
	ApplicationKey pulumi.StringOutput `pulumi:"applicationKey"`
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Human-friendly description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// HATEOAS of entity.
	Links AzureLinkArrayOutput `pulumi:"links"`
	// Name of Azure cloud account.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// Email of entity owner.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayOutput `pulumi:"regions"`
	// Azure Subscription ID.
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags AzureTagArrayOutput `pulumi:"tags"`
	// Azure Tenant ID.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewAzure registers a new resource with the given unique name, arguments, and options.
func NewAzure(ctx *pulumi.Context,
	name string, args *AzureArgs, opts ...pulumi.ResourceOption) (*Azure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.ApplicationKey == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationKey'")
	}
	if args.Regions == nil {
		return nil, errors.New("invalid value for required argument 'Regions'")
	}
	if args.SubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'SubscriptionId'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Azure
	err := ctx.RegisterResource("vra:cloudaccount/azure:Azure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzure gets an existing Azure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureState, opts ...pulumi.ResourceOption) (*Azure, error) {
	var resource Azure
	err := ctx.ReadResource("vra:cloudaccount/azure:Azure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Azure resources.
type azureState struct {
	// Azure Client Application ID.
	ApplicationId *string `pulumi:"applicationId"`
	// Azure Client Application Secret Key.
	ApplicationKey *string `pulumi:"applicationKey"`
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// Human-friendly description.
	Description *string `pulumi:"description"`
	// HATEOAS of entity.
	Links []AzureLink `pulumi:"links"`
	// Name of Azure cloud account.
	Name *string `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId *string `pulumi:"orgId"`
	// Email of entity owner.
	Owner *string `pulumi:"owner"`
	// Set of region names enabled for the cloud account.
	Regions []string `pulumi:"regions"`
	// Azure Subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []AzureTag `pulumi:"tags"`
	// Azure Tenant ID.
	TenantId *string `pulumi:"tenantId"`
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type AzureState struct {
	// Azure Client Application ID.
	ApplicationId pulumi.StringPtrInput
	// Azure Client Application Secret Key.
	ApplicationKey pulumi.StringPtrInput
	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringPtrInput
	// Human-friendly description.
	Description pulumi.StringPtrInput
	// HATEOAS of entity.
	Links AzureLinkArrayInput
	// Name of Azure cloud account.
	Name pulumi.StringPtrInput
	// ID of organization that entity belongs to.
	OrgId pulumi.StringPtrInput
	// Email of entity owner.
	Owner pulumi.StringPtrInput
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayInput
	// Azure Subscription ID.
	SubscriptionId pulumi.StringPtrInput
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags AzureTagArrayInput
	// Azure Tenant ID.
	TenantId pulumi.StringPtrInput
	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
}

func (AzureState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureState)(nil)).Elem()
}

type azureArgs struct {
	// Azure Client Application ID.
	ApplicationId string `pulumi:"applicationId"`
	// Azure Client Application Secret Key.
	ApplicationKey string `pulumi:"applicationKey"`
	// Human-friendly description.
	Description *string `pulumi:"description"`
	// Name of Azure cloud account.
	Name *string `pulumi:"name"`
	// Set of region names enabled for the cloud account.
	Regions []string `pulumi:"regions"`
	// Azure Subscription ID.
	SubscriptionId string `pulumi:"subscriptionId"`
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []AzureTag `pulumi:"tags"`
	// Azure Tenant ID.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a Azure resource.
type AzureArgs struct {
	// Azure Client Application ID.
	ApplicationId pulumi.StringInput
	// Azure Client Application Secret Key.
	ApplicationKey pulumi.StringInput
	// Human-friendly description.
	Description pulumi.StringPtrInput
	// Name of Azure cloud account.
	Name pulumi.StringPtrInput
	// Set of region names enabled for the cloud account.
	Regions pulumi.StringArrayInput
	// Azure Subscription ID.
	SubscriptionId pulumi.StringInput
	// Set of tag keys and values to apply to the cloud account.\
	// Example:[ { "key" : "vmware", "value": "provider" } ]
	Tags AzureTagArrayInput
	// Azure Tenant ID.
	TenantId pulumi.StringInput
}

func (AzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureArgs)(nil)).Elem()
}

type AzureInput interface {
	pulumi.Input

	ToAzureOutput() AzureOutput
	ToAzureOutputWithContext(ctx context.Context) AzureOutput
}

func (*Azure) ElementType() reflect.Type {
	return reflect.TypeOf((**Azure)(nil)).Elem()
}

func (i *Azure) ToAzureOutput() AzureOutput {
	return i.ToAzureOutputWithContext(context.Background())
}

func (i *Azure) ToAzureOutputWithContext(ctx context.Context) AzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOutput)
}

// AzureArrayInput is an input type that accepts AzureArray and AzureArrayOutput values.
// You can construct a concrete instance of `AzureArrayInput` via:
//
//          AzureArray{ AzureArgs{...} }
type AzureArrayInput interface {
	pulumi.Input

	ToAzureArrayOutput() AzureArrayOutput
	ToAzureArrayOutputWithContext(context.Context) AzureArrayOutput
}

type AzureArray []AzureInput

func (AzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Azure)(nil)).Elem()
}

func (i AzureArray) ToAzureArrayOutput() AzureArrayOutput {
	return i.ToAzureArrayOutputWithContext(context.Background())
}

func (i AzureArray) ToAzureArrayOutputWithContext(ctx context.Context) AzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureArrayOutput)
}

// AzureMapInput is an input type that accepts AzureMap and AzureMapOutput values.
// You can construct a concrete instance of `AzureMapInput` via:
//
//          AzureMap{ "key": AzureArgs{...} }
type AzureMapInput interface {
	pulumi.Input

	ToAzureMapOutput() AzureMapOutput
	ToAzureMapOutputWithContext(context.Context) AzureMapOutput
}

type AzureMap map[string]AzureInput

func (AzureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Azure)(nil)).Elem()
}

func (i AzureMap) ToAzureMapOutput() AzureMapOutput {
	return i.ToAzureMapOutputWithContext(context.Background())
}

func (i AzureMap) ToAzureMapOutputWithContext(ctx context.Context) AzureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMapOutput)
}

type AzureOutput struct{ *pulumi.OutputState }

func (AzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Azure)(nil)).Elem()
}

func (o AzureOutput) ToAzureOutput() AzureOutput {
	return o
}

func (o AzureOutput) ToAzureOutputWithContext(ctx context.Context) AzureOutput {
	return o
}

// Azure Client Application ID.
func (o AzureOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Azure Client Application Secret Key.
func (o AzureOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringOutput { return v.ApplicationKey }).(pulumi.StringOutput)
}

// Date when entity was created. Date and time format is ISO 8601 and UTC.
func (o AzureOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Human-friendly description.
func (o AzureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// HATEOAS of entity.
func (o AzureOutput) Links() AzureLinkArrayOutput {
	return o.ApplyT(func(v *Azure) AzureLinkArrayOutput { return v.Links }).(AzureLinkArrayOutput)
}

// Name of Azure cloud account.
func (o AzureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID of organization that entity belongs to.
func (o AzureOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// Email of entity owner.
func (o AzureOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// Set of region names enabled for the cloud account.
func (o AzureOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringArrayOutput { return v.Regions }).(pulumi.StringArrayOutput)
}

// Azure Subscription ID.
func (o AzureOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Set of tag keys and values to apply to the cloud account.\
// Example:[ { "key" : "vmware", "value": "provider" } ]
func (o AzureOutput) Tags() AzureTagArrayOutput {
	return o.ApplyT(func(v *Azure) AzureTagArrayOutput { return v.Tags }).(AzureTagArrayOutput)
}

// Azure Tenant ID.
func (o AzureOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
func (o AzureOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Azure) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type AzureArrayOutput struct{ *pulumi.OutputState }

func (AzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Azure)(nil)).Elem()
}

func (o AzureArrayOutput) ToAzureArrayOutput() AzureArrayOutput {
	return o
}

func (o AzureArrayOutput) ToAzureArrayOutputWithContext(ctx context.Context) AzureArrayOutput {
	return o
}

func (o AzureArrayOutput) Index(i pulumi.IntInput) AzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Azure {
		return vs[0].([]*Azure)[vs[1].(int)]
	}).(AzureOutput)
}

type AzureMapOutput struct{ *pulumi.OutputState }

func (AzureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Azure)(nil)).Elem()
}

func (o AzureMapOutput) ToAzureMapOutput() AzureMapOutput {
	return o
}

func (o AzureMapOutput) ToAzureMapOutputWithContext(ctx context.Context) AzureMapOutput {
	return o
}

func (o AzureMapOutput) MapIndex(k pulumi.StringInput) AzureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Azure {
		return vs[0].(map[string]*Azure)[vs[1].(string)]
	}).(AzureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureInput)(nil)).Elem(), &Azure{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureArrayInput)(nil)).Elem(), AzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureMapInput)(nil)).Elem(), AzureMap{})
	pulumi.RegisterOutputType(AzureOutput{})
	pulumi.RegisterOutputType(AzureArrayOutput{})
	pulumi.RegisterOutputType(AzureMapOutput{})
}
