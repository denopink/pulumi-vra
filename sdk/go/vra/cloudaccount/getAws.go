// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudaccount

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## ---layout: "vra"
//
// page_title: "VMware vRealize Automation: cloudaccount.Aws"
// description: |-
//   Provides a data lookup for vra_cloud_account_aws.
// ---
//
// # Data Source: vra\_cloud\_account\_aws
//
// Provides a VMware vRA cloudaccount.Aws data source.
//
// ## Example Usage
// ### S
//
// **AWS cloud account data source by its id:**
//
// This is an example of how to read the cloud account data source using its id.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vra/sdk/go/vra/cloudaccount"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/cloudaccount"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudaccount.LookupAws(ctx, &cloudaccount.LookupAwsArgs{
// 			Id: pulumi.StringRef(_var.Vra_cloud_account_aws_id),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// **AWS cloud account data source by its name:**
//
// This is an example of how to read the cloud account data source using its name.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vra/sdk/go/vra/cloudaccount"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/cloudaccount"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudaccount.LookupAws(ctx, &cloudaccount.LookupAwsArgs{
// 			Name: pulumi.StringRef(_var.Vra_cloud_account_aws_name),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupAws(ctx *pulumi.Context, args *LookupAwsArgs, opts ...pulumi.InvokeOption) (*LookupAwsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupAwsResult
	err := ctx.Invoke("vra:cloudaccount/getAws:getAws", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAws.
type LookupAwsArgs struct {
	// The id of this AWS cloud account.
	Id *string `pulumi:"id"`
	// The name of this AWS cloud account.
	Name *string `pulumi:"name"`
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []GetAwsTag `pulumi:"tags"`
}

// A collection of values returned by getAws.
type LookupAwsResult struct {
	// Access key id for Aws.
	AccessKey string `pulumi:"accessKey"`
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt string `pulumi:"createdAt"`
	// A human-friendly description.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// HATEOAS of the entity.
	Links []GetAwsLink `pulumi:"links"`
	Name  string       `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrgId string `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner string `pulumi:"owner"`
	// A set of region names that are enabled for this account.
	Regions []string `pulumi:"regions"`
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []GetAwsTag `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupAwsOutput(ctx *pulumi.Context, args LookupAwsOutputArgs, opts ...pulumi.InvokeOption) LookupAwsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAwsResult, error) {
			args := v.(LookupAwsArgs)
			r, err := LookupAws(ctx, &args, opts...)
			var s LookupAwsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAwsResultOutput)
}

// A collection of arguments for invoking getAws.
type LookupAwsOutputArgs struct {
	// The id of this AWS cloud account.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of this AWS cloud account.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "vmware", "value": "provider" } ]
	Tags GetAwsTagArrayInput `pulumi:"tags"`
}

func (LookupAwsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsArgs)(nil)).Elem()
}

// A collection of values returned by getAws.
type LookupAwsResultOutput struct{ *pulumi.OutputState }

func (LookupAwsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsResult)(nil)).Elem()
}

func (o LookupAwsResultOutput) ToLookupAwsResultOutput() LookupAwsResultOutput {
	return o
}

func (o LookupAwsResultOutput) ToLookupAwsResultOutputWithContext(ctx context.Context) LookupAwsResultOutput {
	return o
}

// Access key id for Aws.
func (o LookupAwsResultOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsResult) string { return v.AccessKey }).(pulumi.StringOutput)
}

// Date when the entity was created. The date is in ISO 6801 and UTC.
func (o LookupAwsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A human-friendly description.
func (o LookupAwsResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupAwsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsResult) string { return v.Id }).(pulumi.StringOutput)
}

// HATEOAS of the entity.
func (o LookupAwsResultOutput) Links() GetAwsLinkArrayOutput {
	return o.ApplyT(func(v LookupAwsResult) []GetAwsLink { return v.Links }).(GetAwsLinkArrayOutput)
}

func (o LookupAwsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsResult) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o LookupAwsResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o LookupAwsResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsResult) string { return v.Owner }).(pulumi.StringOutput)
}

// A set of region names that are enabled for this account.
func (o LookupAwsResultOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAwsResult) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// A set of tag keys and optional values that were set on this resource.
// example:[ { "key" : "vmware", "value": "provider" } ]
func (o LookupAwsResultOutput) Tags() GetAwsTagArrayOutput {
	return o.ApplyT(func(v LookupAwsResult) []GetAwsTag { return v.Tags }).(GetAwsTagArrayOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o LookupAwsResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsResultOutput{})
}
