// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudaccount

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VMware vRA cloudaccount.Vmc data source.
//
// ## Example Usage
// ### S
//
// **VMC cloud account data source by its id:**
//
// This is an example of how to read the cloud account data source using its id.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vra/sdk/go/vra/cloudaccount"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/cloudaccount"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudaccount.LookupVmc(ctx, &cloudaccount.LookupVmcArgs{
// 			Id: pulumi.StringRef(_var.Vra_cloud_account_vmc_id),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// **vmc cloud account data source by its name:**
//
// This is an example of how to read the cloud account data source using its name.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vra/sdk/go/vra/cloudaccount"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/cloudaccount"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudaccount.LookupVmc(ctx, &cloudaccount.LookupVmcArgs{
// 			Name: pulumi.StringRef(_var.Vra_cloud_account_vmc_name),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupVmc(ctx *pulumi.Context, args *LookupVmcArgs, opts ...pulumi.InvokeOption) (*LookupVmcResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupVmcResult
	err := ctx.Invoke("vra:cloudaccount/getVmc:getVmc", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVmc.
type LookupVmcArgs struct {
	// The id of this vmc cloud account.
	Id *string `pulumi:"id"`
	// The name of this vmc cloud account.
	Name *string `pulumi:"name"`
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []GetVmcTag `pulumi:"tags"`
}

// A collection of values returned by getVmc.
type LookupVmcResult struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt string `pulumi:"createdAt"`
	// Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collector.
	DcId string `pulumi:"dcId"`
	// A human-friendly description.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// HATEOAS of the entity.
	Links []GetVmcLink `pulumi:"links"`
	Name  string       `pulumi:"name"`
	// The IP address of the NSX Manager server in the specified SDDC / FQDN.
	NsxHostname string `pulumi:"nsxHostname"`
	// The id of the organization this entity belongs to.
	OrgId string `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner string `pulumi:"owner"`
	// A set of region names that are enabled for this account.
	Regions []string `pulumi:"regions"`
	// Identifier of the on-premise SDDC to be used by this cloud account. Note that NSX-V SDDCs are not supported.
	SddcName string `pulumi:"sddcName"`
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "vmware", "value": "provider" } ]
	Tags []GetVmcTag `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt string `pulumi:"updatedAt"`
	// The IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.
	VcenterHostname string `pulumi:"vcenterHostname"`
	// vCenter user name for the specified SDDC. The specified user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.
	VcenterUsername string `pulumi:"vcenterUsername"`
}

func LookupVmcOutput(ctx *pulumi.Context, args LookupVmcOutputArgs, opts ...pulumi.InvokeOption) LookupVmcResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVmcResult, error) {
			args := v.(LookupVmcArgs)
			r, err := LookupVmc(ctx, &args, opts...)
			var s LookupVmcResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVmcResultOutput)
}

// A collection of arguments for invoking getVmc.
type LookupVmcOutputArgs struct {
	// The id of this vmc cloud account.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of this vmc cloud account.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "vmware", "value": "provider" } ]
	Tags GetVmcTagArrayInput `pulumi:"tags"`
}

func (LookupVmcOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVmcArgs)(nil)).Elem()
}

// A collection of values returned by getVmc.
type LookupVmcResultOutput struct{ *pulumi.OutputState }

func (LookupVmcResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVmcResult)(nil)).Elem()
}

func (o LookupVmcResultOutput) ToLookupVmcResultOutput() LookupVmcResultOutput {
	return o
}

func (o LookupVmcResultOutput) ToLookupVmcResultOutputWithContext(ctx context.Context) LookupVmcResultOutput {
	return o
}

// Date when the entity was created. The date is in ISO 6801 and UTC.
func (o LookupVmcResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collector.
func (o LookupVmcResultOutput) DcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.DcId }).(pulumi.StringOutput)
}

// A human-friendly description.
func (o LookupVmcResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupVmcResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.Id }).(pulumi.StringOutput)
}

// HATEOAS of the entity.
func (o LookupVmcResultOutput) Links() GetVmcLinkArrayOutput {
	return o.ApplyT(func(v LookupVmcResult) []GetVmcLink { return v.Links }).(GetVmcLinkArrayOutput)
}

func (o LookupVmcResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.Name }).(pulumi.StringOutput)
}

// The IP address of the NSX Manager server in the specified SDDC / FQDN.
func (o LookupVmcResultOutput) NsxHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.NsxHostname }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o LookupVmcResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o LookupVmcResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.Owner }).(pulumi.StringOutput)
}

// A set of region names that are enabled for this account.
func (o LookupVmcResultOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVmcResult) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// Identifier of the on-premise SDDC to be used by this cloud account. Note that NSX-V SDDCs are not supported.
func (o LookupVmcResultOutput) SddcName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.SddcName }).(pulumi.StringOutput)
}

// A set of tag keys and optional values that were set on this resource.
// example:[ { "key" : "vmware", "value": "provider" } ]
func (o LookupVmcResultOutput) Tags() GetVmcTagArrayOutput {
	return o.ApplyT(func(v LookupVmcResult) []GetVmcTag { return v.Tags }).(GetVmcTagArrayOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o LookupVmcResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.
func (o LookupVmcResultOutput) VcenterHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.VcenterHostname }).(pulumi.StringOutput)
}

// vCenter user name for the specified SDDC. The specified user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.
func (o LookupVmcResultOutput) VcenterUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmcResult) string { return v.VcenterUsername }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVmcResultOutput{})
}
