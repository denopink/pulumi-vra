// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### S
// This is an example of how to read an image profile as data source.
//
// **Image profile data source by its id:**
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.LookupImageProfile(ctx, &GetImageProfileArgs{
//				Filter: pulumi.StringRef("name eq 'foobar'"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// **Vra image profile data source filter by region id:**
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.LookupImageProfile(ctx, &GetImageProfileArgs{
//				RegionId: pulumi.StringRef(vra_image_profile.This.Region_id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// An image profile data source supports the following arguments:
func LookupImageProfile(ctx *pulumi.Context, args *LookupImageProfileArgs, opts ...pulumi.InvokeOption) (*LookupImageProfileResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupImageProfileResult
	err := ctx.Invoke("vra:index/getImageProfile:getImageProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImageProfile.
type LookupImageProfileArgs struct {
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// Filter query string that is supported by vRA multi-cloud IaaS API. Example: regionId eq '<regionId>' and cloudAccountId eq '<cloudAccountId>'.
	Filter *string `pulumi:"filter"`
	// The id of the image profile instance.
	Id *string `pulumi:"id"`
	// Image mapping defined for the corresponding region.
	ImageMappings []GetImageProfileImageMapping `pulumi:"imageMappings"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId *string `pulumi:"regionId"`
}

// A collection of values returned by getImageProfile.
type LookupImageProfileResult struct {
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt string `pulumi:"createdAt"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// The external regionId of the resource.
	ExternalRegionId string  `pulumi:"externalRegionId"`
	Filter           *string `pulumi:"filter"`
	Id               string  `pulumi:"id"`
	// Image mapping defined for the corresponding region.
	ImageMappings []GetImageProfileImageMapping `pulumi:"imageMappings"`
	Name          string                        `pulumi:"name"`
	// Email of the user that owns the entity.
	Owner    string `pulumi:"owner"`
	RegionId string `pulumi:"regionId"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupImageProfileOutput(ctx *pulumi.Context, args LookupImageProfileOutputArgs, opts ...pulumi.InvokeOption) LookupImageProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImageProfileResult, error) {
			args := v.(LookupImageProfileArgs)
			r, err := LookupImageProfile(ctx, &args, opts...)
			var s LookupImageProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupImageProfileResultOutput)
}

// A collection of arguments for invoking getImageProfile.
type LookupImageProfileOutputArgs struct {
	// A human-friendly description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Filter query string that is supported by vRA multi-cloud IaaS API. Example: regionId eq '<regionId>' and cloudAccountId eq '<cloudAccountId>'.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The id of the image profile instance.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Image mapping defined for the corresponding region.
	ImageMappings GetImageProfileImageMappingArrayInput `pulumi:"imageMappings"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId pulumi.StringPtrInput `pulumi:"regionId"`
}

func (LookupImageProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageProfileArgs)(nil)).Elem()
}

// A collection of values returned by getImageProfile.
type LookupImageProfileResultOutput struct{ *pulumi.OutputState }

func (LookupImageProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageProfileResult)(nil)).Elem()
}

func (o LookupImageProfileResultOutput) ToLookupImageProfileResultOutput() LookupImageProfileResultOutput {
	return o
}

func (o LookupImageProfileResultOutput) ToLookupImageProfileResultOutputWithContext(ctx context.Context) LookupImageProfileResultOutput {
	return o
}

// Date when the entity was created. The date is in ISO 6801 and UTC.
func (o LookupImageProfileResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageProfileResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A human-friendly description.
func (o LookupImageProfileResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageProfileResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The external regionId of the resource.
func (o LookupImageProfileResultOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageProfileResult) string { return v.ExternalRegionId }).(pulumi.StringOutput)
}

func (o LookupImageProfileResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageProfileResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LookupImageProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// Image mapping defined for the corresponding region.
func (o LookupImageProfileResultOutput) ImageMappings() GetImageProfileImageMappingArrayOutput {
	return o.ApplyT(func(v LookupImageProfileResult) []GetImageProfileImageMapping { return v.ImageMappings }).(GetImageProfileImageMappingArrayOutput)
}

func (o LookupImageProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o LookupImageProfileResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageProfileResult) string { return v.Owner }).(pulumi.StringOutput)
}

func (o LookupImageProfileResultOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageProfileResult) string { return v.RegionId }).(pulumi.StringOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o LookupImageProfileResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageProfileResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageProfileResultOutput{})
}
