// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package project

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
type Project struct {
	pulumi.CustomResourceState

	// Administrator users or groups associated with the project. Only administrators can manage project's configuration.
	AdministratorRoles ProjectAdministratorRoleArrayOutput `pulumi:"administratorRoles"`
	// A list of administrator users associated with the project. Only administrators can manage project's configuration.
	//
	// Deprecated: To specify the type of principal, please refer administrator_roles.
	Administrators pulumi.StringArrayOutput `pulumi:"administrators"`
	// A list of storage, network, and extensibility constraints to be applied when provisioning through this project.
	Constraints ProjectConstraintsPtrOutput `pulumi:"constraints"`
	// The project custom properties which are added to all requests in this project.
	CustomProperties pulumi.MapOutput `pulumi:"customProperties"`
	// A human-friendly description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The naming template to be used for resources provisioned in this project.
	MachineNamingTemplate pulumi.StringPtrOutput `pulumi:"machineNamingTemplate"`
	// Member users or groups associated with the project.
	MemberRoles ProjectMemberRoleArrayOutput `pulumi:"memberRoles"`
	// A list of member users associated with the project.
	//
	// Deprecated: To specify the type of principal, please refer member_roles.
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringOutput `pulumi:"name"`
	// The timeout that should be used for cloud template operations and provisioning tasks. The timeout is measured in seconds.
	OperationTimeout pulumi.IntPtrOutput `pulumi:"operationTimeout"`
	// The placement policy that will be applied when selecting a cloud zone for provisioning. Must be one of `DEFAULT` or `SPREAD`.
	PlacementPolicy pulumi.StringPtrOutput `pulumi:"placementPolicy"`
	// Specifies whether the resources in this projects are shared or not. If not set default will be used.
	SharedResources pulumi.BoolPtrOutput `pulumi:"sharedResources"`
	// Viewer users or groups associated with the project.
	ViewerRoles ProjectViewerRoleArrayOutput `pulumi:"viewerRoles"`
	// A list of viewer users associated with the project.
	//
	// Deprecated: To specify the type of principal, please refer viewer_roles.
	Viewers pulumi.StringArrayOutput `pulumi:"viewers"`
	// A list of configurations for zone assignment to a project.
	ZoneAssignments ProjectZoneAssignmentArrayOutput `pulumi:"zoneAssignments"`
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOption) (*Project, error) {
	if args == nil {
		args = &ProjectArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource Project
	err := ctx.RegisterResource("vra:project/project:Project", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectState, opts ...pulumi.ResourceOption) (*Project, error) {
	var resource Project
	err := ctx.ReadResource("vra:project/project:Project", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Project resources.
type projectState struct {
	// Administrator users or groups associated with the project. Only administrators can manage project's configuration.
	AdministratorRoles []ProjectAdministratorRole `pulumi:"administratorRoles"`
	// A list of administrator users associated with the project. Only administrators can manage project's configuration.
	//
	// Deprecated: To specify the type of principal, please refer administrator_roles.
	Administrators []string `pulumi:"administrators"`
	// A list of storage, network, and extensibility constraints to be applied when provisioning through this project.
	Constraints *ProjectConstraints `pulumi:"constraints"`
	// The project custom properties which are added to all requests in this project.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// The naming template to be used for resources provisioned in this project.
	MachineNamingTemplate *string `pulumi:"machineNamingTemplate"`
	// Member users or groups associated with the project.
	MemberRoles []ProjectMemberRole `pulumi:"memberRoles"`
	// A list of member users associated with the project.
	//
	// Deprecated: To specify the type of principal, please refer member_roles.
	Members []string `pulumi:"members"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// The timeout that should be used for cloud template operations and provisioning tasks. The timeout is measured in seconds.
	OperationTimeout *int `pulumi:"operationTimeout"`
	// The placement policy that will be applied when selecting a cloud zone for provisioning. Must be one of `DEFAULT` or `SPREAD`.
	PlacementPolicy *string `pulumi:"placementPolicy"`
	// Specifies whether the resources in this projects are shared or not. If not set default will be used.
	SharedResources *bool `pulumi:"sharedResources"`
	// Viewer users or groups associated with the project.
	ViewerRoles []ProjectViewerRole `pulumi:"viewerRoles"`
	// A list of viewer users associated with the project.
	//
	// Deprecated: To specify the type of principal, please refer viewer_roles.
	Viewers []string `pulumi:"viewers"`
	// A list of configurations for zone assignment to a project.
	ZoneAssignments []ProjectZoneAssignment `pulumi:"zoneAssignments"`
}

type ProjectState struct {
	// Administrator users or groups associated with the project. Only administrators can manage project's configuration.
	AdministratorRoles ProjectAdministratorRoleArrayInput
	// A list of administrator users associated with the project. Only administrators can manage project's configuration.
	//
	// Deprecated: To specify the type of principal, please refer administrator_roles.
	Administrators pulumi.StringArrayInput
	// A list of storage, network, and extensibility constraints to be applied when provisioning through this project.
	Constraints ProjectConstraintsPtrInput
	// The project custom properties which are added to all requests in this project.
	CustomProperties pulumi.MapInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// The naming template to be used for resources provisioned in this project.
	MachineNamingTemplate pulumi.StringPtrInput
	// Member users or groups associated with the project.
	MemberRoles ProjectMemberRoleArrayInput
	// A list of member users associated with the project.
	//
	// Deprecated: To specify the type of principal, please refer member_roles.
	Members pulumi.StringArrayInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// The timeout that should be used for cloud template operations and provisioning tasks. The timeout is measured in seconds.
	OperationTimeout pulumi.IntPtrInput
	// The placement policy that will be applied when selecting a cloud zone for provisioning. Must be one of `DEFAULT` or `SPREAD`.
	PlacementPolicy pulumi.StringPtrInput
	// Specifies whether the resources in this projects are shared or not. If not set default will be used.
	SharedResources pulumi.BoolPtrInput
	// Viewer users or groups associated with the project.
	ViewerRoles ProjectViewerRoleArrayInput
	// A list of viewer users associated with the project.
	//
	// Deprecated: To specify the type of principal, please refer viewer_roles.
	Viewers pulumi.StringArrayInput
	// A list of configurations for zone assignment to a project.
	ZoneAssignments ProjectZoneAssignmentArrayInput
}

func (ProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectState)(nil)).Elem()
}

type projectArgs struct {
	// Administrator users or groups associated with the project. Only administrators can manage project's configuration.
	AdministratorRoles []ProjectAdministratorRole `pulumi:"administratorRoles"`
	// A list of administrator users associated with the project. Only administrators can manage project's configuration.
	//
	// Deprecated: To specify the type of principal, please refer administrator_roles.
	Administrators []string `pulumi:"administrators"`
	// A list of storage, network, and extensibility constraints to be applied when provisioning through this project.
	Constraints *ProjectConstraints `pulumi:"constraints"`
	// The project custom properties which are added to all requests in this project.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// The naming template to be used for resources provisioned in this project.
	MachineNamingTemplate *string `pulumi:"machineNamingTemplate"`
	// Member users or groups associated with the project.
	MemberRoles []ProjectMemberRole `pulumi:"memberRoles"`
	// A list of member users associated with the project.
	//
	// Deprecated: To specify the type of principal, please refer member_roles.
	Members []string `pulumi:"members"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// The timeout that should be used for cloud template operations and provisioning tasks. The timeout is measured in seconds.
	OperationTimeout *int `pulumi:"operationTimeout"`
	// The placement policy that will be applied when selecting a cloud zone for provisioning. Must be one of `DEFAULT` or `SPREAD`.
	PlacementPolicy *string `pulumi:"placementPolicy"`
	// Specifies whether the resources in this projects are shared or not. If not set default will be used.
	SharedResources *bool `pulumi:"sharedResources"`
	// Viewer users or groups associated with the project.
	ViewerRoles []ProjectViewerRole `pulumi:"viewerRoles"`
	// A list of viewer users associated with the project.
	//
	// Deprecated: To specify the type of principal, please refer viewer_roles.
	Viewers []string `pulumi:"viewers"`
	// A list of configurations for zone assignment to a project.
	ZoneAssignments []ProjectZoneAssignment `pulumi:"zoneAssignments"`
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// Administrator users or groups associated with the project. Only administrators can manage project's configuration.
	AdministratorRoles ProjectAdministratorRoleArrayInput
	// A list of administrator users associated with the project. Only administrators can manage project's configuration.
	//
	// Deprecated: To specify the type of principal, please refer administrator_roles.
	Administrators pulumi.StringArrayInput
	// A list of storage, network, and extensibility constraints to be applied when provisioning through this project.
	Constraints ProjectConstraintsPtrInput
	// The project custom properties which are added to all requests in this project.
	CustomProperties pulumi.MapInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// The naming template to be used for resources provisioned in this project.
	MachineNamingTemplate pulumi.StringPtrInput
	// Member users or groups associated with the project.
	MemberRoles ProjectMemberRoleArrayInput
	// A list of member users associated with the project.
	//
	// Deprecated: To specify the type of principal, please refer member_roles.
	Members pulumi.StringArrayInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// The timeout that should be used for cloud template operations and provisioning tasks. The timeout is measured in seconds.
	OperationTimeout pulumi.IntPtrInput
	// The placement policy that will be applied when selecting a cloud zone for provisioning. Must be one of `DEFAULT` or `SPREAD`.
	PlacementPolicy pulumi.StringPtrInput
	// Specifies whether the resources in this projects are shared or not. If not set default will be used.
	SharedResources pulumi.BoolPtrInput
	// Viewer users or groups associated with the project.
	ViewerRoles ProjectViewerRoleArrayInput
	// A list of viewer users associated with the project.
	//
	// Deprecated: To specify the type of principal, please refer viewer_roles.
	Viewers pulumi.StringArrayInput
	// A list of configurations for zone assignment to a project.
	ZoneAssignments ProjectZoneAssignmentArrayInput
}

func (ProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectArgs)(nil)).Elem()
}

type ProjectInput interface {
	pulumi.Input

	ToProjectOutput() ProjectOutput
	ToProjectOutputWithContext(ctx context.Context) ProjectOutput
}

func (*Project) ElementType() reflect.Type {
	return reflect.TypeOf((**Project)(nil)).Elem()
}

func (i *Project) ToProjectOutput() ProjectOutput {
	return i.ToProjectOutputWithContext(context.Background())
}

func (i *Project) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOutput)
}

// ProjectArrayInput is an input type that accepts ProjectArray and ProjectArrayOutput values.
// You can construct a concrete instance of `ProjectArrayInput` via:
//
//	ProjectArray{ ProjectArgs{...} }
type ProjectArrayInput interface {
	pulumi.Input

	ToProjectArrayOutput() ProjectArrayOutput
	ToProjectArrayOutputWithContext(context.Context) ProjectArrayOutput
}

type ProjectArray []ProjectInput

func (ProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Project)(nil)).Elem()
}

func (i ProjectArray) ToProjectArrayOutput() ProjectArrayOutput {
	return i.ToProjectArrayOutputWithContext(context.Background())
}

func (i ProjectArray) ToProjectArrayOutputWithContext(ctx context.Context) ProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArrayOutput)
}

// ProjectMapInput is an input type that accepts ProjectMap and ProjectMapOutput values.
// You can construct a concrete instance of `ProjectMapInput` via:
//
//	ProjectMap{ "key": ProjectArgs{...} }
type ProjectMapInput interface {
	pulumi.Input

	ToProjectMapOutput() ProjectMapOutput
	ToProjectMapOutputWithContext(context.Context) ProjectMapOutput
}

type ProjectMap map[string]ProjectInput

func (ProjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Project)(nil)).Elem()
}

func (i ProjectMap) ToProjectMapOutput() ProjectMapOutput {
	return i.ToProjectMapOutputWithContext(context.Background())
}

func (i ProjectMap) ToProjectMapOutputWithContext(ctx context.Context) ProjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectMapOutput)
}

type ProjectOutput struct{ *pulumi.OutputState }

func (ProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Project)(nil)).Elem()
}

func (o ProjectOutput) ToProjectOutput() ProjectOutput {
	return o
}

func (o ProjectOutput) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return o
}

// Administrator users or groups associated with the project. Only administrators can manage project's configuration.
func (o ProjectOutput) AdministratorRoles() ProjectAdministratorRoleArrayOutput {
	return o.ApplyT(func(v *Project) ProjectAdministratorRoleArrayOutput { return v.AdministratorRoles }).(ProjectAdministratorRoleArrayOutput)
}

// A list of administrator users associated with the project. Only administrators can manage project's configuration.
//
// Deprecated: To specify the type of principal, please refer administrator_roles.
func (o ProjectOutput) Administrators() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Project) pulumi.StringArrayOutput { return v.Administrators }).(pulumi.StringArrayOutput)
}

// A list of storage, network, and extensibility constraints to be applied when provisioning through this project.
func (o ProjectOutput) Constraints() ProjectConstraintsPtrOutput {
	return o.ApplyT(func(v *Project) ProjectConstraintsPtrOutput { return v.Constraints }).(ProjectConstraintsPtrOutput)
}

// The project custom properties which are added to all requests in this project.
func (o ProjectOutput) CustomProperties() pulumi.MapOutput {
	return o.ApplyT(func(v *Project) pulumi.MapOutput { return v.CustomProperties }).(pulumi.MapOutput)
}

// A human-friendly description.
func (o ProjectOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The naming template to be used for resources provisioned in this project.
func (o ProjectOutput) MachineNamingTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.MachineNamingTemplate }).(pulumi.StringPtrOutput)
}

// Member users or groups associated with the project.
func (o ProjectOutput) MemberRoles() ProjectMemberRoleArrayOutput {
	return o.ApplyT(func(v *Project) ProjectMemberRoleArrayOutput { return v.MemberRoles }).(ProjectMemberRoleArrayOutput)
}

// A list of member users associated with the project.
//
// Deprecated: To specify the type of principal, please refer member_roles.
func (o ProjectOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Project) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o ProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The timeout that should be used for cloud template operations and provisioning tasks. The timeout is measured in seconds.
func (o ProjectOutput) OperationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.IntPtrOutput { return v.OperationTimeout }).(pulumi.IntPtrOutput)
}

// The placement policy that will be applied when selecting a cloud zone for provisioning. Must be one of `DEFAULT` or `SPREAD`.
func (o ProjectOutput) PlacementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.PlacementPolicy }).(pulumi.StringPtrOutput)
}

// Specifies whether the resources in this projects are shared or not. If not set default will be used.
func (o ProjectOutput) SharedResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.BoolPtrOutput { return v.SharedResources }).(pulumi.BoolPtrOutput)
}

// Viewer users or groups associated with the project.
func (o ProjectOutput) ViewerRoles() ProjectViewerRoleArrayOutput {
	return o.ApplyT(func(v *Project) ProjectViewerRoleArrayOutput { return v.ViewerRoles }).(ProjectViewerRoleArrayOutput)
}

// A list of viewer users associated with the project.
//
// Deprecated: To specify the type of principal, please refer viewer_roles.
func (o ProjectOutput) Viewers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Project) pulumi.StringArrayOutput { return v.Viewers }).(pulumi.StringArrayOutput)
}

// A list of configurations for zone assignment to a project.
func (o ProjectOutput) ZoneAssignments() ProjectZoneAssignmentArrayOutput {
	return o.ApplyT(func(v *Project) ProjectZoneAssignmentArrayOutput { return v.ZoneAssignments }).(ProjectZoneAssignmentArrayOutput)
}

type ProjectArrayOutput struct{ *pulumi.OutputState }

func (ProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Project)(nil)).Elem()
}

func (o ProjectArrayOutput) ToProjectArrayOutput() ProjectArrayOutput {
	return o
}

func (o ProjectArrayOutput) ToProjectArrayOutputWithContext(ctx context.Context) ProjectArrayOutput {
	return o
}

func (o ProjectArrayOutput) Index(i pulumi.IntInput) ProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Project {
		return vs[0].([]*Project)[vs[1].(int)]
	}).(ProjectOutput)
}

type ProjectMapOutput struct{ *pulumi.OutputState }

func (ProjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Project)(nil)).Elem()
}

func (o ProjectMapOutput) ToProjectMapOutput() ProjectMapOutput {
	return o
}

func (o ProjectMapOutput) ToProjectMapOutputWithContext(ctx context.Context) ProjectMapOutput {
	return o
}

func (o ProjectMapOutput) MapIndex(k pulumi.StringInput) ProjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Project {
		return vs[0].(map[string]*Project)[vs[1].(string)]
	}).(ProjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectInput)(nil)).Elem(), &Project{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectArrayInput)(nil)).Elem(), ProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectMapInput)(nil)).Elem(), ProjectMap{})
	pulumi.RegisterOutputType(ProjectOutput{})
	pulumi.RegisterOutputType(ProjectArrayOutput{})
	pulumi.RegisterOutputType(ProjectMapOutput{})
}
