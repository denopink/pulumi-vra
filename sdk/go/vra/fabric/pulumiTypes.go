// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// ComputeLinkInput is an input type that accepts ComputeLinkArgs and ComputeLinkOutput values.
// You can construct a concrete instance of `ComputeLinkInput` via:
//
//	ComputeLinkArgs{...}
type ComputeLinkInput interface {
	pulumi.Input

	ToComputeLinkOutput() ComputeLinkOutput
	ToComputeLinkOutputWithContext(context.Context) ComputeLinkOutput
}

type ComputeLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (ComputeLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeLink)(nil)).Elem()
}

func (i ComputeLinkArgs) ToComputeLinkOutput() ComputeLinkOutput {
	return i.ToComputeLinkOutputWithContext(context.Background())
}

func (i ComputeLinkArgs) ToComputeLinkOutputWithContext(ctx context.Context) ComputeLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeLinkOutput)
}

// ComputeLinkArrayInput is an input type that accepts ComputeLinkArray and ComputeLinkArrayOutput values.
// You can construct a concrete instance of `ComputeLinkArrayInput` via:
//
//	ComputeLinkArray{ ComputeLinkArgs{...} }
type ComputeLinkArrayInput interface {
	pulumi.Input

	ToComputeLinkArrayOutput() ComputeLinkArrayOutput
	ToComputeLinkArrayOutputWithContext(context.Context) ComputeLinkArrayOutput
}

type ComputeLinkArray []ComputeLinkInput

func (ComputeLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeLink)(nil)).Elem()
}

func (i ComputeLinkArray) ToComputeLinkArrayOutput() ComputeLinkArrayOutput {
	return i.ToComputeLinkArrayOutputWithContext(context.Background())
}

func (i ComputeLinkArray) ToComputeLinkArrayOutputWithContext(ctx context.Context) ComputeLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeLinkArrayOutput)
}

type ComputeLinkOutput struct{ *pulumi.OutputState }

func (ComputeLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeLink)(nil)).Elem()
}

func (o ComputeLinkOutput) ToComputeLinkOutput() ComputeLinkOutput {
	return o
}

func (o ComputeLinkOutput) ToComputeLinkOutputWithContext(ctx context.Context) ComputeLinkOutput {
	return o
}

func (o ComputeLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o ComputeLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o ComputeLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeLink) string { return v.Rel }).(pulumi.StringOutput)
}

type ComputeLinkArrayOutput struct{ *pulumi.OutputState }

func (ComputeLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeLink)(nil)).Elem()
}

func (o ComputeLinkArrayOutput) ToComputeLinkArrayOutput() ComputeLinkArrayOutput {
	return o
}

func (o ComputeLinkArrayOutput) ToComputeLinkArrayOutputWithContext(ctx context.Context) ComputeLinkArrayOutput {
	return o
}

func (o ComputeLinkArrayOutput) Index(i pulumi.IntInput) ComputeLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeLink {
		return vs[0].([]ComputeLink)[vs[1].(int)]
	}).(ComputeLinkOutput)
}

type ComputeTag struct {
	// Tag’s key.
	Key string `pulumi:"key"`
	// Tag’s value.
	Value string `pulumi:"value"`
}

// ComputeTagInput is an input type that accepts ComputeTagArgs and ComputeTagOutput values.
// You can construct a concrete instance of `ComputeTagInput` via:
//
//	ComputeTagArgs{...}
type ComputeTagInput interface {
	pulumi.Input

	ToComputeTagOutput() ComputeTagOutput
	ToComputeTagOutputWithContext(context.Context) ComputeTagOutput
}

type ComputeTagArgs struct {
	// Tag’s key.
	Key pulumi.StringInput `pulumi:"key"`
	// Tag’s value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ComputeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeTag)(nil)).Elem()
}

func (i ComputeTagArgs) ToComputeTagOutput() ComputeTagOutput {
	return i.ToComputeTagOutputWithContext(context.Background())
}

func (i ComputeTagArgs) ToComputeTagOutputWithContext(ctx context.Context) ComputeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeTagOutput)
}

// ComputeTagArrayInput is an input type that accepts ComputeTagArray and ComputeTagArrayOutput values.
// You can construct a concrete instance of `ComputeTagArrayInput` via:
//
//	ComputeTagArray{ ComputeTagArgs{...} }
type ComputeTagArrayInput interface {
	pulumi.Input

	ToComputeTagArrayOutput() ComputeTagArrayOutput
	ToComputeTagArrayOutputWithContext(context.Context) ComputeTagArrayOutput
}

type ComputeTagArray []ComputeTagInput

func (ComputeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeTag)(nil)).Elem()
}

func (i ComputeTagArray) ToComputeTagArrayOutput() ComputeTagArrayOutput {
	return i.ToComputeTagArrayOutputWithContext(context.Background())
}

func (i ComputeTagArray) ToComputeTagArrayOutputWithContext(ctx context.Context) ComputeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeTagArrayOutput)
}

type ComputeTagOutput struct{ *pulumi.OutputState }

func (ComputeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeTag)(nil)).Elem()
}

func (o ComputeTagOutput) ToComputeTagOutput() ComputeTagOutput {
	return o
}

func (o ComputeTagOutput) ToComputeTagOutputWithContext(ctx context.Context) ComputeTagOutput {
	return o
}

// Tag’s key.
func (o ComputeTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeTag) string { return v.Key }).(pulumi.StringOutput)
}

// Tag’s value.
func (o ComputeTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeTag) string { return v.Value }).(pulumi.StringOutput)
}

type ComputeTagArrayOutput struct{ *pulumi.OutputState }

func (ComputeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeTag)(nil)).Elem()
}

func (o ComputeTagArrayOutput) ToComputeTagArrayOutput() ComputeTagArrayOutput {
	return o
}

func (o ComputeTagArrayOutput) ToComputeTagArrayOutputWithContext(ctx context.Context) ComputeTagArrayOutput {
	return o
}

func (o ComputeTagArrayOutput) Index(i pulumi.IntInput) ComputeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeTag {
		return vs[0].([]ComputeTag)[vs[1].(int)]
	}).(ComputeTagOutput)
}

type DatastoreVSphereLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// DatastoreVSphereLinkInput is an input type that accepts DatastoreVSphereLinkArgs and DatastoreVSphereLinkOutput values.
// You can construct a concrete instance of `DatastoreVSphereLinkInput` via:
//
//	DatastoreVSphereLinkArgs{...}
type DatastoreVSphereLinkInput interface {
	pulumi.Input

	ToDatastoreVSphereLinkOutput() DatastoreVSphereLinkOutput
	ToDatastoreVSphereLinkOutputWithContext(context.Context) DatastoreVSphereLinkOutput
}

type DatastoreVSphereLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (DatastoreVSphereLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreVSphereLink)(nil)).Elem()
}

func (i DatastoreVSphereLinkArgs) ToDatastoreVSphereLinkOutput() DatastoreVSphereLinkOutput {
	return i.ToDatastoreVSphereLinkOutputWithContext(context.Background())
}

func (i DatastoreVSphereLinkArgs) ToDatastoreVSphereLinkOutputWithContext(ctx context.Context) DatastoreVSphereLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreVSphereLinkOutput)
}

// DatastoreVSphereLinkArrayInput is an input type that accepts DatastoreVSphereLinkArray and DatastoreVSphereLinkArrayOutput values.
// You can construct a concrete instance of `DatastoreVSphereLinkArrayInput` via:
//
//	DatastoreVSphereLinkArray{ DatastoreVSphereLinkArgs{...} }
type DatastoreVSphereLinkArrayInput interface {
	pulumi.Input

	ToDatastoreVSphereLinkArrayOutput() DatastoreVSphereLinkArrayOutput
	ToDatastoreVSphereLinkArrayOutputWithContext(context.Context) DatastoreVSphereLinkArrayOutput
}

type DatastoreVSphereLinkArray []DatastoreVSphereLinkInput

func (DatastoreVSphereLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastoreVSphereLink)(nil)).Elem()
}

func (i DatastoreVSphereLinkArray) ToDatastoreVSphereLinkArrayOutput() DatastoreVSphereLinkArrayOutput {
	return i.ToDatastoreVSphereLinkArrayOutputWithContext(context.Background())
}

func (i DatastoreVSphereLinkArray) ToDatastoreVSphereLinkArrayOutputWithContext(ctx context.Context) DatastoreVSphereLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreVSphereLinkArrayOutput)
}

type DatastoreVSphereLinkOutput struct{ *pulumi.OutputState }

func (DatastoreVSphereLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreVSphereLink)(nil)).Elem()
}

func (o DatastoreVSphereLinkOutput) ToDatastoreVSphereLinkOutput() DatastoreVSphereLinkOutput {
	return o
}

func (o DatastoreVSphereLinkOutput) ToDatastoreVSphereLinkOutputWithContext(ctx context.Context) DatastoreVSphereLinkOutput {
	return o
}

func (o DatastoreVSphereLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreVSphereLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o DatastoreVSphereLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatastoreVSphereLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o DatastoreVSphereLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreVSphereLink) string { return v.Rel }).(pulumi.StringOutput)
}

type DatastoreVSphereLinkArrayOutput struct{ *pulumi.OutputState }

func (DatastoreVSphereLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastoreVSphereLink)(nil)).Elem()
}

func (o DatastoreVSphereLinkArrayOutput) ToDatastoreVSphereLinkArrayOutput() DatastoreVSphereLinkArrayOutput {
	return o
}

func (o DatastoreVSphereLinkArrayOutput) ToDatastoreVSphereLinkArrayOutputWithContext(ctx context.Context) DatastoreVSphereLinkArrayOutput {
	return o
}

func (o DatastoreVSphereLinkArrayOutput) Index(i pulumi.IntInput) DatastoreVSphereLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatastoreVSphereLink {
		return vs[0].([]DatastoreVSphereLink)[vs[1].(int)]
	}).(DatastoreVSphereLinkOutput)
}

type DatastoreVSphereTag struct {
	// Tag’s key.
	Key string `pulumi:"key"`
	// Tag’s value.
	Value string `pulumi:"value"`
}

// DatastoreVSphereTagInput is an input type that accepts DatastoreVSphereTagArgs and DatastoreVSphereTagOutput values.
// You can construct a concrete instance of `DatastoreVSphereTagInput` via:
//
//	DatastoreVSphereTagArgs{...}
type DatastoreVSphereTagInput interface {
	pulumi.Input

	ToDatastoreVSphereTagOutput() DatastoreVSphereTagOutput
	ToDatastoreVSphereTagOutputWithContext(context.Context) DatastoreVSphereTagOutput
}

type DatastoreVSphereTagArgs struct {
	// Tag’s key.
	Key pulumi.StringInput `pulumi:"key"`
	// Tag’s value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatastoreVSphereTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreVSphereTag)(nil)).Elem()
}

func (i DatastoreVSphereTagArgs) ToDatastoreVSphereTagOutput() DatastoreVSphereTagOutput {
	return i.ToDatastoreVSphereTagOutputWithContext(context.Background())
}

func (i DatastoreVSphereTagArgs) ToDatastoreVSphereTagOutputWithContext(ctx context.Context) DatastoreVSphereTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreVSphereTagOutput)
}

// DatastoreVSphereTagArrayInput is an input type that accepts DatastoreVSphereTagArray and DatastoreVSphereTagArrayOutput values.
// You can construct a concrete instance of `DatastoreVSphereTagArrayInput` via:
//
//	DatastoreVSphereTagArray{ DatastoreVSphereTagArgs{...} }
type DatastoreVSphereTagArrayInput interface {
	pulumi.Input

	ToDatastoreVSphereTagArrayOutput() DatastoreVSphereTagArrayOutput
	ToDatastoreVSphereTagArrayOutputWithContext(context.Context) DatastoreVSphereTagArrayOutput
}

type DatastoreVSphereTagArray []DatastoreVSphereTagInput

func (DatastoreVSphereTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastoreVSphereTag)(nil)).Elem()
}

func (i DatastoreVSphereTagArray) ToDatastoreVSphereTagArrayOutput() DatastoreVSphereTagArrayOutput {
	return i.ToDatastoreVSphereTagArrayOutputWithContext(context.Background())
}

func (i DatastoreVSphereTagArray) ToDatastoreVSphereTagArrayOutputWithContext(ctx context.Context) DatastoreVSphereTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreVSphereTagArrayOutput)
}

type DatastoreVSphereTagOutput struct{ *pulumi.OutputState }

func (DatastoreVSphereTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreVSphereTag)(nil)).Elem()
}

func (o DatastoreVSphereTagOutput) ToDatastoreVSphereTagOutput() DatastoreVSphereTagOutput {
	return o
}

func (o DatastoreVSphereTagOutput) ToDatastoreVSphereTagOutputWithContext(ctx context.Context) DatastoreVSphereTagOutput {
	return o
}

// Tag’s key.
func (o DatastoreVSphereTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreVSphereTag) string { return v.Key }).(pulumi.StringOutput)
}

// Tag’s value.
func (o DatastoreVSphereTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreVSphereTag) string { return v.Value }).(pulumi.StringOutput)
}

type DatastoreVSphereTagArrayOutput struct{ *pulumi.OutputState }

func (DatastoreVSphereTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastoreVSphereTag)(nil)).Elem()
}

func (o DatastoreVSphereTagArrayOutput) ToDatastoreVSphereTagArrayOutput() DatastoreVSphereTagArrayOutput {
	return o
}

func (o DatastoreVSphereTagArrayOutput) ToDatastoreVSphereTagArrayOutputWithContext(ctx context.Context) DatastoreVSphereTagArrayOutput {
	return o
}

func (o DatastoreVSphereTagArrayOutput) Index(i pulumi.IntInput) DatastoreVSphereTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatastoreVSphereTag {
		return vs[0].([]DatastoreVSphereTag)[vs[1].(int)]
	}).(DatastoreVSphereTagOutput)
}

type NetworkVSphereLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// NetworkVSphereLinkInput is an input type that accepts NetworkVSphereLinkArgs and NetworkVSphereLinkOutput values.
// You can construct a concrete instance of `NetworkVSphereLinkInput` via:
//
//	NetworkVSphereLinkArgs{...}
type NetworkVSphereLinkInput interface {
	pulumi.Input

	ToNetworkVSphereLinkOutput() NetworkVSphereLinkOutput
	ToNetworkVSphereLinkOutputWithContext(context.Context) NetworkVSphereLinkOutput
}

type NetworkVSphereLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (NetworkVSphereLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkVSphereLink)(nil)).Elem()
}

func (i NetworkVSphereLinkArgs) ToNetworkVSphereLinkOutput() NetworkVSphereLinkOutput {
	return i.ToNetworkVSphereLinkOutputWithContext(context.Background())
}

func (i NetworkVSphereLinkArgs) ToNetworkVSphereLinkOutputWithContext(ctx context.Context) NetworkVSphereLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkVSphereLinkOutput)
}

// NetworkVSphereLinkArrayInput is an input type that accepts NetworkVSphereLinkArray and NetworkVSphereLinkArrayOutput values.
// You can construct a concrete instance of `NetworkVSphereLinkArrayInput` via:
//
//	NetworkVSphereLinkArray{ NetworkVSphereLinkArgs{...} }
type NetworkVSphereLinkArrayInput interface {
	pulumi.Input

	ToNetworkVSphereLinkArrayOutput() NetworkVSphereLinkArrayOutput
	ToNetworkVSphereLinkArrayOutputWithContext(context.Context) NetworkVSphereLinkArrayOutput
}

type NetworkVSphereLinkArray []NetworkVSphereLinkInput

func (NetworkVSphereLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkVSphereLink)(nil)).Elem()
}

func (i NetworkVSphereLinkArray) ToNetworkVSphereLinkArrayOutput() NetworkVSphereLinkArrayOutput {
	return i.ToNetworkVSphereLinkArrayOutputWithContext(context.Background())
}

func (i NetworkVSphereLinkArray) ToNetworkVSphereLinkArrayOutputWithContext(ctx context.Context) NetworkVSphereLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkVSphereLinkArrayOutput)
}

type NetworkVSphereLinkOutput struct{ *pulumi.OutputState }

func (NetworkVSphereLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkVSphereLink)(nil)).Elem()
}

func (o NetworkVSphereLinkOutput) ToNetworkVSphereLinkOutput() NetworkVSphereLinkOutput {
	return o
}

func (o NetworkVSphereLinkOutput) ToNetworkVSphereLinkOutputWithContext(ctx context.Context) NetworkVSphereLinkOutput {
	return o
}

func (o NetworkVSphereLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkVSphereLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o NetworkVSphereLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkVSphereLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o NetworkVSphereLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkVSphereLink) string { return v.Rel }).(pulumi.StringOutput)
}

type NetworkVSphereLinkArrayOutput struct{ *pulumi.OutputState }

func (NetworkVSphereLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkVSphereLink)(nil)).Elem()
}

func (o NetworkVSphereLinkArrayOutput) ToNetworkVSphereLinkArrayOutput() NetworkVSphereLinkArrayOutput {
	return o
}

func (o NetworkVSphereLinkArrayOutput) ToNetworkVSphereLinkArrayOutputWithContext(ctx context.Context) NetworkVSphereLinkArrayOutput {
	return o
}

func (o NetworkVSphereLinkArrayOutput) Index(i pulumi.IntInput) NetworkVSphereLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkVSphereLink {
		return vs[0].([]NetworkVSphereLink)[vs[1].(int)]
	}).(NetworkVSphereLinkOutput)
}

type NetworkVSphereTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// NetworkVSphereTagInput is an input type that accepts NetworkVSphereTagArgs and NetworkVSphereTagOutput values.
// You can construct a concrete instance of `NetworkVSphereTagInput` via:
//
//	NetworkVSphereTagArgs{...}
type NetworkVSphereTagInput interface {
	pulumi.Input

	ToNetworkVSphereTagOutput() NetworkVSphereTagOutput
	ToNetworkVSphereTagOutputWithContext(context.Context) NetworkVSphereTagOutput
}

type NetworkVSphereTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkVSphereTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkVSphereTag)(nil)).Elem()
}

func (i NetworkVSphereTagArgs) ToNetworkVSphereTagOutput() NetworkVSphereTagOutput {
	return i.ToNetworkVSphereTagOutputWithContext(context.Background())
}

func (i NetworkVSphereTagArgs) ToNetworkVSphereTagOutputWithContext(ctx context.Context) NetworkVSphereTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkVSphereTagOutput)
}

// NetworkVSphereTagArrayInput is an input type that accepts NetworkVSphereTagArray and NetworkVSphereTagArrayOutput values.
// You can construct a concrete instance of `NetworkVSphereTagArrayInput` via:
//
//	NetworkVSphereTagArray{ NetworkVSphereTagArgs{...} }
type NetworkVSphereTagArrayInput interface {
	pulumi.Input

	ToNetworkVSphereTagArrayOutput() NetworkVSphereTagArrayOutput
	ToNetworkVSphereTagArrayOutputWithContext(context.Context) NetworkVSphereTagArrayOutput
}

type NetworkVSphereTagArray []NetworkVSphereTagInput

func (NetworkVSphereTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkVSphereTag)(nil)).Elem()
}

func (i NetworkVSphereTagArray) ToNetworkVSphereTagArrayOutput() NetworkVSphereTagArrayOutput {
	return i.ToNetworkVSphereTagArrayOutputWithContext(context.Background())
}

func (i NetworkVSphereTagArray) ToNetworkVSphereTagArrayOutputWithContext(ctx context.Context) NetworkVSphereTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkVSphereTagArrayOutput)
}

type NetworkVSphereTagOutput struct{ *pulumi.OutputState }

func (NetworkVSphereTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkVSphereTag)(nil)).Elem()
}

func (o NetworkVSphereTagOutput) ToNetworkVSphereTagOutput() NetworkVSphereTagOutput {
	return o
}

func (o NetworkVSphereTagOutput) ToNetworkVSphereTagOutputWithContext(ctx context.Context) NetworkVSphereTagOutput {
	return o
}

func (o NetworkVSphereTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkVSphereTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o NetworkVSphereTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkVSphereTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkVSphereTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkVSphereTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkVSphereTag)(nil)).Elem()
}

func (o NetworkVSphereTagArrayOutput) ToNetworkVSphereTagArrayOutput() NetworkVSphereTagArrayOutput {
	return o
}

func (o NetworkVSphereTagArrayOutput) ToNetworkVSphereTagArrayOutputWithContext(ctx context.Context) NetworkVSphereTagArrayOutput {
	return o
}

func (o NetworkVSphereTagArrayOutput) Index(i pulumi.IntInput) NetworkVSphereTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkVSphereTag {
		return vs[0].([]NetworkVSphereTag)[vs[1].(int)]
	}).(NetworkVSphereTagOutput)
}

type GetComputeLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetComputeLinkInput is an input type that accepts GetComputeLinkArgs and GetComputeLinkOutput values.
// You can construct a concrete instance of `GetComputeLinkInput` via:
//
//	GetComputeLinkArgs{...}
type GetComputeLinkInput interface {
	pulumi.Input

	ToGetComputeLinkOutput() GetComputeLinkOutput
	ToGetComputeLinkOutputWithContext(context.Context) GetComputeLinkOutput
}

type GetComputeLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetComputeLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeLink)(nil)).Elem()
}

func (i GetComputeLinkArgs) ToGetComputeLinkOutput() GetComputeLinkOutput {
	return i.ToGetComputeLinkOutputWithContext(context.Background())
}

func (i GetComputeLinkArgs) ToGetComputeLinkOutputWithContext(ctx context.Context) GetComputeLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeLinkOutput)
}

// GetComputeLinkArrayInput is an input type that accepts GetComputeLinkArray and GetComputeLinkArrayOutput values.
// You can construct a concrete instance of `GetComputeLinkArrayInput` via:
//
//	GetComputeLinkArray{ GetComputeLinkArgs{...} }
type GetComputeLinkArrayInput interface {
	pulumi.Input

	ToGetComputeLinkArrayOutput() GetComputeLinkArrayOutput
	ToGetComputeLinkArrayOutputWithContext(context.Context) GetComputeLinkArrayOutput
}

type GetComputeLinkArray []GetComputeLinkInput

func (GetComputeLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeLink)(nil)).Elem()
}

func (i GetComputeLinkArray) ToGetComputeLinkArrayOutput() GetComputeLinkArrayOutput {
	return i.ToGetComputeLinkArrayOutputWithContext(context.Background())
}

func (i GetComputeLinkArray) ToGetComputeLinkArrayOutputWithContext(ctx context.Context) GetComputeLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeLinkArrayOutput)
}

type GetComputeLinkOutput struct{ *pulumi.OutputState }

func (GetComputeLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeLink)(nil)).Elem()
}

func (o GetComputeLinkOutput) ToGetComputeLinkOutput() GetComputeLinkOutput {
	return o
}

func (o GetComputeLinkOutput) ToGetComputeLinkOutputWithContext(ctx context.Context) GetComputeLinkOutput {
	return o
}

func (o GetComputeLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetComputeLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetComputeLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetComputeLinkArrayOutput struct{ *pulumi.OutputState }

func (GetComputeLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeLink)(nil)).Elem()
}

func (o GetComputeLinkArrayOutput) ToGetComputeLinkArrayOutput() GetComputeLinkArrayOutput {
	return o
}

func (o GetComputeLinkArrayOutput) ToGetComputeLinkArrayOutputWithContext(ctx context.Context) GetComputeLinkArrayOutput {
	return o
}

func (o GetComputeLinkArrayOutput) Index(i pulumi.IntInput) GetComputeLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeLink {
		return vs[0].([]GetComputeLink)[vs[1].(int)]
	}).(GetComputeLinkOutput)
}

type GetComputeTag struct {
	// Tag’s key.
	Key string `pulumi:"key"`
	// Tag’s value.
	Value string `pulumi:"value"`
}

// GetComputeTagInput is an input type that accepts GetComputeTagArgs and GetComputeTagOutput values.
// You can construct a concrete instance of `GetComputeTagInput` via:
//
//	GetComputeTagArgs{...}
type GetComputeTagInput interface {
	pulumi.Input

	ToGetComputeTagOutput() GetComputeTagOutput
	ToGetComputeTagOutputWithContext(context.Context) GetComputeTagOutput
}

type GetComputeTagArgs struct {
	// Tag’s key.
	Key pulumi.StringInput `pulumi:"key"`
	// Tag’s value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetComputeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeTag)(nil)).Elem()
}

func (i GetComputeTagArgs) ToGetComputeTagOutput() GetComputeTagOutput {
	return i.ToGetComputeTagOutputWithContext(context.Background())
}

func (i GetComputeTagArgs) ToGetComputeTagOutputWithContext(ctx context.Context) GetComputeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeTagOutput)
}

// GetComputeTagArrayInput is an input type that accepts GetComputeTagArray and GetComputeTagArrayOutput values.
// You can construct a concrete instance of `GetComputeTagArrayInput` via:
//
//	GetComputeTagArray{ GetComputeTagArgs{...} }
type GetComputeTagArrayInput interface {
	pulumi.Input

	ToGetComputeTagArrayOutput() GetComputeTagArrayOutput
	ToGetComputeTagArrayOutputWithContext(context.Context) GetComputeTagArrayOutput
}

type GetComputeTagArray []GetComputeTagInput

func (GetComputeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeTag)(nil)).Elem()
}

func (i GetComputeTagArray) ToGetComputeTagArrayOutput() GetComputeTagArrayOutput {
	return i.ToGetComputeTagArrayOutputWithContext(context.Background())
}

func (i GetComputeTagArray) ToGetComputeTagArrayOutputWithContext(ctx context.Context) GetComputeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeTagArrayOutput)
}

type GetComputeTagOutput struct{ *pulumi.OutputState }

func (GetComputeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeTag)(nil)).Elem()
}

func (o GetComputeTagOutput) ToGetComputeTagOutput() GetComputeTagOutput {
	return o
}

func (o GetComputeTagOutput) ToGetComputeTagOutputWithContext(ctx context.Context) GetComputeTagOutput {
	return o
}

// Tag’s key.
func (o GetComputeTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeTag) string { return v.Key }).(pulumi.StringOutput)
}

// Tag’s value.
func (o GetComputeTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetComputeTagArrayOutput struct{ *pulumi.OutputState }

func (GetComputeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeTag)(nil)).Elem()
}

func (o GetComputeTagArrayOutput) ToGetComputeTagArrayOutput() GetComputeTagArrayOutput {
	return o
}

func (o GetComputeTagArrayOutput) ToGetComputeTagArrayOutputWithContext(ctx context.Context) GetComputeTagArrayOutput {
	return o
}

func (o GetComputeTagArrayOutput) Index(i pulumi.IntInput) GetComputeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeTag {
		return vs[0].([]GetComputeTag)[vs[1].(int)]
	}).(GetComputeTagOutput)
}

type GetDatastoreVSphereLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetDatastoreVSphereLinkInput is an input type that accepts GetDatastoreVSphereLinkArgs and GetDatastoreVSphereLinkOutput values.
// You can construct a concrete instance of `GetDatastoreVSphereLinkInput` via:
//
//	GetDatastoreVSphereLinkArgs{...}
type GetDatastoreVSphereLinkInput interface {
	pulumi.Input

	ToGetDatastoreVSphereLinkOutput() GetDatastoreVSphereLinkOutput
	ToGetDatastoreVSphereLinkOutputWithContext(context.Context) GetDatastoreVSphereLinkOutput
}

type GetDatastoreVSphereLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetDatastoreVSphereLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatastoreVSphereLink)(nil)).Elem()
}

func (i GetDatastoreVSphereLinkArgs) ToGetDatastoreVSphereLinkOutput() GetDatastoreVSphereLinkOutput {
	return i.ToGetDatastoreVSphereLinkOutputWithContext(context.Background())
}

func (i GetDatastoreVSphereLinkArgs) ToGetDatastoreVSphereLinkOutputWithContext(ctx context.Context) GetDatastoreVSphereLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatastoreVSphereLinkOutput)
}

// GetDatastoreVSphereLinkArrayInput is an input type that accepts GetDatastoreVSphereLinkArray and GetDatastoreVSphereLinkArrayOutput values.
// You can construct a concrete instance of `GetDatastoreVSphereLinkArrayInput` via:
//
//	GetDatastoreVSphereLinkArray{ GetDatastoreVSphereLinkArgs{...} }
type GetDatastoreVSphereLinkArrayInput interface {
	pulumi.Input

	ToGetDatastoreVSphereLinkArrayOutput() GetDatastoreVSphereLinkArrayOutput
	ToGetDatastoreVSphereLinkArrayOutputWithContext(context.Context) GetDatastoreVSphereLinkArrayOutput
}

type GetDatastoreVSphereLinkArray []GetDatastoreVSphereLinkInput

func (GetDatastoreVSphereLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatastoreVSphereLink)(nil)).Elem()
}

func (i GetDatastoreVSphereLinkArray) ToGetDatastoreVSphereLinkArrayOutput() GetDatastoreVSphereLinkArrayOutput {
	return i.ToGetDatastoreVSphereLinkArrayOutputWithContext(context.Background())
}

func (i GetDatastoreVSphereLinkArray) ToGetDatastoreVSphereLinkArrayOutputWithContext(ctx context.Context) GetDatastoreVSphereLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatastoreVSphereLinkArrayOutput)
}

type GetDatastoreVSphereLinkOutput struct{ *pulumi.OutputState }

func (GetDatastoreVSphereLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatastoreVSphereLink)(nil)).Elem()
}

func (o GetDatastoreVSphereLinkOutput) ToGetDatastoreVSphereLinkOutput() GetDatastoreVSphereLinkOutput {
	return o
}

func (o GetDatastoreVSphereLinkOutput) ToGetDatastoreVSphereLinkOutputWithContext(ctx context.Context) GetDatastoreVSphereLinkOutput {
	return o
}

func (o GetDatastoreVSphereLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatastoreVSphereLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetDatastoreVSphereLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatastoreVSphereLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetDatastoreVSphereLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatastoreVSphereLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetDatastoreVSphereLinkArrayOutput struct{ *pulumi.OutputState }

func (GetDatastoreVSphereLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatastoreVSphereLink)(nil)).Elem()
}

func (o GetDatastoreVSphereLinkArrayOutput) ToGetDatastoreVSphereLinkArrayOutput() GetDatastoreVSphereLinkArrayOutput {
	return o
}

func (o GetDatastoreVSphereLinkArrayOutput) ToGetDatastoreVSphereLinkArrayOutputWithContext(ctx context.Context) GetDatastoreVSphereLinkArrayOutput {
	return o
}

func (o GetDatastoreVSphereLinkArrayOutput) Index(i pulumi.IntInput) GetDatastoreVSphereLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatastoreVSphereLink {
		return vs[0].([]GetDatastoreVSphereLink)[vs[1].(int)]
	}).(GetDatastoreVSphereLinkOutput)
}

type GetDatastoreVSphereTag struct {
	// Tag’s key.
	Key string `pulumi:"key"`
	// Tag’s value.
	Value string `pulumi:"value"`
}

// GetDatastoreVSphereTagInput is an input type that accepts GetDatastoreVSphereTagArgs and GetDatastoreVSphereTagOutput values.
// You can construct a concrete instance of `GetDatastoreVSphereTagInput` via:
//
//	GetDatastoreVSphereTagArgs{...}
type GetDatastoreVSphereTagInput interface {
	pulumi.Input

	ToGetDatastoreVSphereTagOutput() GetDatastoreVSphereTagOutput
	ToGetDatastoreVSphereTagOutputWithContext(context.Context) GetDatastoreVSphereTagOutput
}

type GetDatastoreVSphereTagArgs struct {
	// Tag’s key.
	Key pulumi.StringInput `pulumi:"key"`
	// Tag’s value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatastoreVSphereTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatastoreVSphereTag)(nil)).Elem()
}

func (i GetDatastoreVSphereTagArgs) ToGetDatastoreVSphereTagOutput() GetDatastoreVSphereTagOutput {
	return i.ToGetDatastoreVSphereTagOutputWithContext(context.Background())
}

func (i GetDatastoreVSphereTagArgs) ToGetDatastoreVSphereTagOutputWithContext(ctx context.Context) GetDatastoreVSphereTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatastoreVSphereTagOutput)
}

// GetDatastoreVSphereTagArrayInput is an input type that accepts GetDatastoreVSphereTagArray and GetDatastoreVSphereTagArrayOutput values.
// You can construct a concrete instance of `GetDatastoreVSphereTagArrayInput` via:
//
//	GetDatastoreVSphereTagArray{ GetDatastoreVSphereTagArgs{...} }
type GetDatastoreVSphereTagArrayInput interface {
	pulumi.Input

	ToGetDatastoreVSphereTagArrayOutput() GetDatastoreVSphereTagArrayOutput
	ToGetDatastoreVSphereTagArrayOutputWithContext(context.Context) GetDatastoreVSphereTagArrayOutput
}

type GetDatastoreVSphereTagArray []GetDatastoreVSphereTagInput

func (GetDatastoreVSphereTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatastoreVSphereTag)(nil)).Elem()
}

func (i GetDatastoreVSphereTagArray) ToGetDatastoreVSphereTagArrayOutput() GetDatastoreVSphereTagArrayOutput {
	return i.ToGetDatastoreVSphereTagArrayOutputWithContext(context.Background())
}

func (i GetDatastoreVSphereTagArray) ToGetDatastoreVSphereTagArrayOutputWithContext(ctx context.Context) GetDatastoreVSphereTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatastoreVSphereTagArrayOutput)
}

type GetDatastoreVSphereTagOutput struct{ *pulumi.OutputState }

func (GetDatastoreVSphereTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatastoreVSphereTag)(nil)).Elem()
}

func (o GetDatastoreVSphereTagOutput) ToGetDatastoreVSphereTagOutput() GetDatastoreVSphereTagOutput {
	return o
}

func (o GetDatastoreVSphereTagOutput) ToGetDatastoreVSphereTagOutputWithContext(ctx context.Context) GetDatastoreVSphereTagOutput {
	return o
}

// Tag’s key.
func (o GetDatastoreVSphereTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatastoreVSphereTag) string { return v.Key }).(pulumi.StringOutput)
}

// Tag’s value.
func (o GetDatastoreVSphereTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatastoreVSphereTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatastoreVSphereTagArrayOutput struct{ *pulumi.OutputState }

func (GetDatastoreVSphereTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatastoreVSphereTag)(nil)).Elem()
}

func (o GetDatastoreVSphereTagArrayOutput) ToGetDatastoreVSphereTagArrayOutput() GetDatastoreVSphereTagArrayOutput {
	return o
}

func (o GetDatastoreVSphereTagArrayOutput) ToGetDatastoreVSphereTagArrayOutputWithContext(ctx context.Context) GetDatastoreVSphereTagArrayOutput {
	return o
}

func (o GetDatastoreVSphereTagArrayOutput) Index(i pulumi.IntInput) GetDatastoreVSphereTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatastoreVSphereTag {
		return vs[0].([]GetDatastoreVSphereTag)[vs[1].(int)]
	}).(GetDatastoreVSphereTagOutput)
}

type GetNetworkLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetNetworkLinkInput is an input type that accepts GetNetworkLinkArgs and GetNetworkLinkOutput values.
// You can construct a concrete instance of `GetNetworkLinkInput` via:
//
//	GetNetworkLinkArgs{...}
type GetNetworkLinkInput interface {
	pulumi.Input

	ToGetNetworkLinkOutput() GetNetworkLinkOutput
	ToGetNetworkLinkOutputWithContext(context.Context) GetNetworkLinkOutput
}

type GetNetworkLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetNetworkLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLink)(nil)).Elem()
}

func (i GetNetworkLinkArgs) ToGetNetworkLinkOutput() GetNetworkLinkOutput {
	return i.ToGetNetworkLinkOutputWithContext(context.Background())
}

func (i GetNetworkLinkArgs) ToGetNetworkLinkOutputWithContext(ctx context.Context) GetNetworkLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkOutput)
}

// GetNetworkLinkArrayInput is an input type that accepts GetNetworkLinkArray and GetNetworkLinkArrayOutput values.
// You can construct a concrete instance of `GetNetworkLinkArrayInput` via:
//
//	GetNetworkLinkArray{ GetNetworkLinkArgs{...} }
type GetNetworkLinkArrayInput interface {
	pulumi.Input

	ToGetNetworkLinkArrayOutput() GetNetworkLinkArrayOutput
	ToGetNetworkLinkArrayOutputWithContext(context.Context) GetNetworkLinkArrayOutput
}

type GetNetworkLinkArray []GetNetworkLinkInput

func (GetNetworkLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLink)(nil)).Elem()
}

func (i GetNetworkLinkArray) ToGetNetworkLinkArrayOutput() GetNetworkLinkArrayOutput {
	return i.ToGetNetworkLinkArrayOutputWithContext(context.Background())
}

func (i GetNetworkLinkArray) ToGetNetworkLinkArrayOutputWithContext(ctx context.Context) GetNetworkLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkArrayOutput)
}

type GetNetworkLinkOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLink)(nil)).Elem()
}

func (o GetNetworkLinkOutput) ToGetNetworkLinkOutput() GetNetworkLinkOutput {
	return o
}

func (o GetNetworkLinkOutput) ToGetNetworkLinkOutputWithContext(ctx context.Context) GetNetworkLinkOutput {
	return o
}

func (o GetNetworkLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetNetworkLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetNetworkLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetNetworkLinkArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLink)(nil)).Elem()
}

func (o GetNetworkLinkArrayOutput) ToGetNetworkLinkArrayOutput() GetNetworkLinkArrayOutput {
	return o
}

func (o GetNetworkLinkArrayOutput) ToGetNetworkLinkArrayOutputWithContext(ctx context.Context) GetNetworkLinkArrayOutput {
	return o
}

func (o GetNetworkLinkArrayOutput) Index(i pulumi.IntInput) GetNetworkLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLink {
		return vs[0].([]GetNetworkLink)[vs[1].(int)]
	}).(GetNetworkLinkOutput)
}

type GetNetworkTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GetNetworkTagInput is an input type that accepts GetNetworkTagArgs and GetNetworkTagOutput values.
// You can construct a concrete instance of `GetNetworkTagInput` via:
//
//	GetNetworkTagArgs{...}
type GetNetworkTagInput interface {
	pulumi.Input

	ToGetNetworkTagOutput() GetNetworkTagOutput
	ToGetNetworkTagOutputWithContext(context.Context) GetNetworkTagOutput
}

type GetNetworkTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkTag)(nil)).Elem()
}

func (i GetNetworkTagArgs) ToGetNetworkTagOutput() GetNetworkTagOutput {
	return i.ToGetNetworkTagOutputWithContext(context.Background())
}

func (i GetNetworkTagArgs) ToGetNetworkTagOutputWithContext(ctx context.Context) GetNetworkTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkTagOutput)
}

// GetNetworkTagArrayInput is an input type that accepts GetNetworkTagArray and GetNetworkTagArrayOutput values.
// You can construct a concrete instance of `GetNetworkTagArrayInput` via:
//
//	GetNetworkTagArray{ GetNetworkTagArgs{...} }
type GetNetworkTagArrayInput interface {
	pulumi.Input

	ToGetNetworkTagArrayOutput() GetNetworkTagArrayOutput
	ToGetNetworkTagArrayOutputWithContext(context.Context) GetNetworkTagArrayOutput
}

type GetNetworkTagArray []GetNetworkTagInput

func (GetNetworkTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkTag)(nil)).Elem()
}

func (i GetNetworkTagArray) ToGetNetworkTagArrayOutput() GetNetworkTagArrayOutput {
	return i.ToGetNetworkTagArrayOutputWithContext(context.Background())
}

func (i GetNetworkTagArray) ToGetNetworkTagArrayOutputWithContext(ctx context.Context) GetNetworkTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkTagArrayOutput)
}

type GetNetworkTagOutput struct{ *pulumi.OutputState }

func (GetNetworkTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkTag)(nil)).Elem()
}

func (o GetNetworkTagOutput) ToGetNetworkTagOutput() GetNetworkTagOutput {
	return o
}

func (o GetNetworkTagOutput) ToGetNetworkTagOutputWithContext(ctx context.Context) GetNetworkTagOutput {
	return o
}

func (o GetNetworkTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetNetworkTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkTag)(nil)).Elem()
}

func (o GetNetworkTagArrayOutput) ToGetNetworkTagArrayOutput() GetNetworkTagArrayOutput {
	return o
}

func (o GetNetworkTagArrayOutput) ToGetNetworkTagArrayOutputWithContext(ctx context.Context) GetNetworkTagArrayOutput {
	return o
}

func (o GetNetworkTagArrayOutput) Index(i pulumi.IntInput) GetNetworkTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkTag {
		return vs[0].([]GetNetworkTag)[vs[1].(int)]
	}).(GetNetworkTagOutput)
}

type GetStorageAccountAzureLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetStorageAccountAzureLinkInput is an input type that accepts GetStorageAccountAzureLinkArgs and GetStorageAccountAzureLinkOutput values.
// You can construct a concrete instance of `GetStorageAccountAzureLinkInput` via:
//
//	GetStorageAccountAzureLinkArgs{...}
type GetStorageAccountAzureLinkInput interface {
	pulumi.Input

	ToGetStorageAccountAzureLinkOutput() GetStorageAccountAzureLinkOutput
	ToGetStorageAccountAzureLinkOutputWithContext(context.Context) GetStorageAccountAzureLinkOutput
}

type GetStorageAccountAzureLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetStorageAccountAzureLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageAccountAzureLink)(nil)).Elem()
}

func (i GetStorageAccountAzureLinkArgs) ToGetStorageAccountAzureLinkOutput() GetStorageAccountAzureLinkOutput {
	return i.ToGetStorageAccountAzureLinkOutputWithContext(context.Background())
}

func (i GetStorageAccountAzureLinkArgs) ToGetStorageAccountAzureLinkOutputWithContext(ctx context.Context) GetStorageAccountAzureLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageAccountAzureLinkOutput)
}

// GetStorageAccountAzureLinkArrayInput is an input type that accepts GetStorageAccountAzureLinkArray and GetStorageAccountAzureLinkArrayOutput values.
// You can construct a concrete instance of `GetStorageAccountAzureLinkArrayInput` via:
//
//	GetStorageAccountAzureLinkArray{ GetStorageAccountAzureLinkArgs{...} }
type GetStorageAccountAzureLinkArrayInput interface {
	pulumi.Input

	ToGetStorageAccountAzureLinkArrayOutput() GetStorageAccountAzureLinkArrayOutput
	ToGetStorageAccountAzureLinkArrayOutputWithContext(context.Context) GetStorageAccountAzureLinkArrayOutput
}

type GetStorageAccountAzureLinkArray []GetStorageAccountAzureLinkInput

func (GetStorageAccountAzureLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageAccountAzureLink)(nil)).Elem()
}

func (i GetStorageAccountAzureLinkArray) ToGetStorageAccountAzureLinkArrayOutput() GetStorageAccountAzureLinkArrayOutput {
	return i.ToGetStorageAccountAzureLinkArrayOutputWithContext(context.Background())
}

func (i GetStorageAccountAzureLinkArray) ToGetStorageAccountAzureLinkArrayOutputWithContext(ctx context.Context) GetStorageAccountAzureLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageAccountAzureLinkArrayOutput)
}

type GetStorageAccountAzureLinkOutput struct{ *pulumi.OutputState }

func (GetStorageAccountAzureLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageAccountAzureLink)(nil)).Elem()
}

func (o GetStorageAccountAzureLinkOutput) ToGetStorageAccountAzureLinkOutput() GetStorageAccountAzureLinkOutput {
	return o
}

func (o GetStorageAccountAzureLinkOutput) ToGetStorageAccountAzureLinkOutputWithContext(ctx context.Context) GetStorageAccountAzureLinkOutput {
	return o
}

func (o GetStorageAccountAzureLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStorageAccountAzureLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetStorageAccountAzureLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStorageAccountAzureLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetStorageAccountAzureLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageAccountAzureLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetStorageAccountAzureLinkArrayOutput struct{ *pulumi.OutputState }

func (GetStorageAccountAzureLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageAccountAzureLink)(nil)).Elem()
}

func (o GetStorageAccountAzureLinkArrayOutput) ToGetStorageAccountAzureLinkArrayOutput() GetStorageAccountAzureLinkArrayOutput {
	return o
}

func (o GetStorageAccountAzureLinkArrayOutput) ToGetStorageAccountAzureLinkArrayOutputWithContext(ctx context.Context) GetStorageAccountAzureLinkArrayOutput {
	return o
}

func (o GetStorageAccountAzureLinkArrayOutput) Index(i pulumi.IntInput) GetStorageAccountAzureLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageAccountAzureLink {
		return vs[0].([]GetStorageAccountAzureLink)[vs[1].(int)]
	}).(GetStorageAccountAzureLinkOutput)
}

type GetStoragePolicyVSphereLink struct {
	Href  *string  `pulumi:"href"`
	Hrefs []string `pulumi:"hrefs"`
	Rel   string   `pulumi:"rel"`
}

// GetStoragePolicyVSphereLinkInput is an input type that accepts GetStoragePolicyVSphereLinkArgs and GetStoragePolicyVSphereLinkOutput values.
// You can construct a concrete instance of `GetStoragePolicyVSphereLinkInput` via:
//
//	GetStoragePolicyVSphereLinkArgs{...}
type GetStoragePolicyVSphereLinkInput interface {
	pulumi.Input

	ToGetStoragePolicyVSphereLinkOutput() GetStoragePolicyVSphereLinkOutput
	ToGetStoragePolicyVSphereLinkOutputWithContext(context.Context) GetStoragePolicyVSphereLinkOutput
}

type GetStoragePolicyVSphereLinkArgs struct {
	Href  pulumi.StringPtrInput   `pulumi:"href"`
	Hrefs pulumi.StringArrayInput `pulumi:"hrefs"`
	Rel   pulumi.StringInput      `pulumi:"rel"`
}

func (GetStoragePolicyVSphereLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStoragePolicyVSphereLink)(nil)).Elem()
}

func (i GetStoragePolicyVSphereLinkArgs) ToGetStoragePolicyVSphereLinkOutput() GetStoragePolicyVSphereLinkOutput {
	return i.ToGetStoragePolicyVSphereLinkOutputWithContext(context.Background())
}

func (i GetStoragePolicyVSphereLinkArgs) ToGetStoragePolicyVSphereLinkOutputWithContext(ctx context.Context) GetStoragePolicyVSphereLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStoragePolicyVSphereLinkOutput)
}

// GetStoragePolicyVSphereLinkArrayInput is an input type that accepts GetStoragePolicyVSphereLinkArray and GetStoragePolicyVSphereLinkArrayOutput values.
// You can construct a concrete instance of `GetStoragePolicyVSphereLinkArrayInput` via:
//
//	GetStoragePolicyVSphereLinkArray{ GetStoragePolicyVSphereLinkArgs{...} }
type GetStoragePolicyVSphereLinkArrayInput interface {
	pulumi.Input

	ToGetStoragePolicyVSphereLinkArrayOutput() GetStoragePolicyVSphereLinkArrayOutput
	ToGetStoragePolicyVSphereLinkArrayOutputWithContext(context.Context) GetStoragePolicyVSphereLinkArrayOutput
}

type GetStoragePolicyVSphereLinkArray []GetStoragePolicyVSphereLinkInput

func (GetStoragePolicyVSphereLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStoragePolicyVSphereLink)(nil)).Elem()
}

func (i GetStoragePolicyVSphereLinkArray) ToGetStoragePolicyVSphereLinkArrayOutput() GetStoragePolicyVSphereLinkArrayOutput {
	return i.ToGetStoragePolicyVSphereLinkArrayOutputWithContext(context.Background())
}

func (i GetStoragePolicyVSphereLinkArray) ToGetStoragePolicyVSphereLinkArrayOutputWithContext(ctx context.Context) GetStoragePolicyVSphereLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStoragePolicyVSphereLinkArrayOutput)
}

type GetStoragePolicyVSphereLinkOutput struct{ *pulumi.OutputState }

func (GetStoragePolicyVSphereLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStoragePolicyVSphereLink)(nil)).Elem()
}

func (o GetStoragePolicyVSphereLinkOutput) ToGetStoragePolicyVSphereLinkOutput() GetStoragePolicyVSphereLinkOutput {
	return o
}

func (o GetStoragePolicyVSphereLinkOutput) ToGetStoragePolicyVSphereLinkOutputWithContext(ctx context.Context) GetStoragePolicyVSphereLinkOutput {
	return o
}

func (o GetStoragePolicyVSphereLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStoragePolicyVSphereLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o GetStoragePolicyVSphereLinkOutput) Hrefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStoragePolicyVSphereLink) []string { return v.Hrefs }).(pulumi.StringArrayOutput)
}

func (o GetStoragePolicyVSphereLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetStoragePolicyVSphereLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetStoragePolicyVSphereLinkArrayOutput struct{ *pulumi.OutputState }

func (GetStoragePolicyVSphereLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStoragePolicyVSphereLink)(nil)).Elem()
}

func (o GetStoragePolicyVSphereLinkArrayOutput) ToGetStoragePolicyVSphereLinkArrayOutput() GetStoragePolicyVSphereLinkArrayOutput {
	return o
}

func (o GetStoragePolicyVSphereLinkArrayOutput) ToGetStoragePolicyVSphereLinkArrayOutputWithContext(ctx context.Context) GetStoragePolicyVSphereLinkArrayOutput {
	return o
}

func (o GetStoragePolicyVSphereLinkArrayOutput) Index(i pulumi.IntInput) GetStoragePolicyVSphereLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStoragePolicyVSphereLink {
		return vs[0].([]GetStoragePolicyVSphereLink)[vs[1].(int)]
	}).(GetStoragePolicyVSphereLinkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeLinkInput)(nil)).Elem(), ComputeLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeLinkArrayInput)(nil)).Elem(), ComputeLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeTagInput)(nil)).Elem(), ComputeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeTagArrayInput)(nil)).Elem(), ComputeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreVSphereLinkInput)(nil)).Elem(), DatastoreVSphereLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreVSphereLinkArrayInput)(nil)).Elem(), DatastoreVSphereLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreVSphereTagInput)(nil)).Elem(), DatastoreVSphereTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreVSphereTagArrayInput)(nil)).Elem(), DatastoreVSphereTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkVSphereLinkInput)(nil)).Elem(), NetworkVSphereLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkVSphereLinkArrayInput)(nil)).Elem(), NetworkVSphereLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkVSphereTagInput)(nil)).Elem(), NetworkVSphereTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkVSphereTagArrayInput)(nil)).Elem(), NetworkVSphereTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeLinkInput)(nil)).Elem(), GetComputeLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeLinkArrayInput)(nil)).Elem(), GetComputeLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeTagInput)(nil)).Elem(), GetComputeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeTagArrayInput)(nil)).Elem(), GetComputeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatastoreVSphereLinkInput)(nil)).Elem(), GetDatastoreVSphereLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatastoreVSphereLinkArrayInput)(nil)).Elem(), GetDatastoreVSphereLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatastoreVSphereTagInput)(nil)).Elem(), GetDatastoreVSphereTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatastoreVSphereTagArrayInput)(nil)).Elem(), GetDatastoreVSphereTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkInput)(nil)).Elem(), GetNetworkLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkArrayInput)(nil)).Elem(), GetNetworkLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkTagInput)(nil)).Elem(), GetNetworkTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkTagArrayInput)(nil)).Elem(), GetNetworkTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageAccountAzureLinkInput)(nil)).Elem(), GetStorageAccountAzureLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageAccountAzureLinkArrayInput)(nil)).Elem(), GetStorageAccountAzureLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStoragePolicyVSphereLinkInput)(nil)).Elem(), GetStoragePolicyVSphereLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStoragePolicyVSphereLinkArrayInput)(nil)).Elem(), GetStoragePolicyVSphereLinkArray{})
	pulumi.RegisterOutputType(ComputeLinkOutput{})
	pulumi.RegisterOutputType(ComputeLinkArrayOutput{})
	pulumi.RegisterOutputType(ComputeTagOutput{})
	pulumi.RegisterOutputType(ComputeTagArrayOutput{})
	pulumi.RegisterOutputType(DatastoreVSphereLinkOutput{})
	pulumi.RegisterOutputType(DatastoreVSphereLinkArrayOutput{})
	pulumi.RegisterOutputType(DatastoreVSphereTagOutput{})
	pulumi.RegisterOutputType(DatastoreVSphereTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkVSphereLinkOutput{})
	pulumi.RegisterOutputType(NetworkVSphereLinkArrayOutput{})
	pulumi.RegisterOutputType(NetworkVSphereTagOutput{})
	pulumi.RegisterOutputType(NetworkVSphereTagArrayOutput{})
	pulumi.RegisterOutputType(GetComputeLinkOutput{})
	pulumi.RegisterOutputType(GetComputeLinkArrayOutput{})
	pulumi.RegisterOutputType(GetComputeTagOutput{})
	pulumi.RegisterOutputType(GetComputeTagArrayOutput{})
	pulumi.RegisterOutputType(GetDatastoreVSphereLinkOutput{})
	pulumi.RegisterOutputType(GetDatastoreVSphereLinkArrayOutput{})
	pulumi.RegisterOutputType(GetDatastoreVSphereTagOutput{})
	pulumi.RegisterOutputType(GetDatastoreVSphereTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkTagOutput{})
	pulumi.RegisterOutputType(GetNetworkTagArrayOutput{})
	pulumi.RegisterOutputType(GetStorageAccountAzureLinkOutput{})
	pulumi.RegisterOutputType(GetStorageAccountAzureLinkArrayOutput{})
	pulumi.RegisterOutputType(GetStoragePolicyVSphereLinkOutput{})
	pulumi.RegisterOutputType(GetStoragePolicyVSphereLinkArrayOutput{})
}
