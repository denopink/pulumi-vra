// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deployment

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides a way to create a deployment in vRealize Automation(vRA) by either using a blueprint, or catalog item, or an inline blueprint.
//
// ## Example Usage
//
// ## Import
//
// Deployment can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import vra:deployment/deployment:Deployment this 05956583-6488-4e7d-84c9-92a7b7219a15`
// ```
type Deployment struct {
	pulumi.CustomResourceState

	// vRA Cloud template content. Conflicts with `blueprintId` and `catalogItemId`.
	BlueprintContent pulumi.StringPtrOutput `pulumi:"blueprintContent"`
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId pulumi.StringOutput `pulumi:"blueprintId"`
	// The version of the vRA cloud template to request the deployment. Used only when `blueprintId` is provided.
	BlueprintVersion pulumi.StringOutput `pulumi:"blueprintVersion"`
	// The id of the vRA catalog item to request the deployment. Conflicts with `blueprintId` and `blueprintContent`.
	CatalogItemId pulumi.StringOutput `pulumi:"catalogItemId"`
	// The version of the vRA catalog item to request the deployment. Used only when `catalogItemId` is provided.
	CatalogItemVersion pulumi.StringOutput `pulumi:"catalogItemVersion"`
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The user the entity was created by.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// A human-friendly description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Deprecated: Deprecated. True by default even if not provided.
	ExpandLastRequest pulumi.BoolPtrOutput `pulumi:"expandLastRequest"`
	// Flag to indicate whether to expand project information.
	ExpandProject pulumi.BoolPtrOutput `pulumi:"expandProject"`
	// Deprecated: Deprecated. True by default even if not provided.
	ExpandResources pulumi.BoolPtrOutput `pulumi:"expandResources"`
	// Expense incurred for the deployment.
	Expenses DeploymentExpenseArrayOutput `pulumi:"expenses"`
	// Inputs provided by the user. For inputs including those with default values, refer to `inputsIncludingDefaults`.
	Inputs pulumi.StringMapOutput `pulumi:"inputs"`
	// All the inputs applied during last create/update operation, including those with default values. For the list of inputs provided by the user in the configuration, refer to `inputs`.
	InputsIncludingDefaults pulumi.StringMapOutput `pulumi:"inputsIncludingDefaults"`
	// Represents deployment requests.
	LastRequests DeploymentLastRequestArrayOutput `pulumi:"lastRequests"`
	// Time at which the deployment was last updated.
	LastUpdatedAt pulumi.StringOutput `pulumi:"lastUpdatedAt"`
	// The user that last updated the deployment.
	LastUpdatedBy pulumi.StringOutput `pulumi:"lastUpdatedBy"`
	// Time at which the deployment lease expires.
	LeaseExpireAt pulumi.StringOutput `pulumi:"leaseExpireAt"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the organization this deployment belongs to.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// The user this deployment belongs to. At create, the owner is ignored but is used to update during next apply.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// The id of the project this entity belongs to.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The project this entity belongs to.
	Projects DeploymentProjectArrayOutput `pulumi:"projects"`
	// Expanded resources for the deployment. Content of this property will not be maintained backward compatible.
	Resources DeploymentResourceArrayOutput `pulumi:"resources"`
	// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewDeployment registers a new resource with the given unique name, arguments, and options.
func NewDeployment(ctx *pulumi.Context,
	name string, args *DeploymentArgs, opts ...pulumi.ResourceOption) (*Deployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Deployment
	err := ctx.RegisterResource("vra:deployment/deployment:Deployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployment gets an existing Deployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentState, opts ...pulumi.ResourceOption) (*Deployment, error) {
	var resource Deployment
	err := ctx.ReadResource("vra:deployment/deployment:Deployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Deployment resources.
type deploymentState struct {
	// vRA Cloud template content. Conflicts with `blueprintId` and `catalogItemId`.
	BlueprintContent *string `pulumi:"blueprintContent"`
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId *string `pulumi:"blueprintId"`
	// The version of the vRA cloud template to request the deployment. Used only when `blueprintId` is provided.
	BlueprintVersion *string `pulumi:"blueprintVersion"`
	// The id of the vRA catalog item to request the deployment. Conflicts with `blueprintId` and `blueprintContent`.
	CatalogItemId *string `pulumi:"catalogItemId"`
	// The version of the vRA catalog item to request the deployment. Used only when `catalogItemId` is provided.
	CatalogItemVersion *string `pulumi:"catalogItemVersion"`
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt *string `pulumi:"createdAt"`
	// The user the entity was created by.
	CreatedBy *string `pulumi:"createdBy"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// Deprecated: Deprecated. True by default even if not provided.
	ExpandLastRequest *bool `pulumi:"expandLastRequest"`
	// Flag to indicate whether to expand project information.
	ExpandProject *bool `pulumi:"expandProject"`
	// Deprecated: Deprecated. True by default even if not provided.
	ExpandResources *bool `pulumi:"expandResources"`
	// Expense incurred for the deployment.
	Expenses []DeploymentExpense `pulumi:"expenses"`
	// Inputs provided by the user. For inputs including those with default values, refer to `inputsIncludingDefaults`.
	Inputs map[string]string `pulumi:"inputs"`
	// All the inputs applied during last create/update operation, including those with default values. For the list of inputs provided by the user in the configuration, refer to `inputs`.
	InputsIncludingDefaults map[string]string `pulumi:"inputsIncludingDefaults"`
	// Represents deployment requests.
	LastRequests []DeploymentLastRequest `pulumi:"lastRequests"`
	// Time at which the deployment was last updated.
	LastUpdatedAt *string `pulumi:"lastUpdatedAt"`
	// The user that last updated the deployment.
	LastUpdatedBy *string `pulumi:"lastUpdatedBy"`
	// Time at which the deployment lease expires.
	LeaseExpireAt *string `pulumi:"leaseExpireAt"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// The ID of the organization this deployment belongs to.
	OrgId *string `pulumi:"orgId"`
	// The user this deployment belongs to. At create, the owner is ignored but is used to update during next apply.
	Owner *string `pulumi:"owner"`
	// The id of the project this entity belongs to.
	ProjectId *string `pulumi:"projectId"`
	// The project this entity belongs to.
	Projects []DeploymentProject `pulumi:"projects"`
	// Expanded resources for the deployment. Content of this property will not be maintained backward compatible.
	Resources []DeploymentResource `pulumi:"resources"`
	// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
	Status *string `pulumi:"status"`
}

type DeploymentState struct {
	// vRA Cloud template content. Conflicts with `blueprintId` and `catalogItemId`.
	BlueprintContent pulumi.StringPtrInput
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId pulumi.StringPtrInput
	// The version of the vRA cloud template to request the deployment. Used only when `blueprintId` is provided.
	BlueprintVersion pulumi.StringPtrInput
	// The id of the vRA catalog item to request the deployment. Conflicts with `blueprintId` and `blueprintContent`.
	CatalogItemId pulumi.StringPtrInput
	// The version of the vRA catalog item to request the deployment. Used only when `catalogItemId` is provided.
	CatalogItemVersion pulumi.StringPtrInput
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt pulumi.StringPtrInput
	// The user the entity was created by.
	CreatedBy pulumi.StringPtrInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// Deprecated: Deprecated. True by default even if not provided.
	ExpandLastRequest pulumi.BoolPtrInput
	// Flag to indicate whether to expand project information.
	ExpandProject pulumi.BoolPtrInput
	// Deprecated: Deprecated. True by default even if not provided.
	ExpandResources pulumi.BoolPtrInput
	// Expense incurred for the deployment.
	Expenses DeploymentExpenseArrayInput
	// Inputs provided by the user. For inputs including those with default values, refer to `inputsIncludingDefaults`.
	Inputs pulumi.StringMapInput
	// All the inputs applied during last create/update operation, including those with default values. For the list of inputs provided by the user in the configuration, refer to `inputs`.
	InputsIncludingDefaults pulumi.StringMapInput
	// Represents deployment requests.
	LastRequests DeploymentLastRequestArrayInput
	// Time at which the deployment was last updated.
	LastUpdatedAt pulumi.StringPtrInput
	// The user that last updated the deployment.
	LastUpdatedBy pulumi.StringPtrInput
	// Time at which the deployment lease expires.
	LeaseExpireAt pulumi.StringPtrInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// The ID of the organization this deployment belongs to.
	OrgId pulumi.StringPtrInput
	// The user this deployment belongs to. At create, the owner is ignored but is used to update during next apply.
	Owner pulumi.StringPtrInput
	// The id of the project this entity belongs to.
	ProjectId pulumi.StringPtrInput
	// The project this entity belongs to.
	Projects DeploymentProjectArrayInput
	// Expanded resources for the deployment. Content of this property will not be maintained backward compatible.
	Resources DeploymentResourceArrayInput
	// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
	Status pulumi.StringPtrInput
}

func (DeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentState)(nil)).Elem()
}

type deploymentArgs struct {
	// vRA Cloud template content. Conflicts with `blueprintId` and `catalogItemId`.
	BlueprintContent *string `pulumi:"blueprintContent"`
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId *string `pulumi:"blueprintId"`
	// The version of the vRA cloud template to request the deployment. Used only when `blueprintId` is provided.
	BlueprintVersion *string `pulumi:"blueprintVersion"`
	// The id of the vRA catalog item to request the deployment. Conflicts with `blueprintId` and `blueprintContent`.
	CatalogItemId *string `pulumi:"catalogItemId"`
	// The version of the vRA catalog item to request the deployment. Used only when `catalogItemId` is provided.
	CatalogItemVersion *string `pulumi:"catalogItemVersion"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// Deprecated: Deprecated. True by default even if not provided.
	ExpandLastRequest *bool `pulumi:"expandLastRequest"`
	// Flag to indicate whether to expand project information.
	ExpandProject *bool `pulumi:"expandProject"`
	// Deprecated: Deprecated. True by default even if not provided.
	ExpandResources *bool `pulumi:"expandResources"`
	// Inputs provided by the user. For inputs including those with default values, refer to `inputsIncludingDefaults`.
	Inputs map[string]string `pulumi:"inputs"`
	// Time at which the deployment lease expires.
	LeaseExpireAt *string `pulumi:"leaseExpireAt"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// The user this deployment belongs to. At create, the owner is ignored but is used to update during next apply.
	Owner *string `pulumi:"owner"`
	// The id of the project this entity belongs to.
	ProjectId string `pulumi:"projectId"`
}

// The set of arguments for constructing a Deployment resource.
type DeploymentArgs struct {
	// vRA Cloud template content. Conflicts with `blueprintId` and `catalogItemId`.
	BlueprintContent pulumi.StringPtrInput
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId pulumi.StringPtrInput
	// The version of the vRA cloud template to request the deployment. Used only when `blueprintId` is provided.
	BlueprintVersion pulumi.StringPtrInput
	// The id of the vRA catalog item to request the deployment. Conflicts with `blueprintId` and `blueprintContent`.
	CatalogItemId pulumi.StringPtrInput
	// The version of the vRA catalog item to request the deployment. Used only when `catalogItemId` is provided.
	CatalogItemVersion pulumi.StringPtrInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// Deprecated: Deprecated. True by default even if not provided.
	ExpandLastRequest pulumi.BoolPtrInput
	// Flag to indicate whether to expand project information.
	ExpandProject pulumi.BoolPtrInput
	// Deprecated: Deprecated. True by default even if not provided.
	ExpandResources pulumi.BoolPtrInput
	// Inputs provided by the user. For inputs including those with default values, refer to `inputsIncludingDefaults`.
	Inputs pulumi.StringMapInput
	// Time at which the deployment lease expires.
	LeaseExpireAt pulumi.StringPtrInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// The user this deployment belongs to. At create, the owner is ignored but is used to update during next apply.
	Owner pulumi.StringPtrInput
	// The id of the project this entity belongs to.
	ProjectId pulumi.StringInput
}

func (DeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentArgs)(nil)).Elem()
}

type DeploymentInput interface {
	pulumi.Input

	ToDeploymentOutput() DeploymentOutput
	ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput
}

func (*Deployment) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (i *Deployment) ToDeploymentOutput() DeploymentOutput {
	return i.ToDeploymentOutputWithContext(context.Background())
}

func (i *Deployment) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentOutput)
}

// DeploymentArrayInput is an input type that accepts DeploymentArray and DeploymentArrayOutput values.
// You can construct a concrete instance of `DeploymentArrayInput` via:
//
//          DeploymentArray{ DeploymentArgs{...} }
type DeploymentArrayInput interface {
	pulumi.Input

	ToDeploymentArrayOutput() DeploymentArrayOutput
	ToDeploymentArrayOutputWithContext(context.Context) DeploymentArrayOutput
}

type DeploymentArray []DeploymentInput

func (DeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Deployment)(nil)).Elem()
}

func (i DeploymentArray) ToDeploymentArrayOutput() DeploymentArrayOutput {
	return i.ToDeploymentArrayOutputWithContext(context.Background())
}

func (i DeploymentArray) ToDeploymentArrayOutputWithContext(ctx context.Context) DeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentArrayOutput)
}

// DeploymentMapInput is an input type that accepts DeploymentMap and DeploymentMapOutput values.
// You can construct a concrete instance of `DeploymentMapInput` via:
//
//          DeploymentMap{ "key": DeploymentArgs{...} }
type DeploymentMapInput interface {
	pulumi.Input

	ToDeploymentMapOutput() DeploymentMapOutput
	ToDeploymentMapOutputWithContext(context.Context) DeploymentMapOutput
}

type DeploymentMap map[string]DeploymentInput

func (DeploymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Deployment)(nil)).Elem()
}

func (i DeploymentMap) ToDeploymentMapOutput() DeploymentMapOutput {
	return i.ToDeploymentMapOutputWithContext(context.Background())
}

func (i DeploymentMap) ToDeploymentMapOutputWithContext(ctx context.Context) DeploymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentMapOutput)
}

type DeploymentOutput struct{ *pulumi.OutputState }

func (DeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (o DeploymentOutput) ToDeploymentOutput() DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return o
}

// vRA Cloud template content. Conflicts with `blueprintId` and `catalogItemId`.
func (o DeploymentOutput) BlueprintContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringPtrOutput { return v.BlueprintContent }).(pulumi.StringPtrOutput)
}

// Identifier of the requested blueprint in the form ‘UUID:version’.
func (o DeploymentOutput) BlueprintId() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.BlueprintId }).(pulumi.StringOutput)
}

// The version of the vRA cloud template to request the deployment. Used only when `blueprintId` is provided.
func (o DeploymentOutput) BlueprintVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.BlueprintVersion }).(pulumi.StringOutput)
}

// The id of the vRA catalog item to request the deployment. Conflicts with `blueprintId` and `blueprintContent`.
func (o DeploymentOutput) CatalogItemId() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.CatalogItemId }).(pulumi.StringOutput)
}

// The version of the vRA catalog item to request the deployment. Used only when `catalogItemId` is provided.
func (o DeploymentOutput) CatalogItemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.CatalogItemVersion }).(pulumi.StringOutput)
}

// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
func (o DeploymentOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The user the entity was created by.
func (o DeploymentOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// A human-friendly description.
func (o DeploymentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Deprecated: Deprecated. True by default even if not provided.
func (o DeploymentOutput) ExpandLastRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.BoolPtrOutput { return v.ExpandLastRequest }).(pulumi.BoolPtrOutput)
}

// Flag to indicate whether to expand project information.
func (o DeploymentOutput) ExpandProject() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.BoolPtrOutput { return v.ExpandProject }).(pulumi.BoolPtrOutput)
}

// Deprecated: Deprecated. True by default even if not provided.
func (o DeploymentOutput) ExpandResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.BoolPtrOutput { return v.ExpandResources }).(pulumi.BoolPtrOutput)
}

// Expense incurred for the deployment.
func (o DeploymentOutput) Expenses() DeploymentExpenseArrayOutput {
	return o.ApplyT(func(v *Deployment) DeploymentExpenseArrayOutput { return v.Expenses }).(DeploymentExpenseArrayOutput)
}

// Inputs provided by the user. For inputs including those with default values, refer to `inputsIncludingDefaults`.
func (o DeploymentOutput) Inputs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringMapOutput { return v.Inputs }).(pulumi.StringMapOutput)
}

// All the inputs applied during last create/update operation, including those with default values. For the list of inputs provided by the user in the configuration, refer to `inputs`.
func (o DeploymentOutput) InputsIncludingDefaults() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringMapOutput { return v.InputsIncludingDefaults }).(pulumi.StringMapOutput)
}

// Represents deployment requests.
func (o DeploymentOutput) LastRequests() DeploymentLastRequestArrayOutput {
	return o.ApplyT(func(v *Deployment) DeploymentLastRequestArrayOutput { return v.LastRequests }).(DeploymentLastRequestArrayOutput)
}

// Time at which the deployment was last updated.
func (o DeploymentOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

// The user that last updated the deployment.
func (o DeploymentOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// Time at which the deployment lease expires.
func (o DeploymentOutput) LeaseExpireAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.LeaseExpireAt }).(pulumi.StringOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o DeploymentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the organization this deployment belongs to.
func (o DeploymentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// The user this deployment belongs to. At create, the owner is ignored but is used to update during next apply.
func (o DeploymentOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// The id of the project this entity belongs to.
func (o DeploymentOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The project this entity belongs to.
func (o DeploymentOutput) Projects() DeploymentProjectArrayOutput {
	return o.ApplyT(func(v *Deployment) DeploymentProjectArrayOutput { return v.Projects }).(DeploymentProjectArrayOutput)
}

// Expanded resources for the deployment. Content of this property will not be maintained backward compatible.
func (o DeploymentOutput) Resources() DeploymentResourceArrayOutput {
	return o.ApplyT(func(v *Deployment) DeploymentResourceArrayOutput { return v.Resources }).(DeploymentResourceArrayOutput)
}

// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
func (o DeploymentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type DeploymentArrayOutput struct{ *pulumi.OutputState }

func (DeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Deployment)(nil)).Elem()
}

func (o DeploymentArrayOutput) ToDeploymentArrayOutput() DeploymentArrayOutput {
	return o
}

func (o DeploymentArrayOutput) ToDeploymentArrayOutputWithContext(ctx context.Context) DeploymentArrayOutput {
	return o
}

func (o DeploymentArrayOutput) Index(i pulumi.IntInput) DeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Deployment {
		return vs[0].([]*Deployment)[vs[1].(int)]
	}).(DeploymentOutput)
}

type DeploymentMapOutput struct{ *pulumi.OutputState }

func (DeploymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Deployment)(nil)).Elem()
}

func (o DeploymentMapOutput) ToDeploymentMapOutput() DeploymentMapOutput {
	return o
}

func (o DeploymentMapOutput) ToDeploymentMapOutputWithContext(ctx context.Context) DeploymentMapOutput {
	return o
}

func (o DeploymentMapOutput) MapIndex(k pulumi.StringInput) DeploymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Deployment {
		return vs[0].(map[string]*Deployment)[vs[1].(string)]
	}).(DeploymentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentInput)(nil)).Elem(), &Deployment{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentArrayInput)(nil)).Elem(), DeploymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentMapInput)(nil)).Elem(), DeploymentMap{})
	pulumi.RegisterOutputType(DeploymentOutput{})
	pulumi.RegisterOutputType(DeploymentArrayOutput{})
	pulumi.RegisterOutputType(DeploymentMapOutput{})
}
