// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deployment

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeploymentExpense struct {
	// Additional expense incurred for the resource.
	AdditionalExpense *float64 `pulumi:"additionalExpense"`
	// Expense sync message code if any.
	Code *string `pulumi:"code"`
	// Compute expense of the entity.
	ComputeExpense *float64 `pulumi:"computeExpense"`
	// Last expense sync time.
	LastUpdateTime *string `pulumi:"lastUpdateTime"`
	// Expense sync message if any.
	Message *string `pulumi:"message"`
	// Network expense of the entity.
	NetworkExpense *float64 `pulumi:"networkExpense"`
	// Storage expense of the entity.
	StorageExpense *float64 `pulumi:"storageExpense"`
	// Total expense of the entity.
	TotalExpense *float64 `pulumi:"totalExpense"`
	// Monetary unit.
	Unit *string `pulumi:"unit"`
}

// DeploymentExpenseInput is an input type that accepts DeploymentExpenseArgs and DeploymentExpenseOutput values.
// You can construct a concrete instance of `DeploymentExpenseInput` via:
//
//	DeploymentExpenseArgs{...}
type DeploymentExpenseInput interface {
	pulumi.Input

	ToDeploymentExpenseOutput() DeploymentExpenseOutput
	ToDeploymentExpenseOutputWithContext(context.Context) DeploymentExpenseOutput
}

type DeploymentExpenseArgs struct {
	// Additional expense incurred for the resource.
	AdditionalExpense pulumi.Float64PtrInput `pulumi:"additionalExpense"`
	// Expense sync message code if any.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Compute expense of the entity.
	ComputeExpense pulumi.Float64PtrInput `pulumi:"computeExpense"`
	// Last expense sync time.
	LastUpdateTime pulumi.StringPtrInput `pulumi:"lastUpdateTime"`
	// Expense sync message if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Network expense of the entity.
	NetworkExpense pulumi.Float64PtrInput `pulumi:"networkExpense"`
	// Storage expense of the entity.
	StorageExpense pulumi.Float64PtrInput `pulumi:"storageExpense"`
	// Total expense of the entity.
	TotalExpense pulumi.Float64PtrInput `pulumi:"totalExpense"`
	// Monetary unit.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (DeploymentExpenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentExpense)(nil)).Elem()
}

func (i DeploymentExpenseArgs) ToDeploymentExpenseOutput() DeploymentExpenseOutput {
	return i.ToDeploymentExpenseOutputWithContext(context.Background())
}

func (i DeploymentExpenseArgs) ToDeploymentExpenseOutputWithContext(ctx context.Context) DeploymentExpenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentExpenseOutput)
}

// DeploymentExpenseArrayInput is an input type that accepts DeploymentExpenseArray and DeploymentExpenseArrayOutput values.
// You can construct a concrete instance of `DeploymentExpenseArrayInput` via:
//
//	DeploymentExpenseArray{ DeploymentExpenseArgs{...} }
type DeploymentExpenseArrayInput interface {
	pulumi.Input

	ToDeploymentExpenseArrayOutput() DeploymentExpenseArrayOutput
	ToDeploymentExpenseArrayOutputWithContext(context.Context) DeploymentExpenseArrayOutput
}

type DeploymentExpenseArray []DeploymentExpenseInput

func (DeploymentExpenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentExpense)(nil)).Elem()
}

func (i DeploymentExpenseArray) ToDeploymentExpenseArrayOutput() DeploymentExpenseArrayOutput {
	return i.ToDeploymentExpenseArrayOutputWithContext(context.Background())
}

func (i DeploymentExpenseArray) ToDeploymentExpenseArrayOutputWithContext(ctx context.Context) DeploymentExpenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentExpenseArrayOutput)
}

type DeploymentExpenseOutput struct{ *pulumi.OutputState }

func (DeploymentExpenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentExpense)(nil)).Elem()
}

func (o DeploymentExpenseOutput) ToDeploymentExpenseOutput() DeploymentExpenseOutput {
	return o
}

func (o DeploymentExpenseOutput) ToDeploymentExpenseOutputWithContext(ctx context.Context) DeploymentExpenseOutput {
	return o
}

// Additional expense incurred for the resource.
func (o DeploymentExpenseOutput) AdditionalExpense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentExpense) *float64 { return v.AdditionalExpense }).(pulumi.Float64PtrOutput)
}

// Expense sync message code if any.
func (o DeploymentExpenseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentExpense) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Compute expense of the entity.
func (o DeploymentExpenseOutput) ComputeExpense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentExpense) *float64 { return v.ComputeExpense }).(pulumi.Float64PtrOutput)
}

// Last expense sync time.
func (o DeploymentExpenseOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentExpense) *string { return v.LastUpdateTime }).(pulumi.StringPtrOutput)
}

// Expense sync message if any.
func (o DeploymentExpenseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentExpense) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Network expense of the entity.
func (o DeploymentExpenseOutput) NetworkExpense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentExpense) *float64 { return v.NetworkExpense }).(pulumi.Float64PtrOutput)
}

// Storage expense of the entity.
func (o DeploymentExpenseOutput) StorageExpense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentExpense) *float64 { return v.StorageExpense }).(pulumi.Float64PtrOutput)
}

// Total expense of the entity.
func (o DeploymentExpenseOutput) TotalExpense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentExpense) *float64 { return v.TotalExpense }).(pulumi.Float64PtrOutput)
}

// Monetary unit.
func (o DeploymentExpenseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentExpense) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type DeploymentExpenseArrayOutput struct{ *pulumi.OutputState }

func (DeploymentExpenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentExpense)(nil)).Elem()
}

func (o DeploymentExpenseArrayOutput) ToDeploymentExpenseArrayOutput() DeploymentExpenseArrayOutput {
	return o
}

func (o DeploymentExpenseArrayOutput) ToDeploymentExpenseArrayOutputWithContext(ctx context.Context) DeploymentExpenseArrayOutput {
	return o
}

func (o DeploymentExpenseArrayOutput) Index(i pulumi.IntInput) DeploymentExpenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentExpense {
		return vs[0].([]DeploymentExpense)[vs[1].(int)]
	}).(DeploymentExpenseOutput)
}

type DeploymentLastRequest struct {
	// Identifier of the requested action.
	ActionId *string `pulumi:"actionId"`
	// Time at which the request was approved.
	ApprovedAt *string `pulumi:"approvedAt"`
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId *string `pulumi:"blueprintId"`
	// Indicates whether request can be canceled or not.
	Cancelable *bool `pulumi:"cancelable"`
	// The id of the vRA catalog item to request the deployment. Conflicts with `blueprintId` and `blueprintContent`.
	CatalogItemId *string `pulumi:"catalogItemId"`
	// Time at which the request completed.
	CompletedAt *string `pulumi:"completedAt"`
	// The number of tasks completed while fulfilling this request.
	CompletedTasks *int `pulumi:"completedTasks"`
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt *string `pulumi:"createdAt"`
	// Longer user-friendly details of the request.
	Details *string `pulumi:"details"`
	// Indicates whether request is in dismissed state.
	Dismissed *bool `pulumi:"dismissed"`
	// Unique identifier of the resource.
	Id *string `pulumi:"id"`
	// Time at which the request was initialized.
	InitializedAt *string `pulumi:"initializedAt"`
	// Inputs provided by the user. For inputs including those with default values, refer to `inputsIncludingDefaults`.
	Inputs map[string]string `pulumi:"inputs"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// Request outputs.
	Outputs map[string]string `pulumi:"outputs"`
	// The user that initiated the request.
	RequestedBy *string  `pulumi:"requestedBy"`
	ResourceIds []string `pulumi:"resourceIds"`
	// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
	Status     *string `pulumi:"status"`
	TotalTasks *int    `pulumi:"totalTasks"`
	// Last update time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	UpdatedAt *string `pulumi:"updatedAt"`
}

// DeploymentLastRequestInput is an input type that accepts DeploymentLastRequestArgs and DeploymentLastRequestOutput values.
// You can construct a concrete instance of `DeploymentLastRequestInput` via:
//
//	DeploymentLastRequestArgs{...}
type DeploymentLastRequestInput interface {
	pulumi.Input

	ToDeploymentLastRequestOutput() DeploymentLastRequestOutput
	ToDeploymentLastRequestOutputWithContext(context.Context) DeploymentLastRequestOutput
}

type DeploymentLastRequestArgs struct {
	// Identifier of the requested action.
	ActionId pulumi.StringPtrInput `pulumi:"actionId"`
	// Time at which the request was approved.
	ApprovedAt pulumi.StringPtrInput `pulumi:"approvedAt"`
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId pulumi.StringPtrInput `pulumi:"blueprintId"`
	// Indicates whether request can be canceled or not.
	Cancelable pulumi.BoolPtrInput `pulumi:"cancelable"`
	// The id of the vRA catalog item to request the deployment. Conflicts with `blueprintId` and `blueprintContent`.
	CatalogItemId pulumi.StringPtrInput `pulumi:"catalogItemId"`
	// Time at which the request completed.
	CompletedAt pulumi.StringPtrInput `pulumi:"completedAt"`
	// The number of tasks completed while fulfilling this request.
	CompletedTasks pulumi.IntPtrInput `pulumi:"completedTasks"`
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// Longer user-friendly details of the request.
	Details pulumi.StringPtrInput `pulumi:"details"`
	// Indicates whether request is in dismissed state.
	Dismissed pulumi.BoolPtrInput `pulumi:"dismissed"`
	// Unique identifier of the resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Time at which the request was initialized.
	InitializedAt pulumi.StringPtrInput `pulumi:"initializedAt"`
	// Inputs provided by the user. For inputs including those with default values, refer to `inputsIncludingDefaults`.
	Inputs pulumi.StringMapInput `pulumi:"inputs"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Request outputs.
	Outputs pulumi.StringMapInput `pulumi:"outputs"`
	// The user that initiated the request.
	RequestedBy pulumi.StringPtrInput   `pulumi:"requestedBy"`
	ResourceIds pulumi.StringArrayInput `pulumi:"resourceIds"`
	// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
	Status     pulumi.StringPtrInput `pulumi:"status"`
	TotalTasks pulumi.IntPtrInput    `pulumi:"totalTasks"`
	// Last update time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (DeploymentLastRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentLastRequest)(nil)).Elem()
}

func (i DeploymentLastRequestArgs) ToDeploymentLastRequestOutput() DeploymentLastRequestOutput {
	return i.ToDeploymentLastRequestOutputWithContext(context.Background())
}

func (i DeploymentLastRequestArgs) ToDeploymentLastRequestOutputWithContext(ctx context.Context) DeploymentLastRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentLastRequestOutput)
}

// DeploymentLastRequestArrayInput is an input type that accepts DeploymentLastRequestArray and DeploymentLastRequestArrayOutput values.
// You can construct a concrete instance of `DeploymentLastRequestArrayInput` via:
//
//	DeploymentLastRequestArray{ DeploymentLastRequestArgs{...} }
type DeploymentLastRequestArrayInput interface {
	pulumi.Input

	ToDeploymentLastRequestArrayOutput() DeploymentLastRequestArrayOutput
	ToDeploymentLastRequestArrayOutputWithContext(context.Context) DeploymentLastRequestArrayOutput
}

type DeploymentLastRequestArray []DeploymentLastRequestInput

func (DeploymentLastRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentLastRequest)(nil)).Elem()
}

func (i DeploymentLastRequestArray) ToDeploymentLastRequestArrayOutput() DeploymentLastRequestArrayOutput {
	return i.ToDeploymentLastRequestArrayOutputWithContext(context.Background())
}

func (i DeploymentLastRequestArray) ToDeploymentLastRequestArrayOutputWithContext(ctx context.Context) DeploymentLastRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentLastRequestArrayOutput)
}

type DeploymentLastRequestOutput struct{ *pulumi.OutputState }

func (DeploymentLastRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentLastRequest)(nil)).Elem()
}

func (o DeploymentLastRequestOutput) ToDeploymentLastRequestOutput() DeploymentLastRequestOutput {
	return o
}

func (o DeploymentLastRequestOutput) ToDeploymentLastRequestOutputWithContext(ctx context.Context) DeploymentLastRequestOutput {
	return o
}

// Identifier of the requested action.
func (o DeploymentLastRequestOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.ActionId }).(pulumi.StringPtrOutput)
}

// Time at which the request was approved.
func (o DeploymentLastRequestOutput) ApprovedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.ApprovedAt }).(pulumi.StringPtrOutput)
}

// Identifier of the requested blueprint in the form ‘UUID:version’.
func (o DeploymentLastRequestOutput) BlueprintId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.BlueprintId }).(pulumi.StringPtrOutput)
}

// Indicates whether request can be canceled or not.
func (o DeploymentLastRequestOutput) Cancelable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *bool { return v.Cancelable }).(pulumi.BoolPtrOutput)
}

// The id of the vRA catalog item to request the deployment. Conflicts with `blueprintId` and `blueprintContent`.
func (o DeploymentLastRequestOutput) CatalogItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.CatalogItemId }).(pulumi.StringPtrOutput)
}

// Time at which the request completed.
func (o DeploymentLastRequestOutput) CompletedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.CompletedAt }).(pulumi.StringPtrOutput)
}

// The number of tasks completed while fulfilling this request.
func (o DeploymentLastRequestOutput) CompletedTasks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *int { return v.CompletedTasks }).(pulumi.IntPtrOutput)
}

// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
func (o DeploymentLastRequestOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Longer user-friendly details of the request.
func (o DeploymentLastRequestOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.Details }).(pulumi.StringPtrOutput)
}

// Indicates whether request is in dismissed state.
func (o DeploymentLastRequestOutput) Dismissed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *bool { return v.Dismissed }).(pulumi.BoolPtrOutput)
}

// Unique identifier of the resource.
func (o DeploymentLastRequestOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Time at which the request was initialized.
func (o DeploymentLastRequestOutput) InitializedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.InitializedAt }).(pulumi.StringPtrOutput)
}

// Inputs provided by the user. For inputs including those with default values, refer to `inputsIncludingDefaults`.
func (o DeploymentLastRequestOutput) Inputs() pulumi.StringMapOutput {
	return o.ApplyT(func(v DeploymentLastRequest) map[string]string { return v.Inputs }).(pulumi.StringMapOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o DeploymentLastRequestOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Request outputs.
func (o DeploymentLastRequestOutput) Outputs() pulumi.StringMapOutput {
	return o.ApplyT(func(v DeploymentLastRequest) map[string]string { return v.Outputs }).(pulumi.StringMapOutput)
}

// The user that initiated the request.
func (o DeploymentLastRequestOutput) RequestedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.RequestedBy }).(pulumi.StringPtrOutput)
}

func (o DeploymentLastRequestOutput) ResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentLastRequest) []string { return v.ResourceIds }).(pulumi.StringArrayOutput)
}

// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
func (o DeploymentLastRequestOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o DeploymentLastRequestOutput) TotalTasks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *int { return v.TotalTasks }).(pulumi.IntPtrOutput)
}

// Last update time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
func (o DeploymentLastRequestOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLastRequest) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type DeploymentLastRequestArrayOutput struct{ *pulumi.OutputState }

func (DeploymentLastRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentLastRequest)(nil)).Elem()
}

func (o DeploymentLastRequestArrayOutput) ToDeploymentLastRequestArrayOutput() DeploymentLastRequestArrayOutput {
	return o
}

func (o DeploymentLastRequestArrayOutput) ToDeploymentLastRequestArrayOutputWithContext(ctx context.Context) DeploymentLastRequestArrayOutput {
	return o
}

func (o DeploymentLastRequestArrayOutput) Index(i pulumi.IntInput) DeploymentLastRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentLastRequest {
		return vs[0].([]DeploymentLastRequest)[vs[1].(int)]
	}).(DeploymentLastRequestOutput)
}

type DeploymentProject struct {
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// Unique identifier of the resource.
	Id *string `pulumi:"id"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// Version of the entity, if applicable.
	Version *string `pulumi:"version"`
}

// DeploymentProjectInput is an input type that accepts DeploymentProjectArgs and DeploymentProjectOutput values.
// You can construct a concrete instance of `DeploymentProjectInput` via:
//
//	DeploymentProjectArgs{...}
type DeploymentProjectInput interface {
	pulumi.Input

	ToDeploymentProjectOutput() DeploymentProjectOutput
	ToDeploymentProjectOutputWithContext(context.Context) DeploymentProjectOutput
}

type DeploymentProjectArgs struct {
	// A human-friendly description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Unique identifier of the resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Version of the entity, if applicable.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DeploymentProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProject)(nil)).Elem()
}

func (i DeploymentProjectArgs) ToDeploymentProjectOutput() DeploymentProjectOutput {
	return i.ToDeploymentProjectOutputWithContext(context.Background())
}

func (i DeploymentProjectArgs) ToDeploymentProjectOutputWithContext(ctx context.Context) DeploymentProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentProjectOutput)
}

// DeploymentProjectArrayInput is an input type that accepts DeploymentProjectArray and DeploymentProjectArrayOutput values.
// You can construct a concrete instance of `DeploymentProjectArrayInput` via:
//
//	DeploymentProjectArray{ DeploymentProjectArgs{...} }
type DeploymentProjectArrayInput interface {
	pulumi.Input

	ToDeploymentProjectArrayOutput() DeploymentProjectArrayOutput
	ToDeploymentProjectArrayOutputWithContext(context.Context) DeploymentProjectArrayOutput
}

type DeploymentProjectArray []DeploymentProjectInput

func (DeploymentProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentProject)(nil)).Elem()
}

func (i DeploymentProjectArray) ToDeploymentProjectArrayOutput() DeploymentProjectArrayOutput {
	return i.ToDeploymentProjectArrayOutputWithContext(context.Background())
}

func (i DeploymentProjectArray) ToDeploymentProjectArrayOutputWithContext(ctx context.Context) DeploymentProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentProjectArrayOutput)
}

type DeploymentProjectOutput struct{ *pulumi.OutputState }

func (DeploymentProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProject)(nil)).Elem()
}

func (o DeploymentProjectOutput) ToDeploymentProjectOutput() DeploymentProjectOutput {
	return o
}

func (o DeploymentProjectOutput) ToDeploymentProjectOutputWithContext(ctx context.Context) DeploymentProjectOutput {
	return o
}

// A human-friendly description.
func (o DeploymentProjectOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProject) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource.
func (o DeploymentProjectOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProject) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o DeploymentProjectOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProject) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Version of the entity, if applicable.
func (o DeploymentProjectOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProject) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DeploymentProjectArrayOutput struct{ *pulumi.OutputState }

func (DeploymentProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentProject)(nil)).Elem()
}

func (o DeploymentProjectArrayOutput) ToDeploymentProjectArrayOutput() DeploymentProjectArrayOutput {
	return o
}

func (o DeploymentProjectArrayOutput) ToDeploymentProjectArrayOutputWithContext(ctx context.Context) DeploymentProjectArrayOutput {
	return o
}

func (o DeploymentProjectArrayOutput) Index(i pulumi.IntInput) DeploymentProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentProject {
		return vs[0].([]DeploymentProject)[vs[1].(int)]
	}).(DeploymentProjectOutput)
}

type DeploymentResource struct {
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt *string `pulumi:"createdAt"`
	// A list of other resources this resource depends on.
	DependsOns []string `pulumi:"dependsOns"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// Expense incurred for the deployment.
	Expenses []DeploymentResourceExpense `pulumi:"expenses"`
	// Unique identifier of the resource.
	Id string `pulumi:"id"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name string `pulumi:"name"`
	// List of properties in the encoded JSON string format.
	PropertiesJson *string `pulumi:"propertiesJson"`
	// The current state of the resource. Supported values are `PARTIAL`, `TAINTED`, `OK.`
	State *string `pulumi:"state"`
	// The current sync status. Supported values are `SUCCESS`, `MISSING`, `STALE`.
	SyncStatus *string `pulumi:"syncStatus"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// DeploymentResourceInput is an input type that accepts DeploymentResourceArgs and DeploymentResourceOutput values.
// You can construct a concrete instance of `DeploymentResourceInput` via:
//
//	DeploymentResourceArgs{...}
type DeploymentResourceInput interface {
	pulumi.Input

	ToDeploymentResourceOutput() DeploymentResourceOutput
	ToDeploymentResourceOutputWithContext(context.Context) DeploymentResourceOutput
}

type DeploymentResourceArgs struct {
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// A list of other resources this resource depends on.
	DependsOns pulumi.StringArrayInput `pulumi:"dependsOns"`
	// A human-friendly description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Expense incurred for the deployment.
	Expenses DeploymentResourceExpenseArrayInput `pulumi:"expenses"`
	// Unique identifier of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringInput `pulumi:"name"`
	// List of properties in the encoded JSON string format.
	PropertiesJson pulumi.StringPtrInput `pulumi:"propertiesJson"`
	// The current state of the resource. Supported values are `PARTIAL`, `TAINTED`, `OK.`
	State pulumi.StringPtrInput `pulumi:"state"`
	// The current sync status. Supported values are `SUCCESS`, `MISSING`, `STALE`.
	SyncStatus pulumi.StringPtrInput `pulumi:"syncStatus"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DeploymentResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResource)(nil)).Elem()
}

func (i DeploymentResourceArgs) ToDeploymentResourceOutput() DeploymentResourceOutput {
	return i.ToDeploymentResourceOutputWithContext(context.Background())
}

func (i DeploymentResourceArgs) ToDeploymentResourceOutputWithContext(ctx context.Context) DeploymentResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResourceOutput)
}

// DeploymentResourceArrayInput is an input type that accepts DeploymentResourceArray and DeploymentResourceArrayOutput values.
// You can construct a concrete instance of `DeploymentResourceArrayInput` via:
//
//	DeploymentResourceArray{ DeploymentResourceArgs{...} }
type DeploymentResourceArrayInput interface {
	pulumi.Input

	ToDeploymentResourceArrayOutput() DeploymentResourceArrayOutput
	ToDeploymentResourceArrayOutputWithContext(context.Context) DeploymentResourceArrayOutput
}

type DeploymentResourceArray []DeploymentResourceInput

func (DeploymentResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentResource)(nil)).Elem()
}

func (i DeploymentResourceArray) ToDeploymentResourceArrayOutput() DeploymentResourceArrayOutput {
	return i.ToDeploymentResourceArrayOutputWithContext(context.Background())
}

func (i DeploymentResourceArray) ToDeploymentResourceArrayOutputWithContext(ctx context.Context) DeploymentResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResourceArrayOutput)
}

type DeploymentResourceOutput struct{ *pulumi.OutputState }

func (DeploymentResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResource)(nil)).Elem()
}

func (o DeploymentResourceOutput) ToDeploymentResourceOutput() DeploymentResourceOutput {
	return o
}

func (o DeploymentResourceOutput) ToDeploymentResourceOutputWithContext(ctx context.Context) DeploymentResourceOutput {
	return o
}

// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
func (o DeploymentResourceOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResource) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// A list of other resources this resource depends on.
func (o DeploymentResourceOutput) DependsOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentResource) []string { return v.DependsOns }).(pulumi.StringArrayOutput)
}

// A human-friendly description.
func (o DeploymentResourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Expense incurred for the deployment.
func (o DeploymentResourceOutput) Expenses() DeploymentResourceExpenseArrayOutput {
	return o.ApplyT(func(v DeploymentResource) []DeploymentResourceExpense { return v.Expenses }).(DeploymentResourceExpenseArrayOutput)
}

// Unique identifier of the resource.
func (o DeploymentResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentResource) string { return v.Id }).(pulumi.StringOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o DeploymentResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentResource) string { return v.Name }).(pulumi.StringOutput)
}

// List of properties in the encoded JSON string format.
func (o DeploymentResourceOutput) PropertiesJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResource) *string { return v.PropertiesJson }).(pulumi.StringPtrOutput)
}

// The current state of the resource. Supported values are `PARTIAL`, `TAINTED`, `OK.`
func (o DeploymentResourceOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResource) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The current sync status. Supported values are `SUCCESS`, `MISSING`, `STALE`.
func (o DeploymentResourceOutput) SyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResource) *string { return v.SyncStatus }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o DeploymentResourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DeploymentResourceArrayOutput struct{ *pulumi.OutputState }

func (DeploymentResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentResource)(nil)).Elem()
}

func (o DeploymentResourceArrayOutput) ToDeploymentResourceArrayOutput() DeploymentResourceArrayOutput {
	return o
}

func (o DeploymentResourceArrayOutput) ToDeploymentResourceArrayOutputWithContext(ctx context.Context) DeploymentResourceArrayOutput {
	return o
}

func (o DeploymentResourceArrayOutput) Index(i pulumi.IntInput) DeploymentResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentResource {
		return vs[0].([]DeploymentResource)[vs[1].(int)]
	}).(DeploymentResourceOutput)
}

type DeploymentResourceExpense struct {
	// Additional expense incurred for the resource.
	AdditionalExpense *float64 `pulumi:"additionalExpense"`
	// Expense sync message code if any.
	Code *string `pulumi:"code"`
	// Compute expense of the entity.
	ComputeExpense *float64 `pulumi:"computeExpense"`
	// Last expense sync time.
	LastUpdateTime *string `pulumi:"lastUpdateTime"`
	// Expense sync message if any.
	Message *string `pulumi:"message"`
	// Network expense of the entity.
	NetworkExpense *float64 `pulumi:"networkExpense"`
	// Storage expense of the entity.
	StorageExpense *float64 `pulumi:"storageExpense"`
	// Total expense of the entity.
	TotalExpense *float64 `pulumi:"totalExpense"`
	// Monetary unit.
	Unit *string `pulumi:"unit"`
}

// DeploymentResourceExpenseInput is an input type that accepts DeploymentResourceExpenseArgs and DeploymentResourceExpenseOutput values.
// You can construct a concrete instance of `DeploymentResourceExpenseInput` via:
//
//	DeploymentResourceExpenseArgs{...}
type DeploymentResourceExpenseInput interface {
	pulumi.Input

	ToDeploymentResourceExpenseOutput() DeploymentResourceExpenseOutput
	ToDeploymentResourceExpenseOutputWithContext(context.Context) DeploymentResourceExpenseOutput
}

type DeploymentResourceExpenseArgs struct {
	// Additional expense incurred for the resource.
	AdditionalExpense pulumi.Float64PtrInput `pulumi:"additionalExpense"`
	// Expense sync message code if any.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Compute expense of the entity.
	ComputeExpense pulumi.Float64PtrInput `pulumi:"computeExpense"`
	// Last expense sync time.
	LastUpdateTime pulumi.StringPtrInput `pulumi:"lastUpdateTime"`
	// Expense sync message if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Network expense of the entity.
	NetworkExpense pulumi.Float64PtrInput `pulumi:"networkExpense"`
	// Storage expense of the entity.
	StorageExpense pulumi.Float64PtrInput `pulumi:"storageExpense"`
	// Total expense of the entity.
	TotalExpense pulumi.Float64PtrInput `pulumi:"totalExpense"`
	// Monetary unit.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (DeploymentResourceExpenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResourceExpense)(nil)).Elem()
}

func (i DeploymentResourceExpenseArgs) ToDeploymentResourceExpenseOutput() DeploymentResourceExpenseOutput {
	return i.ToDeploymentResourceExpenseOutputWithContext(context.Background())
}

func (i DeploymentResourceExpenseArgs) ToDeploymentResourceExpenseOutputWithContext(ctx context.Context) DeploymentResourceExpenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResourceExpenseOutput)
}

// DeploymentResourceExpenseArrayInput is an input type that accepts DeploymentResourceExpenseArray and DeploymentResourceExpenseArrayOutput values.
// You can construct a concrete instance of `DeploymentResourceExpenseArrayInput` via:
//
//	DeploymentResourceExpenseArray{ DeploymentResourceExpenseArgs{...} }
type DeploymentResourceExpenseArrayInput interface {
	pulumi.Input

	ToDeploymentResourceExpenseArrayOutput() DeploymentResourceExpenseArrayOutput
	ToDeploymentResourceExpenseArrayOutputWithContext(context.Context) DeploymentResourceExpenseArrayOutput
}

type DeploymentResourceExpenseArray []DeploymentResourceExpenseInput

func (DeploymentResourceExpenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentResourceExpense)(nil)).Elem()
}

func (i DeploymentResourceExpenseArray) ToDeploymentResourceExpenseArrayOutput() DeploymentResourceExpenseArrayOutput {
	return i.ToDeploymentResourceExpenseArrayOutputWithContext(context.Background())
}

func (i DeploymentResourceExpenseArray) ToDeploymentResourceExpenseArrayOutputWithContext(ctx context.Context) DeploymentResourceExpenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResourceExpenseArrayOutput)
}

type DeploymentResourceExpenseOutput struct{ *pulumi.OutputState }

func (DeploymentResourceExpenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResourceExpense)(nil)).Elem()
}

func (o DeploymentResourceExpenseOutput) ToDeploymentResourceExpenseOutput() DeploymentResourceExpenseOutput {
	return o
}

func (o DeploymentResourceExpenseOutput) ToDeploymentResourceExpenseOutputWithContext(ctx context.Context) DeploymentResourceExpenseOutput {
	return o
}

// Additional expense incurred for the resource.
func (o DeploymentResourceExpenseOutput) AdditionalExpense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentResourceExpense) *float64 { return v.AdditionalExpense }).(pulumi.Float64PtrOutput)
}

// Expense sync message code if any.
func (o DeploymentResourceExpenseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResourceExpense) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Compute expense of the entity.
func (o DeploymentResourceExpenseOutput) ComputeExpense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentResourceExpense) *float64 { return v.ComputeExpense }).(pulumi.Float64PtrOutput)
}

// Last expense sync time.
func (o DeploymentResourceExpenseOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResourceExpense) *string { return v.LastUpdateTime }).(pulumi.StringPtrOutput)
}

// Expense sync message if any.
func (o DeploymentResourceExpenseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResourceExpense) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Network expense of the entity.
func (o DeploymentResourceExpenseOutput) NetworkExpense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentResourceExpense) *float64 { return v.NetworkExpense }).(pulumi.Float64PtrOutput)
}

// Storage expense of the entity.
func (o DeploymentResourceExpenseOutput) StorageExpense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentResourceExpense) *float64 { return v.StorageExpense }).(pulumi.Float64PtrOutput)
}

// Total expense of the entity.
func (o DeploymentResourceExpenseOutput) TotalExpense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentResourceExpense) *float64 { return v.TotalExpense }).(pulumi.Float64PtrOutput)
}

// Monetary unit.
func (o DeploymentResourceExpenseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResourceExpense) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type DeploymentResourceExpenseArrayOutput struct{ *pulumi.OutputState }

func (DeploymentResourceExpenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentResourceExpense)(nil)).Elem()
}

func (o DeploymentResourceExpenseArrayOutput) ToDeploymentResourceExpenseArrayOutput() DeploymentResourceExpenseArrayOutput {
	return o
}

func (o DeploymentResourceExpenseArrayOutput) ToDeploymentResourceExpenseArrayOutputWithContext(ctx context.Context) DeploymentResourceExpenseArrayOutput {
	return o
}

func (o DeploymentResourceExpenseArrayOutput) Index(i pulumi.IntInput) DeploymentResourceExpenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentResourceExpense {
		return vs[0].([]DeploymentResourceExpense)[vs[1].(int)]
	}).(DeploymentResourceExpenseOutput)
}

type GetDeploymentExpense struct {
	// Additional expense incurred for the resource.
	AdditionalExpense float64 `pulumi:"additionalExpense"`
	// Expense sync message code if any.
	Code string `pulumi:"code"`
	// Compute expense of the entity.
	ComputeExpense float64 `pulumi:"computeExpense"`
	// Last expense sync time.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// Expense sync message if any.
	Message string `pulumi:"message"`
	// Network expense of the entity.
	NetworkExpense float64 `pulumi:"networkExpense"`
	// Storage expense of the entity.
	StorageExpense float64 `pulumi:"storageExpense"`
	// Total expense of the entity.
	TotalExpense float64 `pulumi:"totalExpense"`
	// Monetary unit.
	Unit string `pulumi:"unit"`
}

// GetDeploymentExpenseInput is an input type that accepts GetDeploymentExpenseArgs and GetDeploymentExpenseOutput values.
// You can construct a concrete instance of `GetDeploymentExpenseInput` via:
//
//	GetDeploymentExpenseArgs{...}
type GetDeploymentExpenseInput interface {
	pulumi.Input

	ToGetDeploymentExpenseOutput() GetDeploymentExpenseOutput
	ToGetDeploymentExpenseOutputWithContext(context.Context) GetDeploymentExpenseOutput
}

type GetDeploymentExpenseArgs struct {
	// Additional expense incurred for the resource.
	AdditionalExpense pulumi.Float64Input `pulumi:"additionalExpense"`
	// Expense sync message code if any.
	Code pulumi.StringInput `pulumi:"code"`
	// Compute expense of the entity.
	ComputeExpense pulumi.Float64Input `pulumi:"computeExpense"`
	// Last expense sync time.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// Expense sync message if any.
	Message pulumi.StringInput `pulumi:"message"`
	// Network expense of the entity.
	NetworkExpense pulumi.Float64Input `pulumi:"networkExpense"`
	// Storage expense of the entity.
	StorageExpense pulumi.Float64Input `pulumi:"storageExpense"`
	// Total expense of the entity.
	TotalExpense pulumi.Float64Input `pulumi:"totalExpense"`
	// Monetary unit.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetDeploymentExpenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentExpense)(nil)).Elem()
}

func (i GetDeploymentExpenseArgs) ToGetDeploymentExpenseOutput() GetDeploymentExpenseOutput {
	return i.ToGetDeploymentExpenseOutputWithContext(context.Background())
}

func (i GetDeploymentExpenseArgs) ToGetDeploymentExpenseOutputWithContext(ctx context.Context) GetDeploymentExpenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentExpenseOutput)
}

// GetDeploymentExpenseArrayInput is an input type that accepts GetDeploymentExpenseArray and GetDeploymentExpenseArrayOutput values.
// You can construct a concrete instance of `GetDeploymentExpenseArrayInput` via:
//
//	GetDeploymentExpenseArray{ GetDeploymentExpenseArgs{...} }
type GetDeploymentExpenseArrayInput interface {
	pulumi.Input

	ToGetDeploymentExpenseArrayOutput() GetDeploymentExpenseArrayOutput
	ToGetDeploymentExpenseArrayOutputWithContext(context.Context) GetDeploymentExpenseArrayOutput
}

type GetDeploymentExpenseArray []GetDeploymentExpenseInput

func (GetDeploymentExpenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentExpense)(nil)).Elem()
}

func (i GetDeploymentExpenseArray) ToGetDeploymentExpenseArrayOutput() GetDeploymentExpenseArrayOutput {
	return i.ToGetDeploymentExpenseArrayOutputWithContext(context.Background())
}

func (i GetDeploymentExpenseArray) ToGetDeploymentExpenseArrayOutputWithContext(ctx context.Context) GetDeploymentExpenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentExpenseArrayOutput)
}

type GetDeploymentExpenseOutput struct{ *pulumi.OutputState }

func (GetDeploymentExpenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentExpense)(nil)).Elem()
}

func (o GetDeploymentExpenseOutput) ToGetDeploymentExpenseOutput() GetDeploymentExpenseOutput {
	return o
}

func (o GetDeploymentExpenseOutput) ToGetDeploymentExpenseOutputWithContext(ctx context.Context) GetDeploymentExpenseOutput {
	return o
}

// Additional expense incurred for the resource.
func (o GetDeploymentExpenseOutput) AdditionalExpense() pulumi.Float64Output {
	return o.ApplyT(func(v GetDeploymentExpense) float64 { return v.AdditionalExpense }).(pulumi.Float64Output)
}

// Expense sync message code if any.
func (o GetDeploymentExpenseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentExpense) string { return v.Code }).(pulumi.StringOutput)
}

// Compute expense of the entity.
func (o GetDeploymentExpenseOutput) ComputeExpense() pulumi.Float64Output {
	return o.ApplyT(func(v GetDeploymentExpense) float64 { return v.ComputeExpense }).(pulumi.Float64Output)
}

// Last expense sync time.
func (o GetDeploymentExpenseOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentExpense) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// Expense sync message if any.
func (o GetDeploymentExpenseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentExpense) string { return v.Message }).(pulumi.StringOutput)
}

// Network expense of the entity.
func (o GetDeploymentExpenseOutput) NetworkExpense() pulumi.Float64Output {
	return o.ApplyT(func(v GetDeploymentExpense) float64 { return v.NetworkExpense }).(pulumi.Float64Output)
}

// Storage expense of the entity.
func (o GetDeploymentExpenseOutput) StorageExpense() pulumi.Float64Output {
	return o.ApplyT(func(v GetDeploymentExpense) float64 { return v.StorageExpense }).(pulumi.Float64Output)
}

// Total expense of the entity.
func (o GetDeploymentExpenseOutput) TotalExpense() pulumi.Float64Output {
	return o.ApplyT(func(v GetDeploymentExpense) float64 { return v.TotalExpense }).(pulumi.Float64Output)
}

// Monetary unit.
func (o GetDeploymentExpenseOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentExpense) string { return v.Unit }).(pulumi.StringOutput)
}

type GetDeploymentExpenseArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentExpenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentExpense)(nil)).Elem()
}

func (o GetDeploymentExpenseArrayOutput) ToGetDeploymentExpenseArrayOutput() GetDeploymentExpenseArrayOutput {
	return o
}

func (o GetDeploymentExpenseArrayOutput) ToGetDeploymentExpenseArrayOutputWithContext(ctx context.Context) GetDeploymentExpenseArrayOutput {
	return o
}

func (o GetDeploymentExpenseArrayOutput) Index(i pulumi.IntInput) GetDeploymentExpenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentExpense {
		return vs[0].([]GetDeploymentExpense)[vs[1].(int)]
	}).(GetDeploymentExpenseOutput)
}

type GetDeploymentLastRequest struct {
	// Identifier of the requested action.
	ActionId string `pulumi:"actionId"`
	// Time at which the request was approved.
	ApprovedAt string `pulumi:"approvedAt"`
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId string `pulumi:"blueprintId"`
	// Indicates whether request can be canceled or not.
	Cancelable bool `pulumi:"cancelable"`
	// Identifier of the requested catalog item in the form ‘UUID:version’.
	CatalogItemId string `pulumi:"catalogItemId"`
	// Time at which the request completed.
	CompletedAt string `pulumi:"completedAt"`
	// The number of tasks completed while fulfilling this request.
	CompletedTasks int `pulumi:"completedTasks"`
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt string `pulumi:"createdAt"`
	// Longer user-friendly details of the request.
	Details string `pulumi:"details"`
	// Indicates whether request is in dismissed state.
	Dismissed bool `pulumi:"dismissed"`
	// The id of the deployment. One of `id` or `name` must be provided.
	Id string `pulumi:"id"`
	// Time at which the request was initialized.
	InitializedAt string `pulumi:"initializedAt"`
	// List of request inputs.
	Inputs map[string]string `pulumi:"inputs"`
	// Name of the deployment. One of `id` or `name` must be provided.
	Name string `pulumi:"name"`
	// Request outputs.
	Outputs map[string]string `pulumi:"outputs"`
	// The user that initiated the request.
	RequestedBy string   `pulumi:"requestedBy"`
	ResourceIds []string `pulumi:"resourceIds"`
	// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
	Status     string `pulumi:"status"`
	TotalTasks int    `pulumi:"totalTasks"`
	// Last update time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetDeploymentLastRequestInput is an input type that accepts GetDeploymentLastRequestArgs and GetDeploymentLastRequestOutput values.
// You can construct a concrete instance of `GetDeploymentLastRequestInput` via:
//
//	GetDeploymentLastRequestArgs{...}
type GetDeploymentLastRequestInput interface {
	pulumi.Input

	ToGetDeploymentLastRequestOutput() GetDeploymentLastRequestOutput
	ToGetDeploymentLastRequestOutputWithContext(context.Context) GetDeploymentLastRequestOutput
}

type GetDeploymentLastRequestArgs struct {
	// Identifier of the requested action.
	ActionId pulumi.StringInput `pulumi:"actionId"`
	// Time at which the request was approved.
	ApprovedAt pulumi.StringInput `pulumi:"approvedAt"`
	// Identifier of the requested blueprint in the form ‘UUID:version’.
	BlueprintId pulumi.StringInput `pulumi:"blueprintId"`
	// Indicates whether request can be canceled or not.
	Cancelable pulumi.BoolInput `pulumi:"cancelable"`
	// Identifier of the requested catalog item in the form ‘UUID:version’.
	CatalogItemId pulumi.StringInput `pulumi:"catalogItemId"`
	// Time at which the request completed.
	CompletedAt pulumi.StringInput `pulumi:"completedAt"`
	// The number of tasks completed while fulfilling this request.
	CompletedTasks pulumi.IntInput `pulumi:"completedTasks"`
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Longer user-friendly details of the request.
	Details pulumi.StringInput `pulumi:"details"`
	// Indicates whether request is in dismissed state.
	Dismissed pulumi.BoolInput `pulumi:"dismissed"`
	// The id of the deployment. One of `id` or `name` must be provided.
	Id pulumi.StringInput `pulumi:"id"`
	// Time at which the request was initialized.
	InitializedAt pulumi.StringInput `pulumi:"initializedAt"`
	// List of request inputs.
	Inputs pulumi.StringMapInput `pulumi:"inputs"`
	// Name of the deployment. One of `id` or `name` must be provided.
	Name pulumi.StringInput `pulumi:"name"`
	// Request outputs.
	Outputs pulumi.StringMapInput `pulumi:"outputs"`
	// The user that initiated the request.
	RequestedBy pulumi.StringInput      `pulumi:"requestedBy"`
	ResourceIds pulumi.StringArrayInput `pulumi:"resourceIds"`
	// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
	Status     pulumi.StringInput `pulumi:"status"`
	TotalTasks pulumi.IntInput    `pulumi:"totalTasks"`
	// Last update time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetDeploymentLastRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentLastRequest)(nil)).Elem()
}

func (i GetDeploymentLastRequestArgs) ToGetDeploymentLastRequestOutput() GetDeploymentLastRequestOutput {
	return i.ToGetDeploymentLastRequestOutputWithContext(context.Background())
}

func (i GetDeploymentLastRequestArgs) ToGetDeploymentLastRequestOutputWithContext(ctx context.Context) GetDeploymentLastRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentLastRequestOutput)
}

// GetDeploymentLastRequestArrayInput is an input type that accepts GetDeploymentLastRequestArray and GetDeploymentLastRequestArrayOutput values.
// You can construct a concrete instance of `GetDeploymentLastRequestArrayInput` via:
//
//	GetDeploymentLastRequestArray{ GetDeploymentLastRequestArgs{...} }
type GetDeploymentLastRequestArrayInput interface {
	pulumi.Input

	ToGetDeploymentLastRequestArrayOutput() GetDeploymentLastRequestArrayOutput
	ToGetDeploymentLastRequestArrayOutputWithContext(context.Context) GetDeploymentLastRequestArrayOutput
}

type GetDeploymentLastRequestArray []GetDeploymentLastRequestInput

func (GetDeploymentLastRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentLastRequest)(nil)).Elem()
}

func (i GetDeploymentLastRequestArray) ToGetDeploymentLastRequestArrayOutput() GetDeploymentLastRequestArrayOutput {
	return i.ToGetDeploymentLastRequestArrayOutputWithContext(context.Background())
}

func (i GetDeploymentLastRequestArray) ToGetDeploymentLastRequestArrayOutputWithContext(ctx context.Context) GetDeploymentLastRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentLastRequestArrayOutput)
}

type GetDeploymentLastRequestOutput struct{ *pulumi.OutputState }

func (GetDeploymentLastRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentLastRequest)(nil)).Elem()
}

func (o GetDeploymentLastRequestOutput) ToGetDeploymentLastRequestOutput() GetDeploymentLastRequestOutput {
	return o
}

func (o GetDeploymentLastRequestOutput) ToGetDeploymentLastRequestOutputWithContext(ctx context.Context) GetDeploymentLastRequestOutput {
	return o
}

// Identifier of the requested action.
func (o GetDeploymentLastRequestOutput) ActionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.ActionId }).(pulumi.StringOutput)
}

// Time at which the request was approved.
func (o GetDeploymentLastRequestOutput) ApprovedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.ApprovedAt }).(pulumi.StringOutput)
}

// Identifier of the requested blueprint in the form ‘UUID:version’.
func (o GetDeploymentLastRequestOutput) BlueprintId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.BlueprintId }).(pulumi.StringOutput)
}

// Indicates whether request can be canceled or not.
func (o GetDeploymentLastRequestOutput) Cancelable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) bool { return v.Cancelable }).(pulumi.BoolOutput)
}

// Identifier of the requested catalog item in the form ‘UUID:version’.
func (o GetDeploymentLastRequestOutput) CatalogItemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.CatalogItemId }).(pulumi.StringOutput)
}

// Time at which the request completed.
func (o GetDeploymentLastRequestOutput) CompletedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.CompletedAt }).(pulumi.StringOutput)
}

// The number of tasks completed while fulfilling this request.
func (o GetDeploymentLastRequestOutput) CompletedTasks() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) int { return v.CompletedTasks }).(pulumi.IntOutput)
}

// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
func (o GetDeploymentLastRequestOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Longer user-friendly details of the request.
func (o GetDeploymentLastRequestOutput) Details() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.Details }).(pulumi.StringOutput)
}

// Indicates whether request is in dismissed state.
func (o GetDeploymentLastRequestOutput) Dismissed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) bool { return v.Dismissed }).(pulumi.BoolOutput)
}

// The id of the deployment. One of `id` or `name` must be provided.
func (o GetDeploymentLastRequestOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.Id }).(pulumi.StringOutput)
}

// Time at which the request was initialized.
func (o GetDeploymentLastRequestOutput) InitializedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.InitializedAt }).(pulumi.StringOutput)
}

// List of request inputs.
func (o GetDeploymentLastRequestOutput) Inputs() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) map[string]string { return v.Inputs }).(pulumi.StringMapOutput)
}

// Name of the deployment. One of `id` or `name` must be provided.
func (o GetDeploymentLastRequestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.Name }).(pulumi.StringOutput)
}

// Request outputs.
func (o GetDeploymentLastRequestOutput) Outputs() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) map[string]string { return v.Outputs }).(pulumi.StringMapOutput)
}

// The user that initiated the request.
func (o GetDeploymentLastRequestOutput) RequestedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.RequestedBy }).(pulumi.StringOutput)
}

func (o GetDeploymentLastRequestOutput) ResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) []string { return v.ResourceIds }).(pulumi.StringArrayOutput)
}

// Deployment status. Supported values are: `CREATE_SUCCESSFUL`, `CREATE_INPROGRESS`, `CREATE_FAILED`, `UPDATE_SUCCESSFUL`, `UPDATE_INPROGRESS`, `UPDATE_FAILED`, `DELETE_SUCCESSFUL`, `DELETE_INPROGRESS`, `DELETE_FAILED`, `ACTION_SUCCESSFUL`, `ACTION_INPROGRESS`, `ACTION_FAILED`.
func (o GetDeploymentLastRequestOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetDeploymentLastRequestOutput) TotalTasks() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) int { return v.TotalTasks }).(pulumi.IntOutput)
}

// Last update time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
func (o GetDeploymentLastRequestOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentLastRequest) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetDeploymentLastRequestArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentLastRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentLastRequest)(nil)).Elem()
}

func (o GetDeploymentLastRequestArrayOutput) ToGetDeploymentLastRequestArrayOutput() GetDeploymentLastRequestArrayOutput {
	return o
}

func (o GetDeploymentLastRequestArrayOutput) ToGetDeploymentLastRequestArrayOutputWithContext(ctx context.Context) GetDeploymentLastRequestArrayOutput {
	return o
}

func (o GetDeploymentLastRequestArrayOutput) Index(i pulumi.IntInput) GetDeploymentLastRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentLastRequest {
		return vs[0].([]GetDeploymentLastRequest)[vs[1].(int)]
	}).(GetDeploymentLastRequestOutput)
}

type GetDeploymentProject struct {
	// A description of the resource.
	Description *string `pulumi:"description"`
	// The id of the deployment. One of `id` or `name` must be provided.
	Id *string `pulumi:"id"`
	// Name of the deployment. One of `id` or `name` must be provided.
	Name *string `pulumi:"name"`
	// Version of the entity, if applicable.
	Version *string `pulumi:"version"`
}

// GetDeploymentProjectInput is an input type that accepts GetDeploymentProjectArgs and GetDeploymentProjectOutput values.
// You can construct a concrete instance of `GetDeploymentProjectInput` via:
//
//	GetDeploymentProjectArgs{...}
type GetDeploymentProjectInput interface {
	pulumi.Input

	ToGetDeploymentProjectOutput() GetDeploymentProjectOutput
	ToGetDeploymentProjectOutputWithContext(context.Context) GetDeploymentProjectOutput
}

type GetDeploymentProjectArgs struct {
	// A description of the resource.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The id of the deployment. One of `id` or `name` must be provided.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the deployment. One of `id` or `name` must be provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Version of the entity, if applicable.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetDeploymentProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentProject)(nil)).Elem()
}

func (i GetDeploymentProjectArgs) ToGetDeploymentProjectOutput() GetDeploymentProjectOutput {
	return i.ToGetDeploymentProjectOutputWithContext(context.Background())
}

func (i GetDeploymentProjectArgs) ToGetDeploymentProjectOutputWithContext(ctx context.Context) GetDeploymentProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentProjectOutput)
}

// GetDeploymentProjectArrayInput is an input type that accepts GetDeploymentProjectArray and GetDeploymentProjectArrayOutput values.
// You can construct a concrete instance of `GetDeploymentProjectArrayInput` via:
//
//	GetDeploymentProjectArray{ GetDeploymentProjectArgs{...} }
type GetDeploymentProjectArrayInput interface {
	pulumi.Input

	ToGetDeploymentProjectArrayOutput() GetDeploymentProjectArrayOutput
	ToGetDeploymentProjectArrayOutputWithContext(context.Context) GetDeploymentProjectArrayOutput
}

type GetDeploymentProjectArray []GetDeploymentProjectInput

func (GetDeploymentProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentProject)(nil)).Elem()
}

func (i GetDeploymentProjectArray) ToGetDeploymentProjectArrayOutput() GetDeploymentProjectArrayOutput {
	return i.ToGetDeploymentProjectArrayOutputWithContext(context.Background())
}

func (i GetDeploymentProjectArray) ToGetDeploymentProjectArrayOutputWithContext(ctx context.Context) GetDeploymentProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentProjectArrayOutput)
}

type GetDeploymentProjectOutput struct{ *pulumi.OutputState }

func (GetDeploymentProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentProject)(nil)).Elem()
}

func (o GetDeploymentProjectOutput) ToGetDeploymentProjectOutput() GetDeploymentProjectOutput {
	return o
}

func (o GetDeploymentProjectOutput) ToGetDeploymentProjectOutputWithContext(ctx context.Context) GetDeploymentProjectOutput {
	return o
}

// A description of the resource.
func (o GetDeploymentProjectOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentProject) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The id of the deployment. One of `id` or `name` must be provided.
func (o GetDeploymentProjectOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentProject) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the deployment. One of `id` or `name` must be provided.
func (o GetDeploymentProjectOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentProject) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Version of the entity, if applicable.
func (o GetDeploymentProjectOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentProject) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetDeploymentProjectArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentProject)(nil)).Elem()
}

func (o GetDeploymentProjectArrayOutput) ToGetDeploymentProjectArrayOutput() GetDeploymentProjectArrayOutput {
	return o
}

func (o GetDeploymentProjectArrayOutput) ToGetDeploymentProjectArrayOutputWithContext(ctx context.Context) GetDeploymentProjectArrayOutput {
	return o
}

func (o GetDeploymentProjectArrayOutput) Index(i pulumi.IntInput) GetDeploymentProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentProject {
		return vs[0].([]GetDeploymentProject)[vs[1].(int)]
	}).(GetDeploymentProjectOutput)
}

type GetDeploymentResource struct {
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt *string `pulumi:"createdAt"`
	// A list of other resources this resource depends on.
	DependsOns []string `pulumi:"dependsOns"`
	// A description of the resource.
	Description *string `pulumi:"description"`
	// Expense incurred for this resource.
	Expenses []GetDeploymentResourceExpense `pulumi:"expenses"`
	// The id of the deployment. One of `id` or `name` must be provided.
	Id string `pulumi:"id"`
	// Name of the deployment. One of `id` or `name` must be provided.
	Name string `pulumi:"name"`
	// List of properties in the encoded JSON string format.
	PropertiesJson *string `pulumi:"propertiesJson"`
	// The current state of the resource. Supported values are `PARTIAL`, `TAINTED`, `OK.`
	State *string `pulumi:"state"`
	// The current sync status. Supported values are `SUCCESS`, `MISSING`, `STALE`.
	SyncStatus *string `pulumi:"syncStatus"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// GetDeploymentResourceInput is an input type that accepts GetDeploymentResourceArgs and GetDeploymentResourceOutput values.
// You can construct a concrete instance of `GetDeploymentResourceInput` via:
//
//	GetDeploymentResourceArgs{...}
type GetDeploymentResourceInput interface {
	pulumi.Input

	ToGetDeploymentResourceOutput() GetDeploymentResourceOutput
	ToGetDeploymentResourceOutputWithContext(context.Context) GetDeploymentResourceOutput
}

type GetDeploymentResourceArgs struct {
	// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// A list of other resources this resource depends on.
	DependsOns pulumi.StringArrayInput `pulumi:"dependsOns"`
	// A description of the resource.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Expense incurred for this resource.
	Expenses GetDeploymentResourceExpenseArrayInput `pulumi:"expenses"`
	// The id of the deployment. One of `id` or `name` must be provided.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the deployment. One of `id` or `name` must be provided.
	Name pulumi.StringInput `pulumi:"name"`
	// List of properties in the encoded JSON string format.
	PropertiesJson pulumi.StringPtrInput `pulumi:"propertiesJson"`
	// The current state of the resource. Supported values are `PARTIAL`, `TAINTED`, `OK.`
	State pulumi.StringPtrInput `pulumi:"state"`
	// The current sync status. Supported values are `SUCCESS`, `MISSING`, `STALE`.
	SyncStatus pulumi.StringPtrInput `pulumi:"syncStatus"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetDeploymentResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentResource)(nil)).Elem()
}

func (i GetDeploymentResourceArgs) ToGetDeploymentResourceOutput() GetDeploymentResourceOutput {
	return i.ToGetDeploymentResourceOutputWithContext(context.Background())
}

func (i GetDeploymentResourceArgs) ToGetDeploymentResourceOutputWithContext(ctx context.Context) GetDeploymentResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentResourceOutput)
}

// GetDeploymentResourceArrayInput is an input type that accepts GetDeploymentResourceArray and GetDeploymentResourceArrayOutput values.
// You can construct a concrete instance of `GetDeploymentResourceArrayInput` via:
//
//	GetDeploymentResourceArray{ GetDeploymentResourceArgs{...} }
type GetDeploymentResourceArrayInput interface {
	pulumi.Input

	ToGetDeploymentResourceArrayOutput() GetDeploymentResourceArrayOutput
	ToGetDeploymentResourceArrayOutputWithContext(context.Context) GetDeploymentResourceArrayOutput
}

type GetDeploymentResourceArray []GetDeploymentResourceInput

func (GetDeploymentResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentResource)(nil)).Elem()
}

func (i GetDeploymentResourceArray) ToGetDeploymentResourceArrayOutput() GetDeploymentResourceArrayOutput {
	return i.ToGetDeploymentResourceArrayOutputWithContext(context.Background())
}

func (i GetDeploymentResourceArray) ToGetDeploymentResourceArrayOutputWithContext(ctx context.Context) GetDeploymentResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentResourceArrayOutput)
}

type GetDeploymentResourceOutput struct{ *pulumi.OutputState }

func (GetDeploymentResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentResource)(nil)).Elem()
}

func (o GetDeploymentResourceOutput) ToGetDeploymentResourceOutput() GetDeploymentResourceOutput {
	return o
}

func (o GetDeploymentResourceOutput) ToGetDeploymentResourceOutputWithContext(ctx context.Context) GetDeploymentResourceOutput {
	return o
}

// Creation time (e.g. date format ‘2019-07-13T23:16:49.310Z’).
func (o GetDeploymentResourceOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentResource) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// A list of other resources this resource depends on.
func (o GetDeploymentResourceOutput) DependsOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDeploymentResource) []string { return v.DependsOns }).(pulumi.StringArrayOutput)
}

// A description of the resource.
func (o GetDeploymentResourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentResource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Expense incurred for this resource.
func (o GetDeploymentResourceOutput) Expenses() GetDeploymentResourceExpenseArrayOutput {
	return o.ApplyT(func(v GetDeploymentResource) []GetDeploymentResourceExpense { return v.Expenses }).(GetDeploymentResourceExpenseArrayOutput)
}

// The id of the deployment. One of `id` or `name` must be provided.
func (o GetDeploymentResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentResource) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the deployment. One of `id` or `name` must be provided.
func (o GetDeploymentResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentResource) string { return v.Name }).(pulumi.StringOutput)
}

// List of properties in the encoded JSON string format.
func (o GetDeploymentResourceOutput) PropertiesJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentResource) *string { return v.PropertiesJson }).(pulumi.StringPtrOutput)
}

// The current state of the resource. Supported values are `PARTIAL`, `TAINTED`, `OK.`
func (o GetDeploymentResourceOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentResource) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The current sync status. Supported values are `SUCCESS`, `MISSING`, `STALE`.
func (o GetDeploymentResourceOutput) SyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentResource) *string { return v.SyncStatus }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o GetDeploymentResourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentResource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetDeploymentResourceArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentResource)(nil)).Elem()
}

func (o GetDeploymentResourceArrayOutput) ToGetDeploymentResourceArrayOutput() GetDeploymentResourceArrayOutput {
	return o
}

func (o GetDeploymentResourceArrayOutput) ToGetDeploymentResourceArrayOutputWithContext(ctx context.Context) GetDeploymentResourceArrayOutput {
	return o
}

func (o GetDeploymentResourceArrayOutput) Index(i pulumi.IntInput) GetDeploymentResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentResource {
		return vs[0].([]GetDeploymentResource)[vs[1].(int)]
	}).(GetDeploymentResourceOutput)
}

type GetDeploymentResourceExpense struct {
	// Additional expense incurred for the resource.
	AdditionalExpense float64 `pulumi:"additionalExpense"`
	// Expense sync message code if any.
	Code string `pulumi:"code"`
	// Compute expense of the entity.
	ComputeExpense float64 `pulumi:"computeExpense"`
	// Last expense sync time.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// Expense sync message if any.
	Message string `pulumi:"message"`
	// Network expense of the entity.
	NetworkExpense float64 `pulumi:"networkExpense"`
	// Storage expense of the entity.
	StorageExpense float64 `pulumi:"storageExpense"`
	// Total expense of the entity.
	TotalExpense float64 `pulumi:"totalExpense"`
	// Monetary unit.
	Unit string `pulumi:"unit"`
}

// GetDeploymentResourceExpenseInput is an input type that accepts GetDeploymentResourceExpenseArgs and GetDeploymentResourceExpenseOutput values.
// You can construct a concrete instance of `GetDeploymentResourceExpenseInput` via:
//
//	GetDeploymentResourceExpenseArgs{...}
type GetDeploymentResourceExpenseInput interface {
	pulumi.Input

	ToGetDeploymentResourceExpenseOutput() GetDeploymentResourceExpenseOutput
	ToGetDeploymentResourceExpenseOutputWithContext(context.Context) GetDeploymentResourceExpenseOutput
}

type GetDeploymentResourceExpenseArgs struct {
	// Additional expense incurred for the resource.
	AdditionalExpense pulumi.Float64Input `pulumi:"additionalExpense"`
	// Expense sync message code if any.
	Code pulumi.StringInput `pulumi:"code"`
	// Compute expense of the entity.
	ComputeExpense pulumi.Float64Input `pulumi:"computeExpense"`
	// Last expense sync time.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// Expense sync message if any.
	Message pulumi.StringInput `pulumi:"message"`
	// Network expense of the entity.
	NetworkExpense pulumi.Float64Input `pulumi:"networkExpense"`
	// Storage expense of the entity.
	StorageExpense pulumi.Float64Input `pulumi:"storageExpense"`
	// Total expense of the entity.
	TotalExpense pulumi.Float64Input `pulumi:"totalExpense"`
	// Monetary unit.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetDeploymentResourceExpenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentResourceExpense)(nil)).Elem()
}

func (i GetDeploymentResourceExpenseArgs) ToGetDeploymentResourceExpenseOutput() GetDeploymentResourceExpenseOutput {
	return i.ToGetDeploymentResourceExpenseOutputWithContext(context.Background())
}

func (i GetDeploymentResourceExpenseArgs) ToGetDeploymentResourceExpenseOutputWithContext(ctx context.Context) GetDeploymentResourceExpenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentResourceExpenseOutput)
}

// GetDeploymentResourceExpenseArrayInput is an input type that accepts GetDeploymentResourceExpenseArray and GetDeploymentResourceExpenseArrayOutput values.
// You can construct a concrete instance of `GetDeploymentResourceExpenseArrayInput` via:
//
//	GetDeploymentResourceExpenseArray{ GetDeploymentResourceExpenseArgs{...} }
type GetDeploymentResourceExpenseArrayInput interface {
	pulumi.Input

	ToGetDeploymentResourceExpenseArrayOutput() GetDeploymentResourceExpenseArrayOutput
	ToGetDeploymentResourceExpenseArrayOutputWithContext(context.Context) GetDeploymentResourceExpenseArrayOutput
}

type GetDeploymentResourceExpenseArray []GetDeploymentResourceExpenseInput

func (GetDeploymentResourceExpenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentResourceExpense)(nil)).Elem()
}

func (i GetDeploymentResourceExpenseArray) ToGetDeploymentResourceExpenseArrayOutput() GetDeploymentResourceExpenseArrayOutput {
	return i.ToGetDeploymentResourceExpenseArrayOutputWithContext(context.Background())
}

func (i GetDeploymentResourceExpenseArray) ToGetDeploymentResourceExpenseArrayOutputWithContext(ctx context.Context) GetDeploymentResourceExpenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentResourceExpenseArrayOutput)
}

type GetDeploymentResourceExpenseOutput struct{ *pulumi.OutputState }

func (GetDeploymentResourceExpenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentResourceExpense)(nil)).Elem()
}

func (o GetDeploymentResourceExpenseOutput) ToGetDeploymentResourceExpenseOutput() GetDeploymentResourceExpenseOutput {
	return o
}

func (o GetDeploymentResourceExpenseOutput) ToGetDeploymentResourceExpenseOutputWithContext(ctx context.Context) GetDeploymentResourceExpenseOutput {
	return o
}

// Additional expense incurred for the resource.
func (o GetDeploymentResourceExpenseOutput) AdditionalExpense() pulumi.Float64Output {
	return o.ApplyT(func(v GetDeploymentResourceExpense) float64 { return v.AdditionalExpense }).(pulumi.Float64Output)
}

// Expense sync message code if any.
func (o GetDeploymentResourceExpenseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentResourceExpense) string { return v.Code }).(pulumi.StringOutput)
}

// Compute expense of the entity.
func (o GetDeploymentResourceExpenseOutput) ComputeExpense() pulumi.Float64Output {
	return o.ApplyT(func(v GetDeploymentResourceExpense) float64 { return v.ComputeExpense }).(pulumi.Float64Output)
}

// Last expense sync time.
func (o GetDeploymentResourceExpenseOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentResourceExpense) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// Expense sync message if any.
func (o GetDeploymentResourceExpenseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentResourceExpense) string { return v.Message }).(pulumi.StringOutput)
}

// Network expense of the entity.
func (o GetDeploymentResourceExpenseOutput) NetworkExpense() pulumi.Float64Output {
	return o.ApplyT(func(v GetDeploymentResourceExpense) float64 { return v.NetworkExpense }).(pulumi.Float64Output)
}

// Storage expense of the entity.
func (o GetDeploymentResourceExpenseOutput) StorageExpense() pulumi.Float64Output {
	return o.ApplyT(func(v GetDeploymentResourceExpense) float64 { return v.StorageExpense }).(pulumi.Float64Output)
}

// Total expense of the entity.
func (o GetDeploymentResourceExpenseOutput) TotalExpense() pulumi.Float64Output {
	return o.ApplyT(func(v GetDeploymentResourceExpense) float64 { return v.TotalExpense }).(pulumi.Float64Output)
}

// Monetary unit.
func (o GetDeploymentResourceExpenseOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentResourceExpense) string { return v.Unit }).(pulumi.StringOutput)
}

type GetDeploymentResourceExpenseArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentResourceExpenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentResourceExpense)(nil)).Elem()
}

func (o GetDeploymentResourceExpenseArrayOutput) ToGetDeploymentResourceExpenseArrayOutput() GetDeploymentResourceExpenseArrayOutput {
	return o
}

func (o GetDeploymentResourceExpenseArrayOutput) ToGetDeploymentResourceExpenseArrayOutputWithContext(ctx context.Context) GetDeploymentResourceExpenseArrayOutput {
	return o
}

func (o GetDeploymentResourceExpenseArrayOutput) Index(i pulumi.IntInput) GetDeploymentResourceExpenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentResourceExpense {
		return vs[0].([]GetDeploymentResourceExpense)[vs[1].(int)]
	}).(GetDeploymentResourceExpenseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentExpenseInput)(nil)).Elem(), DeploymentExpenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentExpenseArrayInput)(nil)).Elem(), DeploymentExpenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentLastRequestInput)(nil)).Elem(), DeploymentLastRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentLastRequestArrayInput)(nil)).Elem(), DeploymentLastRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentProjectInput)(nil)).Elem(), DeploymentProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentProjectArrayInput)(nil)).Elem(), DeploymentProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentResourceInput)(nil)).Elem(), DeploymentResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentResourceArrayInput)(nil)).Elem(), DeploymentResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentResourceExpenseInput)(nil)).Elem(), DeploymentResourceExpenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentResourceExpenseArrayInput)(nil)).Elem(), DeploymentResourceExpenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentExpenseInput)(nil)).Elem(), GetDeploymentExpenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentExpenseArrayInput)(nil)).Elem(), GetDeploymentExpenseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentLastRequestInput)(nil)).Elem(), GetDeploymentLastRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentLastRequestArrayInput)(nil)).Elem(), GetDeploymentLastRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentProjectInput)(nil)).Elem(), GetDeploymentProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentProjectArrayInput)(nil)).Elem(), GetDeploymentProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentResourceInput)(nil)).Elem(), GetDeploymentResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentResourceArrayInput)(nil)).Elem(), GetDeploymentResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentResourceExpenseInput)(nil)).Elem(), GetDeploymentResourceExpenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentResourceExpenseArrayInput)(nil)).Elem(), GetDeploymentResourceExpenseArray{})
	pulumi.RegisterOutputType(DeploymentExpenseOutput{})
	pulumi.RegisterOutputType(DeploymentExpenseArrayOutput{})
	pulumi.RegisterOutputType(DeploymentLastRequestOutput{})
	pulumi.RegisterOutputType(DeploymentLastRequestArrayOutput{})
	pulumi.RegisterOutputType(DeploymentProjectOutput{})
	pulumi.RegisterOutputType(DeploymentProjectArrayOutput{})
	pulumi.RegisterOutputType(DeploymentResourceOutput{})
	pulumi.RegisterOutputType(DeploymentResourceArrayOutput{})
	pulumi.RegisterOutputType(DeploymentResourceExpenseOutput{})
	pulumi.RegisterOutputType(DeploymentResourceExpenseArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentExpenseOutput{})
	pulumi.RegisterOutputType(GetDeploymentExpenseArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentLastRequestOutput{})
	pulumi.RegisterOutputType(GetDeploymentLastRequestArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentProjectOutput{})
	pulumi.RegisterOutputType(GetDeploymentProjectArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentResourceOutput{})
	pulumi.RegisterOutputType(GetDeploymentResourceArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentResourceExpenseOutput{})
	pulumi.RegisterOutputType(GetDeploymentResourceExpenseArrayOutput{})
}
