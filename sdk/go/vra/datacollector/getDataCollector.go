// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datacollector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### S
//
// This is an example of how to lookup a data collector.
//
// **Data collector data source by its name:**
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra/datacollector"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/datacollector"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datacollector.GetDataCollector(ctx, &datacollector.GetDataCollectorArgs{
//				Name: _var.Data_collector_name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// The data collector data source supports the following arguments:
func GetDataCollector(ctx *pulumi.Context, args *GetDataCollectorArgs, opts ...pulumi.InvokeOption) (*GetDataCollectorResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDataCollectorResult
	err := ctx.Invoke("vra:datacollector/getDataCollector:getDataCollector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataCollector.
type GetDataCollectorArgs struct {
	// Data collector name. Example: Datacollector1
	Name string `pulumi:"name"`
}

// A collection of values returned by getDataCollector.
type GetDataCollectorResult struct {
	// Data collector host name. Example: dc1-lnd.mycompany.com
	Hostname string `pulumi:"hostname"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// IPv4 Address of the data collector VM. Example: 10.0.0.1
	IpAddress string `pulumi:"ipAddress"`
	Name      string `pulumi:"name"`
	// Current status of the data collector. Example: ACTIVE, INACTIVE
	Status string `pulumi:"status"`
}

func GetDataCollectorOutput(ctx *pulumi.Context, args GetDataCollectorOutputArgs, opts ...pulumi.InvokeOption) GetDataCollectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDataCollectorResult, error) {
			args := v.(GetDataCollectorArgs)
			r, err := GetDataCollector(ctx, &args, opts...)
			var s GetDataCollectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDataCollectorResultOutput)
}

// A collection of arguments for invoking getDataCollector.
type GetDataCollectorOutputArgs struct {
	// Data collector name. Example: Datacollector1
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDataCollectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataCollectorArgs)(nil)).Elem()
}

// A collection of values returned by getDataCollector.
type GetDataCollectorResultOutput struct{ *pulumi.OutputState }

func (GetDataCollectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataCollectorResult)(nil)).Elem()
}

func (o GetDataCollectorResultOutput) ToGetDataCollectorResultOutput() GetDataCollectorResultOutput {
	return o
}

func (o GetDataCollectorResultOutput) ToGetDataCollectorResultOutputWithContext(ctx context.Context) GetDataCollectorResultOutput {
	return o
}

// Data collector host name. Example: dc1-lnd.mycompany.com
func (o GetDataCollectorResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataCollectorResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDataCollectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataCollectorResult) string { return v.Id }).(pulumi.StringOutput)
}

// IPv4 Address of the data collector VM. Example: 10.0.0.1
func (o GetDataCollectorResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataCollectorResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetDataCollectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataCollectorResult) string { return v.Name }).(pulumi.StringOutput)
}

// Current status of the data collector. Example: ACTIVE, INACTIVE
func (o GetDataCollectorResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataCollectorResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDataCollectorResultOutput{})
}
