// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vra

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a VMware vRealize Automation load balancer resource.
//
// ## Example Usage
// ### S
//
// The following example shows how to create a load balancer resource.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/schmidtw/pulumi-vra/sdk/go/vra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vra.NewLoadBalancer(ctx, "this", &vra.LoadBalancerArgs{
//				ProjectId:   pulumi.Any(vra_project.My - project.Id),
//				Description: pulumi.String("My Load Balancer"),
//				CustomProperties: pulumi.AnyMap{
//					"edgeClusterRouterStateLink":  pulumi.Any("/resources/routers/<uuid>"),
//					"tier0LogicalRouterStateLink": pulumi.Any("/resources/routers/<uuid>"),
//				},
//				Targets: LoadBalancerTargetArray{
//					&LoadBalancerTargetArgs{
//						MachineId: pulumi.Any(vra_machine.My_machine.Id),
//					},
//				},
//				Nics: LoadBalancerNicArray{
//					&LoadBalancerNicArgs{
//						NetworkId: pulumi.Any(data.Vra_network.My - network.Id),
//					},
//				},
//				Routes: LoadBalancerRouteArray{
//					&LoadBalancerRouteArgs{
//						Protocol:       pulumi.String("TCP"),
//						Port:           pulumi.String("80"),
//						MemberProtocol: pulumi.String("TCP"),
//						MemberPort:     pulumi.String("80"),
//						HealthCheckConfigurations: LoadBalancerRouteHealthCheckConfigurationArray{
//							&LoadBalancerRouteHealthCheckConfigurationArgs{
//								Protocol:           pulumi.String("TCP"),
//								Port:               pulumi.String("80"),
//								IntervalSeconds:    pulumi.Int(30),
//								TimeoutSeconds:     pulumi.Int(10),
//								UnhealthyThreshold: pulumi.Int(2),
//								HealthyThreshold:   pulumi.Int(10),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// A block device resource supports the following arguments:
type LoadBalancer struct {
	pulumi.CustomResourceState

	// Primary address allocated or in use by this load balancer. The address could be an in the form of a publicly resolvable DNS name or an IP address.
	Address pulumi.StringOutput `pulumi:"address"`
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Additional custom properties that may be used to extend the machine.
	CustomProperties pulumi.MapOutput `pulumi:"customProperties"`
	// The id of the deployment that is associated with this resource.
	DeploymentId pulumi.StringOutput `pulumi:"deploymentId"`
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// External entity Id on the provider side.
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// The external regionId of the resource.
	ExternalRegionId pulumi.StringOutput `pulumi:"externalRegionId"`
	// The external regionId of the resource.
	ExternalZoneId pulumi.StringOutput `pulumi:"externalZoneId"`
	// An Internet-facing load balancer has a publicly resolvable DNS name, so it can route requests from clients over the Internet to the instances that are registered with the load balancer.
	InternetFacing pulumi.BoolPtrOutput `pulumi:"internetFacing"`
	// HATEOAS of the entity.
	Links LoadBalancerLinkArrayOutput `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringOutput `pulumi:"name"`
	// A set of network interface specifications for this load balancer.
	Nics LoadBalancerNicArrayOutput `pulumi:"nics"`
	// The id of the organization this entity belongs to.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Email of the user that owns the entity.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// The id of the project the current user belongs to.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The load balancer route configuration regarding ports and protocols.
	Routes LoadBalancerRouteArrayOutput `pulumi:"routes"`
	// A set of tag keys and optional values that were set on this resource instance.
	// example:[ { "key" : "vmware.enumeration.type", "value": "nebsBlock" } ]
	Tags LoadBalancerTagArrayOutput `pulumi:"tags"`
	// A list of links to target load balancer pool members. Links can be to either a machine or a machine's network interface.
	Targets LoadBalancerTargetArrayOutput `pulumi:"targets"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancer(ctx *pulumi.Context,
	name string, args *LoadBalancerArgs, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Nics == nil {
		return nil, errors.New("invalid value for required argument 'Nics'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.Routes == nil {
		return nil, errors.New("invalid value for required argument 'Routes'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource LoadBalancer
	err := ctx.RegisterResource("vra:index/loadBalancer:LoadBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancer gets an existing LoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerState, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	var resource LoadBalancer
	err := ctx.ReadResource("vra:index/loadBalancer:LoadBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancer resources.
type loadBalancerState struct {
	// Primary address allocated or in use by this load balancer. The address could be an in the form of a publicly resolvable DNS name or an IP address.
	Address *string `pulumi:"address"`
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// Additional custom properties that may be used to extend the machine.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// The id of the deployment that is associated with this resource.
	DeploymentId *string `pulumi:"deploymentId"`
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description *string `pulumi:"description"`
	// External entity Id on the provider side.
	ExternalId *string `pulumi:"externalId"`
	// The external regionId of the resource.
	ExternalRegionId *string `pulumi:"externalRegionId"`
	// The external regionId of the resource.
	ExternalZoneId *string `pulumi:"externalZoneId"`
	// An Internet-facing load balancer has a publicly resolvable DNS name, so it can route requests from clients over the Internet to the instances that are registered with the load balancer.
	InternetFacing *bool `pulumi:"internetFacing"`
	// HATEOAS of the entity.
	Links []LoadBalancerLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// A set of network interface specifications for this load balancer.
	Nics []LoadBalancerNic `pulumi:"nics"`
	// The id of the organization this entity belongs to.
	OrganizationId *string `pulumi:"organizationId"`
	// Email of the user that owns the entity.
	Owner *string `pulumi:"owner"`
	// The id of the project the current user belongs to.
	ProjectId *string `pulumi:"projectId"`
	// The load balancer route configuration regarding ports and protocols.
	Routes []LoadBalancerRoute `pulumi:"routes"`
	// A set of tag keys and optional values that were set on this resource instance.
	// example:[ { "key" : "vmware.enumeration.type", "value": "nebsBlock" } ]
	Tags []LoadBalancerTag `pulumi:"tags"`
	// A list of links to target load balancer pool members. Links can be to either a machine or a machine's network interface.
	Targets []LoadBalancerTarget `pulumi:"targets"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type LoadBalancerState struct {
	// Primary address allocated or in use by this load balancer. The address could be an in the form of a publicly resolvable DNS name or an IP address.
	Address pulumi.StringPtrInput
	// Date when the entity was created. The date is in ISO 6801 and UTC.
	CreatedAt pulumi.StringPtrInput
	// Additional custom properties that may be used to extend the machine.
	CustomProperties pulumi.MapInput
	// The id of the deployment that is associated with this resource.
	DeploymentId pulumi.StringPtrInput
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description pulumi.StringPtrInput
	// External entity Id on the provider side.
	ExternalId pulumi.StringPtrInput
	// The external regionId of the resource.
	ExternalRegionId pulumi.StringPtrInput
	// The external regionId of the resource.
	ExternalZoneId pulumi.StringPtrInput
	// An Internet-facing load balancer has a publicly resolvable DNS name, so it can route requests from clients over the Internet to the instances that are registered with the load balancer.
	InternetFacing pulumi.BoolPtrInput
	// HATEOAS of the entity.
	Links LoadBalancerLinkArrayInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// A set of network interface specifications for this load balancer.
	Nics LoadBalancerNicArrayInput
	// The id of the organization this entity belongs to.
	OrganizationId pulumi.StringPtrInput
	// Email of the user that owns the entity.
	Owner pulumi.StringPtrInput
	// The id of the project the current user belongs to.
	ProjectId pulumi.StringPtrInput
	// The load balancer route configuration regarding ports and protocols.
	Routes LoadBalancerRouteArrayInput
	// A set of tag keys and optional values that were set on this resource instance.
	// example:[ { "key" : "vmware.enumeration.type", "value": "nebsBlock" } ]
	Tags LoadBalancerTagArrayInput
	// A list of links to target load balancer pool members. Links can be to either a machine or a machine's network interface.
	Targets LoadBalancerTargetArrayInput
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
}

func (LoadBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerState)(nil)).Elem()
}

type loadBalancerArgs struct {
	// Additional custom properties that may be used to extend the machine.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// The id of the deployment that is associated with this resource.
	DeploymentId *string `pulumi:"deploymentId"`
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description *string `pulumi:"description"`
	// An Internet-facing load balancer has a publicly resolvable DNS name, so it can route requests from clients over the Internet to the instances that are registered with the load balancer.
	InternetFacing *bool `pulumi:"internetFacing"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// A set of network interface specifications for this load balancer.
	Nics []LoadBalancerNic `pulumi:"nics"`
	// The id of the project the current user belongs to.
	ProjectId string `pulumi:"projectId"`
	// The load balancer route configuration regarding ports and protocols.
	Routes []LoadBalancerRoute `pulumi:"routes"`
	// A set of tag keys and optional values that were set on this resource instance.
	// example:[ { "key" : "vmware.enumeration.type", "value": "nebsBlock" } ]
	Tags []LoadBalancerTag `pulumi:"tags"`
	// A list of links to target load balancer pool members. Links can be to either a machine or a machine's network interface.
	Targets []LoadBalancerTarget `pulumi:"targets"`
}

// The set of arguments for constructing a LoadBalancer resource.
type LoadBalancerArgs struct {
	// Additional custom properties that may be used to extend the machine.
	CustomProperties pulumi.MapInput
	// The id of the deployment that is associated with this resource.
	DeploymentId pulumi.StringPtrInput
	// Describes machine within the scope of your organization and is not propagated to the cloud.
	Description pulumi.StringPtrInput
	// An Internet-facing load balancer has a publicly resolvable DNS name, so it can route requests from clients over the Internet to the instances that are registered with the load balancer.
	InternetFacing pulumi.BoolPtrInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// A set of network interface specifications for this load balancer.
	Nics LoadBalancerNicArrayInput
	// The id of the project the current user belongs to.
	ProjectId pulumi.StringInput
	// The load balancer route configuration regarding ports and protocols.
	Routes LoadBalancerRouteArrayInput
	// A set of tag keys and optional values that were set on this resource instance.
	// example:[ { "key" : "vmware.enumeration.type", "value": "nebsBlock" } ]
	Tags LoadBalancerTagArrayInput
	// A list of links to target load balancer pool members. Links can be to either a machine or a machine's network interface.
	Targets LoadBalancerTargetArrayInput
}

func (LoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerArgs)(nil)).Elem()
}

type LoadBalancerInput interface {
	pulumi.Input

	ToLoadBalancerOutput() LoadBalancerOutput
	ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput
}

func (*LoadBalancer) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancer)(nil)).Elem()
}

func (i *LoadBalancer) ToLoadBalancerOutput() LoadBalancerOutput {
	return i.ToLoadBalancerOutputWithContext(context.Background())
}

func (i *LoadBalancer) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerOutput)
}

// LoadBalancerArrayInput is an input type that accepts LoadBalancerArray and LoadBalancerArrayOutput values.
// You can construct a concrete instance of `LoadBalancerArrayInput` via:
//
//	LoadBalancerArray{ LoadBalancerArgs{...} }
type LoadBalancerArrayInput interface {
	pulumi.Input

	ToLoadBalancerArrayOutput() LoadBalancerArrayOutput
	ToLoadBalancerArrayOutputWithContext(context.Context) LoadBalancerArrayOutput
}

type LoadBalancerArray []LoadBalancerInput

func (LoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancer)(nil)).Elem()
}

func (i LoadBalancerArray) ToLoadBalancerArrayOutput() LoadBalancerArrayOutput {
	return i.ToLoadBalancerArrayOutputWithContext(context.Background())
}

func (i LoadBalancerArray) ToLoadBalancerArrayOutputWithContext(ctx context.Context) LoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerArrayOutput)
}

// LoadBalancerMapInput is an input type that accepts LoadBalancerMap and LoadBalancerMapOutput values.
// You can construct a concrete instance of `LoadBalancerMapInput` via:
//
//	LoadBalancerMap{ "key": LoadBalancerArgs{...} }
type LoadBalancerMapInput interface {
	pulumi.Input

	ToLoadBalancerMapOutput() LoadBalancerMapOutput
	ToLoadBalancerMapOutputWithContext(context.Context) LoadBalancerMapOutput
}

type LoadBalancerMap map[string]LoadBalancerInput

func (LoadBalancerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancer)(nil)).Elem()
}

func (i LoadBalancerMap) ToLoadBalancerMapOutput() LoadBalancerMapOutput {
	return i.ToLoadBalancerMapOutputWithContext(context.Background())
}

func (i LoadBalancerMap) ToLoadBalancerMapOutputWithContext(ctx context.Context) LoadBalancerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerMapOutput)
}

type LoadBalancerOutput struct{ *pulumi.OutputState }

func (LoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerOutput) ToLoadBalancerOutput() LoadBalancerOutput {
	return o
}

func (o LoadBalancerOutput) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return o
}

// Primary address allocated or in use by this load balancer. The address could be an in the form of a publicly resolvable DNS name or an IP address.
func (o LoadBalancerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// Date when the entity was created. The date is in ISO 6801 and UTC.
func (o LoadBalancerOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Additional custom properties that may be used to extend the machine.
func (o LoadBalancerOutput) CustomProperties() pulumi.MapOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.MapOutput { return v.CustomProperties }).(pulumi.MapOutput)
}

// The id of the deployment that is associated with this resource.
func (o LoadBalancerOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.DeploymentId }).(pulumi.StringOutput)
}

// Describes machine within the scope of your organization and is not propagated to the cloud.
func (o LoadBalancerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// External entity Id on the provider side.
func (o LoadBalancerOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// The external regionId of the resource.
func (o LoadBalancerOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.ExternalRegionId }).(pulumi.StringOutput)
}

// The external regionId of the resource.
func (o LoadBalancerOutput) ExternalZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.ExternalZoneId }).(pulumi.StringOutput)
}

// An Internet-facing load balancer has a publicly resolvable DNS name, so it can route requests from clients over the Internet to the instances that are registered with the load balancer.
func (o LoadBalancerOutput) InternetFacing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.BoolPtrOutput { return v.InternetFacing }).(pulumi.BoolPtrOutput)
}

// HATEOAS of the entity.
func (o LoadBalancerOutput) Links() LoadBalancerLinkArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerLinkArrayOutput { return v.Links }).(LoadBalancerLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o LoadBalancerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A set of network interface specifications for this load balancer.
func (o LoadBalancerOutput) Nics() LoadBalancerNicArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerNicArrayOutput { return v.Nics }).(LoadBalancerNicArrayOutput)
}

// The id of the organization this entity belongs to.
func (o LoadBalancerOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o LoadBalancerOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// The id of the project the current user belongs to.
func (o LoadBalancerOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The load balancer route configuration regarding ports and protocols.
func (o LoadBalancerOutput) Routes() LoadBalancerRouteArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerRouteArrayOutput { return v.Routes }).(LoadBalancerRouteArrayOutput)
}

// A set of tag keys and optional values that were set on this resource instance.
// example:[ { "key" : "vmware.enumeration.type", "value": "nebsBlock" } ]
func (o LoadBalancerOutput) Tags() LoadBalancerTagArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerTagArrayOutput { return v.Tags }).(LoadBalancerTagArrayOutput)
}

// A list of links to target load balancer pool members. Links can be to either a machine or a machine's network interface.
func (o LoadBalancerOutput) Targets() LoadBalancerTargetArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerTargetArrayOutput { return v.Targets }).(LoadBalancerTargetArrayOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o LoadBalancerOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type LoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerArrayOutput) ToLoadBalancerArrayOutput() LoadBalancerArrayOutput {
	return o
}

func (o LoadBalancerArrayOutput) ToLoadBalancerArrayOutputWithContext(ctx context.Context) LoadBalancerArrayOutput {
	return o
}

func (o LoadBalancerArrayOutput) Index(i pulumi.IntInput) LoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoadBalancer {
		return vs[0].([]*LoadBalancer)[vs[1].(int)]
	}).(LoadBalancerOutput)
}

type LoadBalancerMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerMapOutput) ToLoadBalancerMapOutput() LoadBalancerMapOutput {
	return o
}

func (o LoadBalancerMapOutput) ToLoadBalancerMapOutputWithContext(ctx context.Context) LoadBalancerMapOutput {
	return o
}

func (o LoadBalancerMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoadBalancer {
		return vs[0].(map[string]*LoadBalancer)[vs[1].(string)]
	}).(LoadBalancerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerInput)(nil)).Elem(), &LoadBalancer{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerArrayInput)(nil)).Elem(), LoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerMapInput)(nil)).Elem(), LoadBalancerMap{})
	pulumi.RegisterOutputType(LoadBalancerOutput{})
	pulumi.RegisterOutputType(LoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerMapOutput{})
}
