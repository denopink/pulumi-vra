// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### S
// This is an example of how to create a network profile resource.
//
// **Network profile:**
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vra/sdk/go/vra/network"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/network"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := network.NewProfile(ctx, "simple", &network.ProfileArgs{
// 			Description: pulumi.String("Simple Network Profile with no isolation."),
// 			RegionId:    pulumi.Any(data.Vra_region.This.Id),
// 			FabricNetworkIds: pulumi.StringArray{
// 				pulumi.Any(data.Vra_fabric_network.Subnet_1.Id),
// 				pulumi.Any(data.Vra_fabric_network.Subnet_2.Id),
// 			},
// 			IsolationType: pulumi.String("NONE"),
// 			Tags: network.ProfileTagArray{
// 				&network.ProfileTagArgs{
// 					Key:   pulumi.String("foo"),
// 					Value: pulumi.String("bar"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// A network profile resource supports the following arguments:
type Profile struct {
	pulumi.CustomResourceState

	// The ID of the cloud account this entity belongs to.
	CloudAccountId pulumi.StringOutput `pulumi:"cloudAccountId"`
	// Date when  entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
	CustomProperties pulumi.MapOutput `pulumi:"customProperties"`
	// A human-friendly description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The external regionId of the resource.
	ExternalRegionId pulumi.StringOutput `pulumi:"externalRegionId"`
	// A list of fabric network Ids which are assigned to the network profile.
	// example:[ "6543" ]
	FabricNetworkIds pulumi.StringArrayOutput `pulumi:"fabricNetworkIds"`
	// The id of the fabric network used for outbound access.
	IsolatedExternalFabricNetworkId pulumi.StringPtrOutput `pulumi:"isolatedExternalFabricNetworkId"`
	// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
	IsolatedNetworkCidrPrefix pulumi.IntPtrOutput `pulumi:"isolatedNetworkCidrPrefix"`
	// CIDR of the isolation network domain.
	IsolatedNetworkDomainCidr pulumi.StringPtrOutput `pulumi:"isolatedNetworkDomainCidr"`
	// The id of the network domain used for creating isolated networks.
	IsolatedNetworkDomainId pulumi.StringPtrOutput `pulumi:"isolatedNetworkDomainId"`
	// Specifies the isolation type e.g. none, subnet or security group
	IsolationType pulumi.StringPtrOutput `pulumi:"isolationType"`
	// HATEOAS of the entity
	Links ProfileLinkArrayOutput `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// The id of the organization this entity belongs to. Deprecated, refer to orgId instead.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Email of the user that owns the entity.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// A list of security group Ids which are assigned to the network profile.
	// example:[ "6545" ]
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags ProfileTagArrayOutput `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewProfile registers a new resource with the given unique name, arguments, and options.
func NewProfile(ctx *pulumi.Context,
	name string, args *ProfileArgs, opts ...pulumi.ResourceOption) (*Profile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RegionId == nil {
		return nil, errors.New("invalid value for required argument 'RegionId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Profile
	err := ctx.RegisterResource("vra:network/profile:Profile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfile gets an existing Profile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileState, opts ...pulumi.ResourceOption) (*Profile, error) {
	var resource Profile
	err := ctx.ReadResource("vra:network/profile:Profile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Profile resources.
type profileState struct {
	// The ID of the cloud account this entity belongs to.
	CloudAccountId *string `pulumi:"cloudAccountId"`
	// Date when  entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// The external regionId of the resource.
	ExternalRegionId *string `pulumi:"externalRegionId"`
	// A list of fabric network Ids which are assigned to the network profile.
	// example:[ "6543" ]
	FabricNetworkIds []string `pulumi:"fabricNetworkIds"`
	// The id of the fabric network used for outbound access.
	IsolatedExternalFabricNetworkId *string `pulumi:"isolatedExternalFabricNetworkId"`
	// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
	IsolatedNetworkCidrPrefix *int `pulumi:"isolatedNetworkCidrPrefix"`
	// CIDR of the isolation network domain.
	IsolatedNetworkDomainCidr *string `pulumi:"isolatedNetworkDomainCidr"`
	// The id of the network domain used for creating isolated networks.
	IsolatedNetworkDomainId *string `pulumi:"isolatedNetworkDomainId"`
	// Specifies the isolation type e.g. none, subnet or security group
	IsolationType *string `pulumi:"isolationType"`
	// HATEOAS of the entity
	Links []ProfileLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// ID of organization that entity belongs to.
	OrgId *string `pulumi:"orgId"`
	// The id of the organization this entity belongs to. Deprecated, refer to orgId instead.
	OrganizationId *string `pulumi:"organizationId"`
	// Email of the user that owns the entity.
	Owner *string `pulumi:"owner"`
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId *string `pulumi:"regionId"`
	// A list of security group Ids which are assigned to the network profile.
	// example:[ "6545" ]
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []ProfileTag `pulumi:"tags"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type ProfileState struct {
	// The ID of the cloud account this entity belongs to.
	CloudAccountId pulumi.StringPtrInput
	// Date when  entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt pulumi.StringPtrInput
	// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
	CustomProperties pulumi.MapInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// The external regionId of the resource.
	ExternalRegionId pulumi.StringPtrInput
	// A list of fabric network Ids which are assigned to the network profile.
	// example:[ "6543" ]
	FabricNetworkIds pulumi.StringArrayInput
	// The id of the fabric network used for outbound access.
	IsolatedExternalFabricNetworkId pulumi.StringPtrInput
	// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
	IsolatedNetworkCidrPrefix pulumi.IntPtrInput
	// CIDR of the isolation network domain.
	IsolatedNetworkDomainCidr pulumi.StringPtrInput
	// The id of the network domain used for creating isolated networks.
	IsolatedNetworkDomainId pulumi.StringPtrInput
	// Specifies the isolation type e.g. none, subnet or security group
	IsolationType pulumi.StringPtrInput
	// HATEOAS of the entity
	Links ProfileLinkArrayInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// ID of organization that entity belongs to.
	OrgId pulumi.StringPtrInput
	// The id of the organization this entity belongs to. Deprecated, refer to orgId instead.
	OrganizationId pulumi.StringPtrInput
	// Email of the user that owns the entity.
	Owner pulumi.StringPtrInput
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId pulumi.StringPtrInput
	// A list of security group Ids which are assigned to the network profile.
	// example:[ "6545" ]
	SecurityGroupIds pulumi.StringArrayInput
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags ProfileTagArrayInput
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt pulumi.StringPtrInput
}

func (ProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileState)(nil)).Elem()
}

type profileArgs struct {
	// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// A list of fabric network Ids which are assigned to the network profile.
	// example:[ "6543" ]
	FabricNetworkIds []string `pulumi:"fabricNetworkIds"`
	// The id of the fabric network used for outbound access.
	IsolatedExternalFabricNetworkId *string `pulumi:"isolatedExternalFabricNetworkId"`
	// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
	IsolatedNetworkCidrPrefix *int `pulumi:"isolatedNetworkCidrPrefix"`
	// CIDR of the isolation network domain.
	IsolatedNetworkDomainCidr *string `pulumi:"isolatedNetworkDomainCidr"`
	// The id of the network domain used for creating isolated networks.
	IsolatedNetworkDomainId *string `pulumi:"isolatedNetworkDomainId"`
	// Specifies the isolation type e.g. none, subnet or security group
	IsolationType *string `pulumi:"isolationType"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId string `pulumi:"regionId"`
	// A list of security group Ids which are assigned to the network profile.
	// example:[ "6545" ]
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []ProfileTag `pulumi:"tags"`
}

// The set of arguments for constructing a Profile resource.
type ProfileArgs struct {
	// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
	CustomProperties pulumi.MapInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// A list of fabric network Ids which are assigned to the network profile.
	// example:[ "6543" ]
	FabricNetworkIds pulumi.StringArrayInput
	// The id of the fabric network used for outbound access.
	IsolatedExternalFabricNetworkId pulumi.StringPtrInput
	// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
	IsolatedNetworkCidrPrefix pulumi.IntPtrInput
	// CIDR of the isolation network domain.
	IsolatedNetworkDomainCidr pulumi.StringPtrInput
	// The id of the network domain used for creating isolated networks.
	IsolatedNetworkDomainId pulumi.StringPtrInput
	// Specifies the isolation type e.g. none, subnet or security group
	IsolationType pulumi.StringPtrInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// The id of the region for which this profile is defined as in vRealize Automation(vRA).
	RegionId pulumi.StringInput
	// A list of security group Ids which are assigned to the network profile.
	// example:[ "6545" ]
	SecurityGroupIds pulumi.StringArrayInput
	// A set of tag keys and optional values that were set on this Network Profile.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags ProfileTagArrayInput
}

func (ProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileArgs)(nil)).Elem()
}

type ProfileInput interface {
	pulumi.Input

	ToProfileOutput() ProfileOutput
	ToProfileOutputWithContext(ctx context.Context) ProfileOutput
}

func (*Profile) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (i *Profile) ToProfileOutput() ProfileOutput {
	return i.ToProfileOutputWithContext(context.Background())
}

func (i *Profile) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutput)
}

// ProfileArrayInput is an input type that accepts ProfileArray and ProfileArrayOutput values.
// You can construct a concrete instance of `ProfileArrayInput` via:
//
//          ProfileArray{ ProfileArgs{...} }
type ProfileArrayInput interface {
	pulumi.Input

	ToProfileArrayOutput() ProfileArrayOutput
	ToProfileArrayOutputWithContext(context.Context) ProfileArrayOutput
}

type ProfileArray []ProfileInput

func (ProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (i ProfileArray) ToProfileArrayOutput() ProfileArrayOutput {
	return i.ToProfileArrayOutputWithContext(context.Background())
}

func (i ProfileArray) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileArrayOutput)
}

// ProfileMapInput is an input type that accepts ProfileMap and ProfileMapOutput values.
// You can construct a concrete instance of `ProfileMapInput` via:
//
//          ProfileMap{ "key": ProfileArgs{...} }
type ProfileMapInput interface {
	pulumi.Input

	ToProfileMapOutput() ProfileMapOutput
	ToProfileMapOutputWithContext(context.Context) ProfileMapOutput
}

type ProfileMap map[string]ProfileInput

func (ProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (i ProfileMap) ToProfileMapOutput() ProfileMapOutput {
	return i.ToProfileMapOutputWithContext(context.Background())
}

func (i ProfileMap) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMapOutput)
}

type ProfileOutput struct{ *pulumi.OutputState }

func (ProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (o ProfileOutput) ToProfileOutput() ProfileOutput {
	return o
}

func (o ProfileOutput) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return o
}

// The ID of the cloud account this entity belongs to.
func (o ProfileOutput) CloudAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.CloudAccountId }).(pulumi.StringOutput)
}

// Date when  entity was created. Date and time format is ISO 8601 and UTC.
func (o ProfileOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
func (o ProfileOutput) CustomProperties() pulumi.MapOutput {
	return o.ApplyT(func(v *Profile) pulumi.MapOutput { return v.CustomProperties }).(pulumi.MapOutput)
}

// A human-friendly description.
func (o ProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The external regionId of the resource.
func (o ProfileOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ExternalRegionId }).(pulumi.StringOutput)
}

// A list of fabric network Ids which are assigned to the network profile.
// example:[ "6543" ]
func (o ProfileOutput) FabricNetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringArrayOutput { return v.FabricNetworkIds }).(pulumi.StringArrayOutput)
}

// The id of the fabric network used for outbound access.
func (o ProfileOutput) IsolatedExternalFabricNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.IsolatedExternalFabricNetworkId }).(pulumi.StringPtrOutput)
}

// The CIDR prefix length to be used for the isolated networks that are created with the network profile.
func (o ProfileOutput) IsolatedNetworkCidrPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntPtrOutput { return v.IsolatedNetworkCidrPrefix }).(pulumi.IntPtrOutput)
}

// CIDR of the isolation network domain.
func (o ProfileOutput) IsolatedNetworkDomainCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.IsolatedNetworkDomainCidr }).(pulumi.StringPtrOutput)
}

// The id of the network domain used for creating isolated networks.
func (o ProfileOutput) IsolatedNetworkDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.IsolatedNetworkDomainId }).(pulumi.StringPtrOutput)
}

// Specifies the isolation type e.g. none, subnet or security group
func (o ProfileOutput) IsolationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.IsolationType }).(pulumi.StringPtrOutput)
}

// HATEOAS of the entity
func (o ProfileOutput) Links() ProfileLinkArrayOutput {
	return o.ApplyT(func(v *Profile) ProfileLinkArrayOutput { return v.Links }).(ProfileLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o ProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID of organization that entity belongs to.
func (o ProfileOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to. Deprecated, refer to orgId instead.
func (o ProfileOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o ProfileOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// The id of the region for which this profile is defined as in vRealize Automation(vRA).
func (o ProfileOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// A list of security group Ids which are assigned to the network profile.
// example:[ "6545" ]
func (o ProfileOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A set of tag keys and optional values that were set on this Network Profile.
// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
func (o ProfileOutput) Tags() ProfileTagArrayOutput {
	return o.ApplyT(func(v *Profile) ProfileTagArrayOutput { return v.Tags }).(ProfileTagArrayOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o ProfileOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type ProfileArrayOutput struct{ *pulumi.OutputState }

func (ProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (o ProfileArrayOutput) ToProfileArrayOutput() ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) Index(i pulumi.IntInput) ProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].([]*Profile)[vs[1].(int)]
	}).(ProfileOutput)
}

type ProfileMapOutput struct{ *pulumi.OutputState }

func (ProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (o ProfileMapOutput) ToProfileMapOutput() ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) MapIndex(k pulumi.StringInput) ProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].(map[string]*Profile)[vs[1].(string)]
	}).(ProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileInput)(nil)).Elem(), &Profile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileArrayInput)(nil)).Elem(), ProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMapInput)(nil)).Elem(), ProfileMap{})
	pulumi.RegisterOutputType(ProfileOutput{})
	pulumi.RegisterOutputType(ProfileArrayOutput{})
	pulumi.RegisterOutputType(ProfileMapOutput{})
}
