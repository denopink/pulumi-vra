// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### S
//
// This is an example of how to create a network resource.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vra/sdk/go/vra/network"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/network"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := network.NewNetwork(ctx, "myNetwork", &network.NetworkArgs{
// 			Constraints: network.NetworkConstraintArray{
// 				&network.NetworkConstraintArgs{
// 					Expression: pulumi.String("pci"),
// 					Mandatory:  pulumi.Bool(true),
// 				},
// 			},
// 			OutboundAccess: pulumi.Bool(false),
// 			Tags: network.NetworkTagArray{
// 				&network.NetworkTagArgs{
// 					Key:   pulumi.String("foo"),
// 					Value: pulumi.String("bar"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// A network resource supports the following resource:
type Network struct {
	pulumi.CustomResourceState

	// IPv4 address range of the network in CIDR format.
	Cidr pulumi.StringOutput `pulumi:"cidr"`
	// List of storage, network and extensibility constraints to be applied when provisioning through this project.
	Constraints NetworkConstraintArrayOutput `pulumi:"constraints"`
	// Additional properties that may be used to extend the base resource.
	CustomProperties pulumi.MapOutput `pulumi:"customProperties"`
	// Deployment id that is associated with this resource.
	DeploymentId pulumi.StringOutput `pulumi:"deploymentId"`
	// A human-friendly description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// External entity Id on the provider side.
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// The external zoneId of the resource.
	ExternalZoneId pulumi.StringOutput `pulumi:"externalZoneId"`
	// HATEOAS of the entity
	Links NetworkLinkArrayOutput `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringOutput `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Flag to indicate if the network needs to have outbound access or not. Default is true. This field will be ignored if there is proper input for networkType customProperty.
	OutboundAccess pulumi.BoolPtrOutput `pulumi:"outboundAccess"`
	// Email of the user that owns the entity.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// The id of the project this resource belongs to.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Self link of this request.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags      NetworkTagArrayOutput `pulumi:"tags"`
	UpdatedAt pulumi.StringOutput   `pulumi:"updatedAt"`
}

// NewNetwork registers a new resource with the given unique name, arguments, and options.
func NewNetwork(ctx *pulumi.Context,
	name string, args *NetworkArgs, opts ...pulumi.ResourceOption) (*Network, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Network
	err := ctx.RegisterResource("vra:network/network:Network", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetwork gets an existing Network resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkState, opts ...pulumi.ResourceOption) (*Network, error) {
	var resource Network
	err := ctx.ReadResource("vra:network/network:Network", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Network resources.
type networkState struct {
	// IPv4 address range of the network in CIDR format.
	Cidr *string `pulumi:"cidr"`
	// List of storage, network and extensibility constraints to be applied when provisioning through this project.
	Constraints []NetworkConstraint `pulumi:"constraints"`
	// Additional properties that may be used to extend the base resource.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// Deployment id that is associated with this resource.
	DeploymentId *string `pulumi:"deploymentId"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// External entity Id on the provider side.
	ExternalId *string `pulumi:"externalId"`
	// The external zoneId of the resource.
	ExternalZoneId *string `pulumi:"externalZoneId"`
	// HATEOAS of the entity
	Links []NetworkLink `pulumi:"links"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrganizationId *string `pulumi:"organizationId"`
	// Flag to indicate if the network needs to have outbound access or not. Default is true. This field will be ignored if there is proper input for networkType customProperty.
	OutboundAccess *bool `pulumi:"outboundAccess"`
	// Email of the user that owns the entity.
	Owner *string `pulumi:"owner"`
	// The id of the project this resource belongs to.
	ProjectId *string `pulumi:"projectId"`
	// Self link of this request.
	SelfLink *string `pulumi:"selfLink"`
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags      []NetworkTag `pulumi:"tags"`
	UpdatedAt *string      `pulumi:"updatedAt"`
}

type NetworkState struct {
	// IPv4 address range of the network in CIDR format.
	Cidr pulumi.StringPtrInput
	// List of storage, network and extensibility constraints to be applied when provisioning through this project.
	Constraints NetworkConstraintArrayInput
	// Additional properties that may be used to extend the base resource.
	CustomProperties pulumi.MapInput
	// Deployment id that is associated with this resource.
	DeploymentId pulumi.StringPtrInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// External entity Id on the provider side.
	ExternalId pulumi.StringPtrInput
	// The external zoneId of the resource.
	ExternalZoneId pulumi.StringPtrInput
	// HATEOAS of the entity
	Links NetworkLinkArrayInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// The id of the organization this entity belongs to.
	OrganizationId pulumi.StringPtrInput
	// Flag to indicate if the network needs to have outbound access or not. Default is true. This field will be ignored if there is proper input for networkType customProperty.
	OutboundAccess pulumi.BoolPtrInput
	// Email of the user that owns the entity.
	Owner pulumi.StringPtrInput
	// The id of the project this resource belongs to.
	ProjectId pulumi.StringPtrInput
	// Self link of this request.
	SelfLink pulumi.StringPtrInput
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags      NetworkTagArrayInput
	UpdatedAt pulumi.StringPtrInput
}

func (NetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkState)(nil)).Elem()
}

type networkArgs struct {
	// List of storage, network and extensibility constraints to be applied when provisioning through this project.
	Constraints []NetworkConstraint `pulumi:"constraints"`
	// Additional properties that may be used to extend the base resource.
	CustomProperties map[string]interface{} `pulumi:"customProperties"`
	// Deployment id that is associated with this resource.
	DeploymentId *string `pulumi:"deploymentId"`
	// A human-friendly description.
	Description *string `pulumi:"description"`
	// A human-friendly name used as an identifier in APIs that support this option.
	Name *string `pulumi:"name"`
	// Flag to indicate if the network needs to have outbound access or not. Default is true. This field will be ignored if there is proper input for networkType customProperty.
	OutboundAccess *bool `pulumi:"outboundAccess"`
	// The id of the project this resource belongs to.
	ProjectId string `pulumi:"projectId"`
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags []NetworkTag `pulumi:"tags"`
}

// The set of arguments for constructing a Network resource.
type NetworkArgs struct {
	// List of storage, network and extensibility constraints to be applied when provisioning through this project.
	Constraints NetworkConstraintArrayInput
	// Additional properties that may be used to extend the base resource.
	CustomProperties pulumi.MapInput
	// Deployment id that is associated with this resource.
	DeploymentId pulumi.StringPtrInput
	// A human-friendly description.
	Description pulumi.StringPtrInput
	// A human-friendly name used as an identifier in APIs that support this option.
	Name pulumi.StringPtrInput
	// Flag to indicate if the network needs to have outbound access or not. Default is true. This field will be ignored if there is proper input for networkType customProperty.
	OutboundAccess pulumi.BoolPtrInput
	// The id of the project this resource belongs to.
	ProjectId pulumi.StringInput
	// A set of tag keys and optional values that were set on this resource.
	// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
	Tags NetworkTagArrayInput
}

func (NetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkArgs)(nil)).Elem()
}

type NetworkInput interface {
	pulumi.Input

	ToNetworkOutput() NetworkOutput
	ToNetworkOutputWithContext(ctx context.Context) NetworkOutput
}

func (*Network) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (i *Network) ToNetworkOutput() NetworkOutput {
	return i.ToNetworkOutputWithContext(context.Background())
}

func (i *Network) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOutput)
}

// NetworkArrayInput is an input type that accepts NetworkArray and NetworkArrayOutput values.
// You can construct a concrete instance of `NetworkArrayInput` via:
//
//          NetworkArray{ NetworkArgs{...} }
type NetworkArrayInput interface {
	pulumi.Input

	ToNetworkArrayOutput() NetworkArrayOutput
	ToNetworkArrayOutputWithContext(context.Context) NetworkArrayOutput
}

type NetworkArray []NetworkInput

func (NetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Network)(nil)).Elem()
}

func (i NetworkArray) ToNetworkArrayOutput() NetworkArrayOutput {
	return i.ToNetworkArrayOutputWithContext(context.Background())
}

func (i NetworkArray) ToNetworkArrayOutputWithContext(ctx context.Context) NetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkArrayOutput)
}

// NetworkMapInput is an input type that accepts NetworkMap and NetworkMapOutput values.
// You can construct a concrete instance of `NetworkMapInput` via:
//
//          NetworkMap{ "key": NetworkArgs{...} }
type NetworkMapInput interface {
	pulumi.Input

	ToNetworkMapOutput() NetworkMapOutput
	ToNetworkMapOutputWithContext(context.Context) NetworkMapOutput
}

type NetworkMap map[string]NetworkInput

func (NetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Network)(nil)).Elem()
}

func (i NetworkMap) ToNetworkMapOutput() NetworkMapOutput {
	return i.ToNetworkMapOutputWithContext(context.Background())
}

func (i NetworkMap) ToNetworkMapOutputWithContext(ctx context.Context) NetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkMapOutput)
}

type NetworkOutput struct{ *pulumi.OutputState }

func (NetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (o NetworkOutput) ToNetworkOutput() NetworkOutput {
	return o
}

func (o NetworkOutput) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return o
}

// IPv4 address range of the network in CIDR format.
func (o NetworkOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Cidr }).(pulumi.StringOutput)
}

// List of storage, network and extensibility constraints to be applied when provisioning through this project.
func (o NetworkOutput) Constraints() NetworkConstraintArrayOutput {
	return o.ApplyT(func(v *Network) NetworkConstraintArrayOutput { return v.Constraints }).(NetworkConstraintArrayOutput)
}

// Additional properties that may be used to extend the base resource.
func (o NetworkOutput) CustomProperties() pulumi.MapOutput {
	return o.ApplyT(func(v *Network) pulumi.MapOutput { return v.CustomProperties }).(pulumi.MapOutput)
}

// Deployment id that is associated with this resource.
func (o NetworkOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.DeploymentId }).(pulumi.StringOutput)
}

// A human-friendly description.
func (o NetworkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// External entity Id on the provider side.
func (o NetworkOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// The external zoneId of the resource.
func (o NetworkOutput) ExternalZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.ExternalZoneId }).(pulumi.StringOutput)
}

// HATEOAS of the entity
func (o NetworkOutput) Links() NetworkLinkArrayOutput {
	return o.ApplyT(func(v *Network) NetworkLinkArrayOutput { return v.Links }).(NetworkLinkArrayOutput)
}

// A human-friendly name used as an identifier in APIs that support this option.
func (o NetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o NetworkOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Flag to indicate if the network needs to have outbound access or not. Default is true. This field will be ignored if there is proper input for networkType customProperty.
func (o NetworkOutput) OutboundAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Network) pulumi.BoolPtrOutput { return v.OutboundAccess }).(pulumi.BoolPtrOutput)
}

// Email of the user that owns the entity.
func (o NetworkOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// The id of the project this resource belongs to.
func (o NetworkOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// Self link of this request.
func (o NetworkOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// A set of tag keys and optional values that were set on this resource.
// example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
func (o NetworkOutput) Tags() NetworkTagArrayOutput {
	return o.ApplyT(func(v *Network) NetworkTagArrayOutput { return v.Tags }).(NetworkTagArrayOutput)
}

func (o NetworkOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type NetworkArrayOutput struct{ *pulumi.OutputState }

func (NetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Network)(nil)).Elem()
}

func (o NetworkArrayOutput) ToNetworkArrayOutput() NetworkArrayOutput {
	return o
}

func (o NetworkArrayOutput) ToNetworkArrayOutputWithContext(ctx context.Context) NetworkArrayOutput {
	return o
}

func (o NetworkArrayOutput) Index(i pulumi.IntInput) NetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Network {
		return vs[0].([]*Network)[vs[1].(int)]
	}).(NetworkOutput)
}

type NetworkMapOutput struct{ *pulumi.OutputState }

func (NetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Network)(nil)).Elem()
}

func (o NetworkMapOutput) ToNetworkMapOutput() NetworkMapOutput {
	return o
}

func (o NetworkMapOutput) ToNetworkMapOutputWithContext(ctx context.Context) NetworkMapOutput {
	return o
}

func (o NetworkMapOutput) MapIndex(k pulumi.StringInput) NetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Network {
		return vs[0].(map[string]*Network)[vs[1].(string)]
	}).(NetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInput)(nil)).Elem(), &Network{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkArrayInput)(nil)).Elem(), NetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkMapInput)(nil)).Elem(), NetworkMap{})
	pulumi.RegisterOutputType(NetworkOutput{})
	pulumi.RegisterOutputType(NetworkArrayOutput{})
	pulumi.RegisterOutputType(NetworkMapOutput{})
}
