// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package region

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This is an example of how to lookup a region data source:
//
// **Region data source by id:**
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra/region"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/region"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := region.GetRegion(ctx, &region.GetRegionArgs{
//				Id: pulumi.StringRef(_var.Vra_region_id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// **Region data source by filter:**
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra/region"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/region"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := region.GetRegion(ctx, &region.GetRegionArgs{
//				Filter: pulumi.StringRef(fmt.Sprintf("name eq '%v'", _var.Vra_region_name)),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// **Region data source by cloud account id and region:**
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vra/sdk/go/vra/region"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vra/sdk/go/vra/region"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := region.GetRegion(ctx, &region.GetRegionArgs{
//				CloudAccountId: pulumi.StringRef(_var.Vra_cloud_account_id),
//				Region:         pulumi.StringRef(_var.Vra_region_external_id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRegion(ctx *pulumi.Context, args *GetRegionArgs, opts ...pulumi.InvokeOption) (*GetRegionResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetRegionResult
	err := ctx.Invoke("vra:region/getRegion:getRegion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegion.
type GetRegionArgs struct {
	// The id of the cloud account the region belongs to.
	CloudAccountId *string `pulumi:"cloudAccountId"`
	// Search criteria to narrow down Regions.
	Filter *string `pulumi:"filter"`
	// The id of the region instance.
	Id *string `pulumi:"id"`
	// The specific region associated with the cloud account. On vSphere, this is the external ID.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getRegion.
type GetRegionResult struct {
	CloudAccountId string `pulumi:"cloudAccountId"`
	// Date when the entity was created. The date is in ISO 8601 and UTC.
	CreatedAt string `pulumi:"createdAt"`
	// Unique identifier of region on the provider side.
	ExternalRegionId string  `pulumi:"externalRegionId"`
	Filter           *string `pulumi:"filter"`
	Id               string  `pulumi:"id"`
	// Name of region on the provider side. In vSphere, the name of the region is different from its id.
	Name string `pulumi:"name"`
	// The id of the organization this entity belongs to.
	OrgId string `pulumi:"orgId"`
	// Email of the user that owns the entity.
	Owner  string  `pulumi:"owner"`
	Region *string `pulumi:"region"`
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt string `pulumi:"updatedAt"`
}

func GetRegionOutput(ctx *pulumi.Context, args GetRegionOutputArgs, opts ...pulumi.InvokeOption) GetRegionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRegionResult, error) {
			args := v.(GetRegionArgs)
			r, err := GetRegion(ctx, &args, opts...)
			var s GetRegionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRegionResultOutput)
}

// A collection of arguments for invoking getRegion.
type GetRegionOutputArgs struct {
	// The id of the cloud account the region belongs to.
	CloudAccountId pulumi.StringPtrInput `pulumi:"cloudAccountId"`
	// Search criteria to narrow down Regions.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The id of the region instance.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The specific region associated with the cloud account. On vSphere, this is the external ID.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetRegionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionArgs)(nil)).Elem()
}

// A collection of values returned by getRegion.
type GetRegionResultOutput struct{ *pulumi.OutputState }

func (GetRegionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionResult)(nil)).Elem()
}

func (o GetRegionResultOutput) ToGetRegionResultOutput() GetRegionResultOutput {
	return o
}

func (o GetRegionResultOutput) ToGetRegionResultOutputWithContext(ctx context.Context) GetRegionResultOutput {
	return o
}

func (o GetRegionResultOutput) CloudAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.CloudAccountId }).(pulumi.StringOutput)
}

// Date when the entity was created. The date is in ISO 8601 and UTC.
func (o GetRegionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Unique identifier of region on the provider side.
func (o GetRegionResultOutput) ExternalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.ExternalRegionId }).(pulumi.StringOutput)
}

func (o GetRegionResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o GetRegionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of region on the provider side. In vSphere, the name of the region is different from its id.
func (o GetRegionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization this entity belongs to.
func (o GetRegionResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// Email of the user that owns the entity.
func (o GetRegionResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetRegionResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Date when the entity was last updated. The date is ISO 8601 and UTC.
func (o GetRegionResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionResultOutput{})
}
