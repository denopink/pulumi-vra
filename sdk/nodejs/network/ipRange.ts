// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Creates a VMware vRealize Automation networkIpRange resource.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * To import the vRA Network IP range, use the ID as in the following example
 *
 * ```sh
 *  $ pulumi import vra:network/ipRange:IpRange new_ip_range 05956583-6488-4e7d-84c9-92a7b7219a15`
 * ```
 */
export class IpRange extends pulumi.CustomResource {
    /**
     * Get an existing IpRange resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpRangeState, opts?: pulumi.CustomResourceOptions): IpRange {
        return new IpRange(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vra:network/ipRange:IpRange';

    /**
     * Returns true if the given object is an instance of IpRange.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpRange {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpRange.__pulumiType;
    }

    /**
     * Date when the entity was created. The date is in ISO 6801 and UTC.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * State object representing a network on a external cloud provider.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * End IP address of the range.
     */
    public readonly endIpAddress!: pulumi.Output<string>;
    /**
     * External entity Id on the provider side.
     */
    public /*out*/ readonly externalId!: pulumi.Output<string>;
    /**
     * Fabric network Id.
     */
    public readonly fabricNetworkId!: pulumi.Output<string | undefined>;
    /**
     * IP address version: IPv4 or IPv6. Default: IPv4.
     */
    public readonly ipVersion!: pulumi.Output<string>;
    /**
     * HATEOAS of the entity
     */
    public /*out*/ readonly links!: pulumi.Output<outputs.network.IpRangeLink[]>;
    /**
     * A human-friendly name used as an identifier in APIs that support this option.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * ID of organization that entity belongs to.
     */
    public /*out*/ readonly orgId!: pulumi.Output<string>;
    /**
     * Start IP address of the range.
     */
    public readonly startIpAddress!: pulumi.Output<string>;
    /**
     * Set of tag keys and values to apply to the resource.
     * Example:[ { "key" : "vmware", "value": "provider" } ]
     */
    public readonly tags!: pulumi.Output<outputs.network.IpRangeTag[]>;
    /**
     * Date when the entity was last updated. The date is ISO 8601 and UTC.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a IpRange resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpRangeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpRangeArgs | IpRangeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpRangeState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["endIpAddress"] = state ? state.endIpAddress : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["fabricNetworkId"] = state ? state.fabricNetworkId : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["startIpAddress"] = state ? state.startIpAddress : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as IpRangeArgs | undefined;
            if ((!args || args.endIpAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endIpAddress'");
            }
            if ((!args || args.ipVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipVersion'");
            }
            if ((!args || args.startIpAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startIpAddress'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["endIpAddress"] = args ? args.endIpAddress : undefined;
            resourceInputs["fabricNetworkId"] = args ? args.fabricNetworkId : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["startIpAddress"] = args ? args.startIpAddress : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["externalId"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["orgId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpRange.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpRange resources.
 */
export interface IpRangeState {
    /**
     * Date when the entity was created. The date is in ISO 6801 and UTC.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * State object representing a network on a external cloud provider.
     */
    description?: pulumi.Input<string>;
    /**
     * End IP address of the range.
     */
    endIpAddress?: pulumi.Input<string>;
    /**
     * External entity Id on the provider side.
     */
    externalId?: pulumi.Input<string>;
    /**
     * Fabric network Id.
     */
    fabricNetworkId?: pulumi.Input<string>;
    /**
     * IP address version: IPv4 or IPv6. Default: IPv4.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * HATEOAS of the entity
     */
    links?: pulumi.Input<pulumi.Input<inputs.network.IpRangeLink>[]>;
    /**
     * A human-friendly name used as an identifier in APIs that support this option.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of organization that entity belongs to.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Start IP address of the range.
     */
    startIpAddress?: pulumi.Input<string>;
    /**
     * Set of tag keys and values to apply to the resource.
     * Example:[ { "key" : "vmware", "value": "provider" } ]
     */
    tags?: pulumi.Input<pulumi.Input<inputs.network.IpRangeTag>[]>;
    /**
     * Date when the entity was last updated. The date is ISO 8601 and UTC.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpRange resource.
 */
export interface IpRangeArgs {
    /**
     * State object representing a network on a external cloud provider.
     */
    description?: pulumi.Input<string>;
    /**
     * End IP address of the range.
     */
    endIpAddress: pulumi.Input<string>;
    /**
     * Fabric network Id.
     */
    fabricNetworkId?: pulumi.Input<string>;
    /**
     * IP address version: IPv4 or IPv6. Default: IPv4.
     */
    ipVersion: pulumi.Input<string>;
    /**
     * A human-friendly name used as an identifier in APIs that support this option.
     */
    name?: pulumi.Input<string>;
    /**
     * Start IP address of the range.
     */
    startIpAddress: pulumi.Input<string>;
    /**
     * Set of tag keys and values to apply to the resource.
     * Example:[ { "key" : "vmware", "value": "provider" } ]
     */
    tags?: pulumi.Input<pulumi.Input<inputs.network.IpRangeTag>[]>;
}
