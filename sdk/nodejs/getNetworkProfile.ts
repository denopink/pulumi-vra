// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 * ### S
 * This is an example of how to create a network profile resource.
 *
 * **Network profile data source by its id:**
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vra from "@pulumi/vra";
 *
 * const thisNetworkProfile = vra_network_profile_this.name.apply(name => vra.getNetworkProfile({
 *     filter: `name eq '${name}'`,
 * }));
 * ```
 *
 * **Vra network profile data source filter by region id:**
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vra from "@pulumi/vra";
 *
 * const thisNetworkProfile = vra_region_this.id.apply(id => vra.getNetworkProfile({
 *     filter: `regionId eq '${id}'`,
 * }));
 * ```
 *
 * A network profile data source supports the following arguments:
 */
export function getNetworkProfile(args?: GetNetworkProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkProfileResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vra:index/getNetworkProfile:getNetworkProfile", {
        "filter": args.filter,
        "id": args.id,
        "isolatedExternalFabricNetworkId": args.isolatedExternalFabricNetworkId,
        "isolatedNetworkDomainId": args.isolatedNetworkDomainId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkProfile.
 */
export interface GetNetworkProfileArgs {
    /**
     * Filter query string that is supported by vRA multi-cloud IaaS API. Example: regionId eq '<regionId>' and cloudAccountId eq '<cloudAccountId>'.
     */
    filter?: string;
    /**
     * The id of the image profile instance.
     */
    id?: string;
    /**
     * The Id of the fabric network used for outbound access.
     */
    isolatedExternalFabricNetworkId?: string;
    /**
     * The Id of the network domain used for creating isolated networks.
     */
    isolatedNetworkDomainId?: string;
    /**
     * A set of tag keys and optional values that were set on this Network Profile.
     * example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
     */
    tags?: inputs.GetNetworkProfileTag[];
}

/**
 * A collection of values returned by getNetworkProfile.
 */
export interface GetNetworkProfileResult {
    /**
     * Additional properties that may be used to extend the Network Profile object that is produced from this specification. For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router. onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.
     */
    readonly customProperties: {[key: string]: any};
    /**
     * A human-friendly description.
     */
    readonly description: string;
    /**
     * The external regionId of the resource.
     */
    readonly externalRegionId: string;
    /**
     * A list of fabric network Ids which are assigned to the network profile.
     * example:[ "6543" ]
     */
    readonly fabricNetworkIds: string[];
    readonly filter?: string;
    readonly id: string;
    readonly isolatedExternalFabricNetworkId?: string;
    /**
     * The CIDR prefix length to be used for the isolated networks that are created with the network profile.
     */
    readonly isolatedNetworkCidrPrefix: number;
    /**
     * CIDR of the isolation network domain.
     */
    readonly isolatedNetworkDomainCidr: string;
    readonly isolatedNetworkDomainId?: string;
    /**
     * Specifies the isolation type e.g. none, subnet or security group
     */
    readonly isolationType: string;
    /**
     * HATEOAS of the entity
     */
    readonly links: outputs.GetNetworkProfileLink[];
    /**
     * A human-friendly name used as an identifier in APIs that support this option.
     */
    readonly name: string;
    /**
     * The id of the organization this entity belongs to.
     */
    readonly organizationId: string;
    /**
     * Email of the user that owns the entity.
     */
    readonly owner: string;
    /**
     * The id of the region for which this profile is defined as in vRealize Automation(vRA).
     */
    readonly regionId: string;
    /**
     * A list of security group Ids which are assigned to the network profile.
     * example:[ "6545" ]
     */
    readonly securityGroupIds: string[];
    /**
     * A set of tag keys and optional values that were set on this Network Profile.
     * example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
     */
    readonly tags: outputs.GetNetworkProfileTag[];
    /**
     * Date when the entity was last updated. The date is ISO 8601 and UTC.
     */
    readonly updatedAt: string;
}

export function getNetworkProfileOutput(args?: GetNetworkProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkProfileResult> {
    return pulumi.output(args).apply(a => getNetworkProfile(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkProfile.
 */
export interface GetNetworkProfileOutputArgs {
    /**
     * Filter query string that is supported by vRA multi-cloud IaaS API. Example: regionId eq '<regionId>' and cloudAccountId eq '<cloudAccountId>'.
     */
    filter?: pulumi.Input<string>;
    /**
     * The id of the image profile instance.
     */
    id?: pulumi.Input<string>;
    /**
     * The Id of the fabric network used for outbound access.
     */
    isolatedExternalFabricNetworkId?: pulumi.Input<string>;
    /**
     * The Id of the network domain used for creating isolated networks.
     */
    isolatedNetworkDomainId?: pulumi.Input<string>;
    /**
     * A set of tag keys and optional values that were set on this Network Profile.
     * example:[ { "key" : "ownedBy", "value": "Rainpole" } ]
     */
    tags?: pulumi.Input<pulumi.Input<inputs.GetNetworkProfileTagArgs>[]>;
}
