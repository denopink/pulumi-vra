// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides information about a catalog item in vRA.
 *
 * ## Example Usage
 * ### S
 *
 * This is an example of how to get a vRA catalog item by its name.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vra from "@pulumi/vra";
 *
 * const this = vra.catalog.getItem({
 *     name: _var.catalog_item_name,
 *     expandVersions: true,
 * });
 * ```
 *
 * This is an example of how to get a vRA catalog item by its id.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vra from "@pulumi/vra";
 *
 * const this = vra.catalog.getItem({
 *     id: _var.catalog_item_id,
 *     expandVersions: true,
 * });
 * ```
 */
export function getItem(args?: GetItemArgs, opts?: pulumi.InvokeOptions): Promise<GetItemResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vra:catalog/getItem:getItem", {
        "expandProjects": args.expandProjects,
        "expandVersions": args.expandVersions,
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getItem.
 */
export interface GetItemArgs {
    /**
     * Flag to indicate whether to expand detailed project data for the catalog item.
     */
    expandProjects?: boolean;
    /**
     * Flag to indicate whether to expand detailed versions of the catalog item.
     */
    expandVersions?: boolean;
    /**
     * The id of catalog item. One of `id`, or `name` must be provided.
     */
    id?: string;
    /**
     * Name of the catalog item. One of `id`, or `name` must be provided.
     */
    name?: string;
}

/**
 * A collection of values returned by getItem.
 */
export interface GetItemResult {
    /**
     * Date-time when catalog item version was created at.
     */
    readonly createdAt: string;
    /**
     * The user the entity was created by.
     */
    readonly createdBy: string;
    /**
     * A human-friendly description.
     */
    readonly description: string;
    readonly expandProjects?: boolean;
    readonly expandVersions?: boolean;
    /**
     * Id of the catalog item version.
     */
    readonly id: string;
    /**
     * Date-time when the entity was last updated.
     */
    readonly lastUpdatedAt: string;
    /**
     * The user the entity was last updated by.
     */
    readonly lastUpdatedBy: string;
    /**
     * Name of the entity.
     */
    readonly name: string;
    /**
     * List of associated project IDs that can be used for requesting this catalog item.
     */
    readonly projectIds: string[];
    /**
     * List of associated projects that can be used for requesting this catalog item.
     */
    readonly projects: outputs.catalog.GetItemProject[];
    /**
     * Json schema describing request parameters, a simplified version of http://json-schema.org/latest/json-schema-validation.html#rfc.section.5
     */
    readonly schema: string;
    /**
     * LibraryItem source ID.
     */
    readonly sourceId: string;
    /**
     * LibraryItem source name.
     */
    readonly sourceName: string;
    readonly types: outputs.catalog.GetItemType[];
    /**
     * Catalog item versions.
     */
    readonly versions: outputs.catalog.GetItemVersion[];
}

export function getItemOutput(args?: GetItemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetItemResult> {
    return pulumi.output(args).apply(a => getItem(a, opts))
}

/**
 * A collection of arguments for invoking getItem.
 */
export interface GetItemOutputArgs {
    /**
     * Flag to indicate whether to expand detailed project data for the catalog item.
     */
    expandProjects?: pulumi.Input<boolean>;
    /**
     * Flag to indicate whether to expand detailed versions of the catalog item.
     */
    expandVersions?: pulumi.Input<boolean>;
    /**
     * The id of catalog item. One of `id`, or `name` must be provided.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the catalog item. One of `id`, or `name` must be provided.
     */
    name?: pulumi.Input<string>;
}
