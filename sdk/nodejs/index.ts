// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./provider";

// Export sub-modules:
import * as blockdevice from "./blockdevice";
import * as blueprint from "./blueprint";
import * as catalog from "./catalog";
import * as cloudaccount from "./cloudaccount";
import * as config from "./config";
import * as contentsource from "./contentsource";
import * as datacollector from "./datacollector";
import * as deployment from "./deployment";
import * as fabric from "./fabric";
import * as flavor from "./flavor";
import * as image from "./image";
import * as loadbalancer from "./loadbalancer";
import * as machine from "./machine";
import * as network from "./network";
import * as project from "./project";
import * as region from "./region";
import * as securitygroup from "./securitygroup";
import * as storageprofile from "./storageprofile";
import * as types from "./types";
import * as zone from "./zone";

export {
    blockdevice,
    blueprint,
    catalog,
    cloudaccount,
    config,
    contentsource,
    datacollector,
    deployment,
    fabric,
    flavor,
    image,
    loadbalancer,
    machine,
    network,
    project,
    region,
    securitygroup,
    storageprofile,
    types,
    zone,
};

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("vra", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:vra") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
