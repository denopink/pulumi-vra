// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * This data source provides information about a cloud template (blueprint) in vRA.
 *
 * ## Example Usage
 * ### S
 *
 * This is an example of how to get a vRA cloud template by its name.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vra from "@pulumi/vra";
 *
 * const this = vra.getBlueprint({
 *     name: vra_blueprint["this"].name,
 * });
 * ```
 *
 * This is an example of how to get a vRA cloud template by its id.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vra from "@pulumi/vra";
 *
 * const this = vra.getBlueprint({
 *     id: vra_blueprint["this"].id,
 * });
 * ```
 */
export function getBlueprint(args?: GetBlueprintArgs, opts?: pulumi.InvokeOptions): Promise<GetBlueprintResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vra:index/getBlueprint:getBlueprint", {
        "id": args.id,
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBlueprint.
 */
export interface GetBlueprintArgs {
    /**
     * The id of this cloud template. One of `id` or `name` must be provided.
     */
    id?: string;
    /**
     * Name of the cloud template. One of `id` or `name` must be provided.
     */
    name?: string;
    /**
     * The id of the project to narrow the search while looking for cloud templates.
     */
    projectId?: string;
}

/**
 * A collection of values returned by getBlueprint.
 */
export interface GetBlueprintResult {
    /**
     * Blueprint YAML content.
     */
    readonly content: string;
    /**
     * The id of the content source.
     */
    readonly contentSourceId: string;
    /**
     * Content source path.
     */
    readonly contentSourcePath: string;
    /**
     * Content source last sync at.
     */
    readonly contentSourceSyncAt: string;
    /**
     * Content source last sync messages.
     */
    readonly contentSourceSyncMessages: string[];
    /**
     * Content source last sync status. Supported values: `SUCCESSFUL`, `FAILED`.
     */
    readonly contentSourceSyncStatus: string;
    /**
     * Content source type.
     */
    readonly contentSourceType: string;
    /**
     * Date when the entity was created. The date is in ISO 6801 and UTC.
     */
    readonly createdAt: string;
    /**
     * The user the entity was created by.
     */
    readonly createdBy: string;
    /**
     * A human-friendly description.
     */
    readonly description: string;
    readonly id: string;
    readonly name?: string;
    /**
     * The id of the organization this entity belongs to.
     */
    readonly orgId: string;
    readonly projectId: string;
    /**
     * The name of the project the entity belongs to.
     */
    readonly projectName: string;
    /**
     * Flag to indicate whether this blueprint can be requested from any project in the organization this entity belongs to.
     */
    readonly requestScopeOrg: boolean;
    /**
     * HATEOAS of the entity.
     */
    readonly selfLink: string;
    /**
     * Status of the cloud template. Supported values: `DRAFT`, `VERSIONED`, `RELEASED`.
     */
    readonly status: string;
    /**
     * Total number of released versions.
     */
    readonly totalReleasedVersions: number;
    /**
     * Total number of versions.
     */
    readonly totalVersions: number;
    /**
     * Date when the entity was last updated. The date is ISO 8601 and UTC.
     */
    readonly updatedAt: string;
    /**
     * The user the entity was last updated by.
     */
    readonly updatedBy: string;
    /**
     * Flag to indicate if the current content of the cloud template is valid.
     */
    readonly valid: boolean;
    /**
     * List of validations messages.
     * * message - Validation message.
     */
    readonly validationMessages: outputs.GetBlueprintValidationMessage[];
}

export function getBlueprintOutput(args?: GetBlueprintOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlueprintResult> {
    return pulumi.output(args).apply(a => getBlueprint(a, opts))
}

/**
 * A collection of arguments for invoking getBlueprint.
 */
export interface GetBlueprintOutputArgs {
    /**
     * The id of this cloud template. One of `id` or `name` must be provided.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the cloud template. One of `id` or `name` must be provided.
     */
    name?: pulumi.Input<string>;
    /**
     * The id of the project to narrow the search while looking for cloud templates.
     */
    projectId?: pulumi.Input<string>;
}
