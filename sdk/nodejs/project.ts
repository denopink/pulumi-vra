// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 */
export class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectState, opts?: pulumi.CustomResourceOptions): Project {
        return new Project(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vra:index/project:Project';

    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Project {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Project.__pulumiType;
    }

    /**
     * Administrator users or groups associated with the project. Only administrators can manage project's configuration.
     */
    public readonly administratorRoles!: pulumi.Output<outputs.ProjectAdministratorRole[] | undefined>;
    /**
     * A list of administrator users associated with the project. Only administrators can manage project's configuration.
     *
     * @deprecated To specify the type of principal, please refer administrator_roles.
     */
    public readonly administrators!: pulumi.Output<string[] | undefined>;
    /**
     * A list of storage, network, and extensibility constraints to be applied when provisioning through this project.
     */
    public readonly constraints!: pulumi.Output<outputs.ProjectConstraints | undefined>;
    /**
     * The project custom properties which are added to all requests in this project.
     */
    public readonly customProperties!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * A human-friendly description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The naming template to be used for resources provisioned in this project.
     */
    public readonly machineNamingTemplate!: pulumi.Output<string | undefined>;
    /**
     * Member users or groups associated with the project.
     */
    public readonly memberRoles!: pulumi.Output<outputs.ProjectMemberRole[] | undefined>;
    /**
     * A list of member users associated with the project.
     *
     * @deprecated To specify the type of principal, please refer member_roles.
     */
    public readonly members!: pulumi.Output<string[] | undefined>;
    /**
     * A human-friendly name used as an identifier in APIs that support this option.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The timeout that should be used for cloud template operations and provisioning tasks. The timeout is measured in seconds.
     */
    public readonly operationTimeout!: pulumi.Output<number | undefined>;
    /**
     * The placement policy that will be applied when selecting a cloud zone for provisioning. Must be one of `DEFAULT` or `SPREAD`.
     */
    public readonly placementPolicy!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the resources in this projects are shared or not. If not set default will be used.
     */
    public readonly sharedResources!: pulumi.Output<boolean | undefined>;
    /**
     * Viewer users or groups associated with the project.
     */
    public readonly viewerRoles!: pulumi.Output<outputs.ProjectViewerRole[] | undefined>;
    /**
     * A list of viewer users associated with the project.
     *
     * @deprecated To specify the type of principal, please refer viewer_roles.
     */
    public readonly viewers!: pulumi.Output<string[] | undefined>;
    /**
     * A list of configurations for zone assignment to a project.
     */
    public readonly zoneAssignments!: pulumi.Output<outputs.ProjectZoneAssignment[] | undefined>;

    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectArgs | ProjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectState | undefined;
            resourceInputs["administratorRoles"] = state ? state.administratorRoles : undefined;
            resourceInputs["administrators"] = state ? state.administrators : undefined;
            resourceInputs["constraints"] = state ? state.constraints : undefined;
            resourceInputs["customProperties"] = state ? state.customProperties : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["machineNamingTemplate"] = state ? state.machineNamingTemplate : undefined;
            resourceInputs["memberRoles"] = state ? state.memberRoles : undefined;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["operationTimeout"] = state ? state.operationTimeout : undefined;
            resourceInputs["placementPolicy"] = state ? state.placementPolicy : undefined;
            resourceInputs["sharedResources"] = state ? state.sharedResources : undefined;
            resourceInputs["viewerRoles"] = state ? state.viewerRoles : undefined;
            resourceInputs["viewers"] = state ? state.viewers : undefined;
            resourceInputs["zoneAssignments"] = state ? state.zoneAssignments : undefined;
        } else {
            const args = argsOrState as ProjectArgs | undefined;
            resourceInputs["administratorRoles"] = args ? args.administratorRoles : undefined;
            resourceInputs["administrators"] = args ? args.administrators : undefined;
            resourceInputs["constraints"] = args ? args.constraints : undefined;
            resourceInputs["customProperties"] = args ? args.customProperties : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["machineNamingTemplate"] = args ? args.machineNamingTemplate : undefined;
            resourceInputs["memberRoles"] = args ? args.memberRoles : undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["operationTimeout"] = args ? args.operationTimeout : undefined;
            resourceInputs["placementPolicy"] = args ? args.placementPolicy : undefined;
            resourceInputs["sharedResources"] = args ? args.sharedResources : undefined;
            resourceInputs["viewerRoles"] = args ? args.viewerRoles : undefined;
            resourceInputs["viewers"] = args ? args.viewers : undefined;
            resourceInputs["zoneAssignments"] = args ? args.zoneAssignments : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Project.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Project resources.
 */
export interface ProjectState {
    /**
     * Administrator users or groups associated with the project. Only administrators can manage project's configuration.
     */
    administratorRoles?: pulumi.Input<pulumi.Input<inputs.ProjectAdministratorRole>[]>;
    /**
     * A list of administrator users associated with the project. Only administrators can manage project's configuration.
     *
     * @deprecated To specify the type of principal, please refer administrator_roles.
     */
    administrators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of storage, network, and extensibility constraints to be applied when provisioning through this project.
     */
    constraints?: pulumi.Input<inputs.ProjectConstraints>;
    /**
     * The project custom properties which are added to all requests in this project.
     */
    customProperties?: pulumi.Input<{[key: string]: any}>;
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * The naming template to be used for resources provisioned in this project.
     */
    machineNamingTemplate?: pulumi.Input<string>;
    /**
     * Member users or groups associated with the project.
     */
    memberRoles?: pulumi.Input<pulumi.Input<inputs.ProjectMemberRole>[]>;
    /**
     * A list of member users associated with the project.
     *
     * @deprecated To specify the type of principal, please refer member_roles.
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A human-friendly name used as an identifier in APIs that support this option.
     */
    name?: pulumi.Input<string>;
    /**
     * The timeout that should be used for cloud template operations and provisioning tasks. The timeout is measured in seconds.
     */
    operationTimeout?: pulumi.Input<number>;
    /**
     * The placement policy that will be applied when selecting a cloud zone for provisioning. Must be one of `DEFAULT` or `SPREAD`.
     */
    placementPolicy?: pulumi.Input<string>;
    /**
     * Specifies whether the resources in this projects are shared or not. If not set default will be used.
     */
    sharedResources?: pulumi.Input<boolean>;
    /**
     * Viewer users or groups associated with the project.
     */
    viewerRoles?: pulumi.Input<pulumi.Input<inputs.ProjectViewerRole>[]>;
    /**
     * A list of viewer users associated with the project.
     *
     * @deprecated To specify the type of principal, please refer viewer_roles.
     */
    viewers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of configurations for zone assignment to a project.
     */
    zoneAssignments?: pulumi.Input<pulumi.Input<inputs.ProjectZoneAssignment>[]>;
}

/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * Administrator users or groups associated with the project. Only administrators can manage project's configuration.
     */
    administratorRoles?: pulumi.Input<pulumi.Input<inputs.ProjectAdministratorRole>[]>;
    /**
     * A list of administrator users associated with the project. Only administrators can manage project's configuration.
     *
     * @deprecated To specify the type of principal, please refer administrator_roles.
     */
    administrators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of storage, network, and extensibility constraints to be applied when provisioning through this project.
     */
    constraints?: pulumi.Input<inputs.ProjectConstraints>;
    /**
     * The project custom properties which are added to all requests in this project.
     */
    customProperties?: pulumi.Input<{[key: string]: any}>;
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * The naming template to be used for resources provisioned in this project.
     */
    machineNamingTemplate?: pulumi.Input<string>;
    /**
     * Member users or groups associated with the project.
     */
    memberRoles?: pulumi.Input<pulumi.Input<inputs.ProjectMemberRole>[]>;
    /**
     * A list of member users associated with the project.
     *
     * @deprecated To specify the type of principal, please refer member_roles.
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A human-friendly name used as an identifier in APIs that support this option.
     */
    name?: pulumi.Input<string>;
    /**
     * The timeout that should be used for cloud template operations and provisioning tasks. The timeout is measured in seconds.
     */
    operationTimeout?: pulumi.Input<number>;
    /**
     * The placement policy that will be applied when selecting a cloud zone for provisioning. Must be one of `DEFAULT` or `SPREAD`.
     */
    placementPolicy?: pulumi.Input<string>;
    /**
     * Specifies whether the resources in this projects are shared or not. If not set default will be used.
     */
    sharedResources?: pulumi.Input<boolean>;
    /**
     * Viewer users or groups associated with the project.
     */
    viewerRoles?: pulumi.Input<pulumi.Input<inputs.ProjectViewerRole>[]>;
    /**
     * A list of viewer users associated with the project.
     *
     * @deprecated To specify the type of principal, please refer viewer_roles.
     */
    viewers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of configurations for zone assignment to a project.
     */
    zoneAssignments?: pulumi.Input<pulumi.Input<inputs.ProjectZoneAssignment>[]>;
}
