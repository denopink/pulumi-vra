// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 * ### S
 * This is an example of how to create a flavor profile resource.
 *
 * **Flavor profile:**
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vra from "@pulumi/vra";
 *
 * const my_flavor_profile = new vra.FlavorProfile("my-flavor-profile", {
 *     description: "my flavor",
 *     flavorMappings: [
 *         {
 *             instanceType: "t2.small",
 *             name: "small",
 *         },
 *         {
 *             instanceType: "t2.medium",
 *             name: "medium",
 *         },
 *     ],
 *     regionId: vra_region_us_east_1_region.id,
 * });
 * ```
 *
 * An flavor profile resource supports the following arguments:
 */
export class FlavorProfile extends pulumi.CustomResource {
    /**
     * Get an existing FlavorProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlavorProfileState, opts?: pulumi.CustomResourceOptions): FlavorProfile {
        return new FlavorProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vra:index/flavorProfile:FlavorProfile';

    /**
     * Returns true if the given object is an instance of FlavorProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlavorProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlavorProfile.__pulumiType;
    }

    /**
     * The ID of the cloud account this entity belongs to.
     */
    public /*out*/ readonly cloudAccountId!: pulumi.Output<string>;
    /**
     * Date when  entity was created. Date and time format is ISO 8601 and UTC.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A human-friendly description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the external region that is associated with the flavor profile.
     */
    public /*out*/ readonly externalRegionId!: pulumi.Output<string>;
    /**
     * Map between global fabric flavor keys and fabric flavor descriptions.
     */
    public readonly flavorMappings!: pulumi.Output<outputs.FlavorProfileFlavorMapping[] | undefined>;
    /**
     * HATEOAS of entity.
     */
    public /*out*/ readonly links!: pulumi.Output<outputs.FlavorProfileLink[]>;
    /**
     * A human-friendly name used as an identifier in APIs that support this option.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * ID of organization that entity belongs to.
     */
    public /*out*/ readonly orgId!: pulumi.Output<string>;
    /**
     * Email of entity owner.
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * The id of the region for which this profile is defined as in vRealize Automation(vRA).
     */
    public readonly regionId!: pulumi.Output<string>;
    /**
     * Date when the entity was last updated. Date and time format is ISO 8601 and UTC.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a FlavorProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlavorProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlavorProfileArgs | FlavorProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FlavorProfileState | undefined;
            resourceInputs["cloudAccountId"] = state ? state.cloudAccountId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["externalRegionId"] = state ? state.externalRegionId : undefined;
            resourceInputs["flavorMappings"] = state ? state.flavorMappings : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as FlavorProfileArgs | undefined;
            if ((!args || args.regionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'regionId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["flavorMappings"] = args ? args.flavorMappings : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["regionId"] = args ? args.regionId : undefined;
            resourceInputs["cloudAccountId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["externalRegionId"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["orgId"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FlavorProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FlavorProfile resources.
 */
export interface FlavorProfileState {
    /**
     * The ID of the cloud account this entity belongs to.
     */
    cloudAccountId?: pulumi.Input<string>;
    /**
     * Date when  entity was created. Date and time format is ISO 8601 and UTC.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the external region that is associated with the flavor profile.
     */
    externalRegionId?: pulumi.Input<string>;
    /**
     * Map between global fabric flavor keys and fabric flavor descriptions.
     */
    flavorMappings?: pulumi.Input<pulumi.Input<inputs.FlavorProfileFlavorMapping>[]>;
    /**
     * HATEOAS of entity.
     */
    links?: pulumi.Input<pulumi.Input<inputs.FlavorProfileLink>[]>;
    /**
     * A human-friendly name used as an identifier in APIs that support this option.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of organization that entity belongs to.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Email of entity owner.
     */
    owner?: pulumi.Input<string>;
    /**
     * The id of the region for which this profile is defined as in vRealize Automation(vRA).
     */
    regionId?: pulumi.Input<string>;
    /**
     * Date when the entity was last updated. Date and time format is ISO 8601 and UTC.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FlavorProfile resource.
 */
export interface FlavorProfileArgs {
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * Map between global fabric flavor keys and fabric flavor descriptions.
     */
    flavorMappings?: pulumi.Input<pulumi.Input<inputs.FlavorProfileFlavorMapping>[]>;
    /**
     * A human-friendly name used as an identifier in APIs that support this option.
     */
    name?: pulumi.Input<string>;
    /**
     * The id of the region for which this profile is defined as in vRealize Automation(vRA).
     */
    regionId: pulumi.Input<string>;
}
