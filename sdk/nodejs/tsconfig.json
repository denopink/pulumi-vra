{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "blockdevice/blockDevice.ts",
        "blockdevice/getBlockDevice.ts",
        "blockdevice/getSnapshots.ts",
        "blockdevice/index.ts",
        "blockdevice/snapshot.ts",
        "blueprint/blueprint.ts",
        "blueprint/blueprintVersion.ts",
        "blueprint/getBlueprint.ts",
        "blueprint/getVersion.ts",
        "blueprint/index.ts",
        "catalog/getItem.ts",
        "catalog/getItemEntitlement.ts",
        "catalog/getSourceBlueprint.ts",
        "catalog/getSourceEntitlement.ts",
        "catalog/index.ts",
        "catalog/itemEntitlement.ts",
        "catalog/sourceBlueprint.ts",
        "catalog/sourceEntitlement.ts",
        "cloudaccount/aws.ts",
        "cloudaccount/azure.ts",
        "cloudaccount/gcp.ts",
        "cloudaccount/getAws.ts",
        "cloudaccount/getAzure.ts",
        "cloudaccount/getGcp.ts",
        "cloudaccount/getNsxt.ts",
        "cloudaccount/getNsxv.ts",
        "cloudaccount/getVSphere.ts",
        "cloudaccount/getVmc.ts",
        "cloudaccount/index.ts",
        "cloudaccount/nsxt.ts",
        "cloudaccount/nsxv.ts",
        "cloudaccount/vmc.ts",
        "cloudaccount/vsphere.ts",
        "config/index.ts",
        "config/vars.ts",
        "contentsource/contentSource.ts",
        "contentsource/index.ts",
        "datacollector/getDataCollector.ts",
        "datacollector/index.ts",
        "deployment/deployment.ts",
        "deployment/getDeployment.ts",
        "deployment/index.ts",
        "fabric/compute.ts",
        "fabric/datastoreVSphere.ts",
        "fabric/getCompute.ts",
        "fabric/getDatastoreVSphere.ts",
        "fabric/getNetwork.ts",
        "fabric/getStorageAccountAzure.ts",
        "fabric/getStoragePolicyVSphere.ts",
        "fabric/index.ts",
        "fabric/networkVSphere.ts",
        "flavor/index.ts",
        "flavor/profile.ts",
        "image/getImage.ts",
        "image/getProfile.ts",
        "image/index.ts",
        "image/profile.ts",
        "index.ts",
        "loadbalancer/index.ts",
        "loadbalancer/loadBalancer.ts",
        "machine/getMachine.ts",
        "machine/index.ts",
        "machine/machine.ts",
        "network/getDomain.ts",
        "network/getNetwork.ts",
        "network/getProfile.ts",
        "network/index.ts",
        "network/ipRange.ts",
        "network/network.ts",
        "network/profile.ts",
        "project/getProject.ts",
        "project/index.ts",
        "project/project.ts",
        "provider.ts",
        "region/getEnumeration.ts",
        "region/getEnumerationAws.ts",
        "region/getEnumerationAzure.ts",
        "region/getEnumerationGcp.ts",
        "region/getEnumerationVSphere.ts",
        "region/getEnumerationVmc.ts",
        "region/getRegion.ts",
        "region/index.ts",
        "securitygroup/getSecurityGroup.ts",
        "securitygroup/index.ts",
        "storageprofile/aws.ts",
        "storageprofile/azure.ts",
        "storageprofile/getAws.ts",
        "storageprofile/getAzure.ts",
        "storageprofile/getStorageProfile.ts",
        "storageprofile/getVSphere.ts",
        "storageprofile/index.ts",
        "storageprofile/storageProfile.ts",
        "storageprofile/vsphere.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "zone/getZone.ts",
        "zone/index.ts",
        "zone/zone.ts"
    ]
}
