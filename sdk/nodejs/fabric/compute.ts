// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Updates a VMware vRealize Automation fabricCompute resource.
 *
 * ## Example Usage
 * ### S
 *
 * You cannot create a fabric compute resource, however you can import it using the command specified in the import section below.
 *
 * Once a resource is imported, you can update it as shown below:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vra from "@pulumi/vra";
 *
 * const thisCompute = new vra.fabric.Compute("this", {
 *     tags: [{
 *         key: "foo",
 *         value: "bar",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * To import the fabric compute resource, use the ID as in the following example
 *
 * ```sh
 *  $ pulumi import vra:fabric/compute:Compute this 88fdea8b-92ed-4aa9-b6ee-4670412961b0
 * ```
 */
export class Compute extends pulumi.CustomResource {
    /**
     * Get an existing Compute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeState, opts?: pulumi.CustomResourceOptions): Compute {
        return new Compute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vra:fabric/compute:Compute';

    /**
     * Returns true if the given object is an instance of Compute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Compute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Compute.__pulumiType;
    }

    /**
     * Date when the entity was created. The date is in ISO 8601 and UTC.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A list of key value pair of custom properties for the fabric compute resource.
     */
    public /*out*/ readonly customProperties!: pulumi.Output<{[key: string]: any}>;
    /**
     * A human-friendly description.
     */
    public /*out*/ readonly description!: pulumi.Output<string>;
    /**
     * The id of the external entity on the provider side.
     */
    public /*out*/ readonly externalId!: pulumi.Output<string>;
    /**
     * The external region id of the fabric compute.
     */
    public /*out*/ readonly externalRegionId!: pulumi.Output<string>;
    /**
     * The external zone id of the fabric compute.
     */
    public /*out*/ readonly externalZoneId!: pulumi.Output<string>;
    /**
     * Lifecycle status of the compute instance.
     */
    public /*out*/ readonly lifecycleState!: pulumi.Output<string>;
    /**
     * HATEOAS of the entity.
     */
    public /*out*/ readonly links!: pulumi.Output<outputs.fabric.ComputeLink[]>;
    /**
     * A human-friendly name used as an identifier for the fabric compute resource instance.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The id of the organization this entity belongs to.
     */
    public /*out*/ readonly orgId!: pulumi.Output<string>;
    /**
     * Email of the user that owns the entity.
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * Power state of fabric compute instance.
     */
    public /*out*/ readonly powerState!: pulumi.Output<string>;
    /**
     * A set of tag keys and optional values that were set on this resource:
     */
    public readonly tags!: pulumi.Output<outputs.fabric.ComputeTag[]>;
    /**
     * Type of the fabric compute instance.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Date when the entity was last updated. The date is ISO 8601 and UTC.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Compute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ComputeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeArgs | ComputeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["customProperties"] = state ? state.customProperties : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["externalRegionId"] = state ? state.externalRegionId : undefined;
            resourceInputs["externalZoneId"] = state ? state.externalZoneId : undefined;
            resourceInputs["lifecycleState"] = state ? state.lifecycleState : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["powerState"] = state ? state.powerState : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as ComputeArgs | undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["customProperties"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["externalId"] = undefined /*out*/;
            resourceInputs["externalRegionId"] = undefined /*out*/;
            resourceInputs["externalZoneId"] = undefined /*out*/;
            resourceInputs["lifecycleState"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["orgId"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["powerState"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Compute.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Compute resources.
 */
export interface ComputeState {
    /**
     * Date when the entity was created. The date is in ISO 8601 and UTC.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * A list of key value pair of custom properties for the fabric compute resource.
     */
    customProperties?: pulumi.Input<{[key: string]: any}>;
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * The id of the external entity on the provider side.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The external region id of the fabric compute.
     */
    externalRegionId?: pulumi.Input<string>;
    /**
     * The external zone id of the fabric compute.
     */
    externalZoneId?: pulumi.Input<string>;
    /**
     * Lifecycle status of the compute instance.
     */
    lifecycleState?: pulumi.Input<string>;
    /**
     * HATEOAS of the entity.
     */
    links?: pulumi.Input<pulumi.Input<inputs.fabric.ComputeLink>[]>;
    /**
     * A human-friendly name used as an identifier for the fabric compute resource instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The id of the organization this entity belongs to.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Email of the user that owns the entity.
     */
    owner?: pulumi.Input<string>;
    /**
     * Power state of fabric compute instance.
     */
    powerState?: pulumi.Input<string>;
    /**
     * A set of tag keys and optional values that were set on this resource:
     */
    tags?: pulumi.Input<pulumi.Input<inputs.fabric.ComputeTag>[]>;
    /**
     * Type of the fabric compute instance.
     */
    type?: pulumi.Input<string>;
    /**
     * Date when the entity was last updated. The date is ISO 8601 and UTC.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Compute resource.
 */
export interface ComputeArgs {
    /**
     * A set of tag keys and optional values that were set on this resource:
     */
    tags?: pulumi.Input<pulumi.Input<inputs.fabric.ComputeTag>[]>;
}
